
CO3010_Lab3_Buttons-Switches.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003474  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000024  08003580  08003580  00004580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080035a4  080035a4  000050a0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080035a4  080035a4  000050a0  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080035a4  080035a4  000050a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080035a4  080035a4  000045a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080035a8  080035a8  000045a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000a0  20000000  080035ac  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000d8  200000a0  0800364c  000050a0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000178  0800364c  00005178  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000050a0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008b68  00000000  00000000  000050c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001e07  00000000  00000000  0000dc31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b78  00000000  00000000  0000fa38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008a9  00000000  00000000  000105b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017266  00000000  00000000  00010e59  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000d713  00000000  00000000  000280bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008294b  00000000  00000000  000357d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b811d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002c48  00000000  00000000  000b8160  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  000bada8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000a0 	.word	0x200000a0
 8000128:	00000000 	.word	0x00000000
 800012c:	08003568 	.word	0x08003568

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000a4 	.word	0x200000a4
 8000148:	08003568 	.word	0x08003568

0800014c <set_on_4digits>:
 */

#include "7SEG_display.h"

void set_on_4digits()
{
 800014c:	b480      	push	{r7}
 800014e:	af00      	add	r7, sp, #0
	status_4digits[0] = LED_ON;
 8000150:	4b07      	ldr	r3, [pc, #28]	@ (8000170 <set_on_4digits+0x24>)
 8000152:	2200      	movs	r2, #0
 8000154:	601a      	str	r2, [r3, #0]
	status_4digits[1] = LED_ON;
 8000156:	4b06      	ldr	r3, [pc, #24]	@ (8000170 <set_on_4digits+0x24>)
 8000158:	2200      	movs	r2, #0
 800015a:	605a      	str	r2, [r3, #4]
	status_4digits[2] = LED_ON;
 800015c:	4b04      	ldr	r3, [pc, #16]	@ (8000170 <set_on_4digits+0x24>)
 800015e:	2200      	movs	r2, #0
 8000160:	609a      	str	r2, [r3, #8]
	status_4digits[3] = LED_ON;
 8000162:	4b03      	ldr	r3, [pc, #12]	@ (8000170 <set_on_4digits+0x24>)
 8000164:	2200      	movs	r2, #0
 8000166:	60da      	str	r2, [r3, #12]
}
 8000168:	bf00      	nop
 800016a:	46bd      	mov	sp, r7
 800016c:	bc80      	pop	{r7}
 800016e:	4770      	bx	lr
 8000170:	200000c4 	.word	0x200000c4

08000174 <unable_4digit>:

void unable_4digit() {
 8000174:	b580      	push	{r7, lr}
 8000176:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(EN_0_GPIO_Port, EN_0_Pin, DISABLE);
 8000178:	2200      	movs	r2, #0
 800017a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800017e:	480b      	ldr	r0, [pc, #44]	@ (80001ac <unable_4digit+0x38>)
 8000180:	f002 f9db 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EN_1_GPIO_Port, EN_1_Pin, DISABLE);
 8000184:	2200      	movs	r2, #0
 8000186:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800018a:	4808      	ldr	r0, [pc, #32]	@ (80001ac <unable_4digit+0x38>)
 800018c:	f002 f9d5 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EN_2_GPIO_Port, EN_2_Pin, DISABLE);
 8000190:	2200      	movs	r2, #0
 8000192:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000196:	4805      	ldr	r0, [pc, #20]	@ (80001ac <unable_4digit+0x38>)
 8000198:	f002 f9cf 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EN_3_GPIO_Port, EN_3_Pin, DISABLE);
 800019c:	2200      	movs	r2, #0
 800019e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80001a2:	4802      	ldr	r0, [pc, #8]	@ (80001ac <unable_4digit+0x38>)
 80001a4:	f002 f9c9 	bl	800253a <HAL_GPIO_WritePin>
}
 80001a8:	bf00      	nop
 80001aa:	bd80      	pop	{r7, pc}
 80001ac:	40010800 	.word	0x40010800

080001b0 <display_4digits>:

void display_4digits() {
 80001b0:	b580      	push	{r7, lr}
 80001b2:	af00      	add	r7, sp, #0
	if ((status_4digits[led_7seg_index] == LED_ON) &&
 80001b4:	4b1b      	ldr	r3, [pc, #108]	@ (8000224 <display_4digits+0x74>)
 80001b6:	681b      	ldr	r3, [r3, #0]
 80001b8:	4a1b      	ldr	r2, [pc, #108]	@ (8000228 <display_4digits+0x78>)
 80001ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80001be:	2b00      	cmp	r3, #0
 80001c0:	d121      	bne.n	8000206 <display_4digits+0x56>
		((led_7seg_index == 1 && led_7seg_buffer[0]) || (led_7seg_index == 3 && led_7seg_buffer[2])
 80001c2:	4b18      	ldr	r3, [pc, #96]	@ (8000224 <display_4digits+0x74>)
 80001c4:	681b      	ldr	r3, [r3, #0]
	if ((status_4digits[led_7seg_index] == LED_ON) &&
 80001c6:	2b01      	cmp	r3, #1
 80001c8:	d103      	bne.n	80001d2 <display_4digits+0x22>
		((led_7seg_index == 1 && led_7seg_buffer[0]) || (led_7seg_index == 3 && led_7seg_buffer[2])
 80001ca:	4b18      	ldr	r3, [pc, #96]	@ (800022c <display_4digits+0x7c>)
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	2b00      	cmp	r3, #0
 80001d0:	d10e      	bne.n	80001f0 <display_4digits+0x40>
 80001d2:	4b14      	ldr	r3, [pc, #80]	@ (8000224 <display_4digits+0x74>)
 80001d4:	681b      	ldr	r3, [r3, #0]
 80001d6:	2b03      	cmp	r3, #3
 80001d8:	d103      	bne.n	80001e2 <display_4digits+0x32>
 80001da:	4b14      	ldr	r3, [pc, #80]	@ (800022c <display_4digits+0x7c>)
 80001dc:	689b      	ldr	r3, [r3, #8]
 80001de:	2b00      	cmp	r3, #0
 80001e0:	d106      	bne.n	80001f0 <display_4digits+0x40>
					    							 || led_7seg_buffer[led_7seg_index]))
 80001e2:	4b10      	ldr	r3, [pc, #64]	@ (8000224 <display_4digits+0x74>)
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	4a11      	ldr	r2, [pc, #68]	@ (800022c <display_4digits+0x7c>)
 80001e8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80001ec:	2b00      	cmp	r3, #0
 80001ee:	d00a      	beq.n	8000206 <display_4digits+0x56>
	{
		display_a_digit(led_7seg_index, led_7seg_buffer[led_7seg_index]);
 80001f0:	4b0c      	ldr	r3, [pc, #48]	@ (8000224 <display_4digits+0x74>)
 80001f2:	681a      	ldr	r2, [r3, #0]
 80001f4:	4b0b      	ldr	r3, [pc, #44]	@ (8000224 <display_4digits+0x74>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	490c      	ldr	r1, [pc, #48]	@ (800022c <display_4digits+0x7c>)
 80001fa:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80001fe:	4619      	mov	r1, r3
 8000200:	4610      	mov	r0, r2
 8000202:	f000 f86b 	bl	80002dc <display_a_digit>
	}
	++led_7seg_index;
 8000206:	4b07      	ldr	r3, [pc, #28]	@ (8000224 <display_4digits+0x74>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	3301      	adds	r3, #1
 800020c:	4a05      	ldr	r2, [pc, #20]	@ (8000224 <display_4digits+0x74>)
 800020e:	6013      	str	r3, [r2, #0]
	if (led_7seg_index > 3)
 8000210:	4b04      	ldr	r3, [pc, #16]	@ (8000224 <display_4digits+0x74>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	2b03      	cmp	r3, #3
 8000216:	dd02      	ble.n	800021e <display_4digits+0x6e>
	{
		led_7seg_index = 0;
 8000218:	4b02      	ldr	r3, [pc, #8]	@ (8000224 <display_4digits+0x74>)
 800021a:	2200      	movs	r2, #0
 800021c:	601a      	str	r2, [r3, #0]
	}
}
 800021e:	bf00      	nop
 8000220:	bd80      	pop	{r7, pc}
 8000222:	bf00      	nop
 8000224:	200000c0 	.word	0x200000c0
 8000228:	200000c4 	.word	0x200000c4
 800022c:	2000006c 	.word	0x2000006c

08000230 <update_led_7seg_buffer>:

void update_led_7seg_buffer()
{
 8000230:	b480      	push	{r7}
 8000232:	af00      	add	r7, sp, #0
	led_7seg_buffer[0] = (counter_way0 / 10) % 10;
 8000234:	4b25      	ldr	r3, [pc, #148]	@ (80002cc <update_led_7seg_buffer+0x9c>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a25      	ldr	r2, [pc, #148]	@ (80002d0 <update_led_7seg_buffer+0xa0>)
 800023a:	fb82 1203 	smull	r1, r2, r2, r3
 800023e:	1092      	asrs	r2, r2, #2
 8000240:	17db      	asrs	r3, r3, #31
 8000242:	1ad1      	subs	r1, r2, r3
 8000244:	4b22      	ldr	r3, [pc, #136]	@ (80002d0 <update_led_7seg_buffer+0xa0>)
 8000246:	fb83 2301 	smull	r2, r3, r3, r1
 800024a:	109a      	asrs	r2, r3, #2
 800024c:	17cb      	asrs	r3, r1, #31
 800024e:	1ad2      	subs	r2, r2, r3
 8000250:	4613      	mov	r3, r2
 8000252:	009b      	lsls	r3, r3, #2
 8000254:	4413      	add	r3, r2
 8000256:	005b      	lsls	r3, r3, #1
 8000258:	1aca      	subs	r2, r1, r3
 800025a:	4b1e      	ldr	r3, [pc, #120]	@ (80002d4 <update_led_7seg_buffer+0xa4>)
 800025c:	601a      	str	r2, [r3, #0]
	led_7seg_buffer[1] = counter_way0 % 10;
 800025e:	4b1b      	ldr	r3, [pc, #108]	@ (80002cc <update_led_7seg_buffer+0x9c>)
 8000260:	6819      	ldr	r1, [r3, #0]
 8000262:	4b1b      	ldr	r3, [pc, #108]	@ (80002d0 <update_led_7seg_buffer+0xa0>)
 8000264:	fb83 2301 	smull	r2, r3, r3, r1
 8000268:	109a      	asrs	r2, r3, #2
 800026a:	17cb      	asrs	r3, r1, #31
 800026c:	1ad2      	subs	r2, r2, r3
 800026e:	4613      	mov	r3, r2
 8000270:	009b      	lsls	r3, r3, #2
 8000272:	4413      	add	r3, r2
 8000274:	005b      	lsls	r3, r3, #1
 8000276:	1aca      	subs	r2, r1, r3
 8000278:	4b16      	ldr	r3, [pc, #88]	@ (80002d4 <update_led_7seg_buffer+0xa4>)
 800027a:	605a      	str	r2, [r3, #4]
	led_7seg_buffer[2] = (counter_way1 / 10) % 10;
 800027c:	4b16      	ldr	r3, [pc, #88]	@ (80002d8 <update_led_7seg_buffer+0xa8>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a13      	ldr	r2, [pc, #76]	@ (80002d0 <update_led_7seg_buffer+0xa0>)
 8000282:	fb82 1203 	smull	r1, r2, r2, r3
 8000286:	1092      	asrs	r2, r2, #2
 8000288:	17db      	asrs	r3, r3, #31
 800028a:	1ad1      	subs	r1, r2, r3
 800028c:	4b10      	ldr	r3, [pc, #64]	@ (80002d0 <update_led_7seg_buffer+0xa0>)
 800028e:	fb83 2301 	smull	r2, r3, r3, r1
 8000292:	109a      	asrs	r2, r3, #2
 8000294:	17cb      	asrs	r3, r1, #31
 8000296:	1ad2      	subs	r2, r2, r3
 8000298:	4613      	mov	r3, r2
 800029a:	009b      	lsls	r3, r3, #2
 800029c:	4413      	add	r3, r2
 800029e:	005b      	lsls	r3, r3, #1
 80002a0:	1aca      	subs	r2, r1, r3
 80002a2:	4b0c      	ldr	r3, [pc, #48]	@ (80002d4 <update_led_7seg_buffer+0xa4>)
 80002a4:	609a      	str	r2, [r3, #8]
	led_7seg_buffer[3] = counter_way1 % 10;
 80002a6:	4b0c      	ldr	r3, [pc, #48]	@ (80002d8 <update_led_7seg_buffer+0xa8>)
 80002a8:	6819      	ldr	r1, [r3, #0]
 80002aa:	4b09      	ldr	r3, [pc, #36]	@ (80002d0 <update_led_7seg_buffer+0xa0>)
 80002ac:	fb83 2301 	smull	r2, r3, r3, r1
 80002b0:	109a      	asrs	r2, r3, #2
 80002b2:	17cb      	asrs	r3, r1, #31
 80002b4:	1ad2      	subs	r2, r2, r3
 80002b6:	4613      	mov	r3, r2
 80002b8:	009b      	lsls	r3, r3, #2
 80002ba:	4413      	add	r3, r2
 80002bc:	005b      	lsls	r3, r3, #1
 80002be:	1aca      	subs	r2, r1, r3
 80002c0:	4b04      	ldr	r3, [pc, #16]	@ (80002d4 <update_led_7seg_buffer+0xa4>)
 80002c2:	60da      	str	r2, [r3, #12]
}
 80002c4:	bf00      	nop
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr
 80002cc:	200000d4 	.word	0x200000d4
 80002d0:	66666667 	.word	0x66666667
 80002d4:	2000006c 	.word	0x2000006c
 80002d8:	200000d8 	.word	0x200000d8

080002dc <display_a_digit>:

void display_a_digit(int digit, int num)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	b082      	sub	sp, #8
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	6078      	str	r0, [r7, #4]
 80002e4:	6039      	str	r1, [r7, #0]
	unable_4digit();
 80002e6:	f7ff ff45 	bl	8000174 <unable_4digit>
	display_number(num);
 80002ea:	6838      	ldr	r0, [r7, #0]
 80002ec:	f000 f808 	bl	8000300 <display_number>
	enable_digit(digit);
 80002f0:	6878      	ldr	r0, [r7, #4]
 80002f2:	f000 f9f1 	bl	80006d8 <enable_digit>
}
 80002f6:	bf00      	nop
 80002f8:	3708      	adds	r7, #8
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}
	...

08000300 <display_number>:

void display_number(int num)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b082      	sub	sp, #8
 8000304:	af00      	add	r7, sp, #0
 8000306:	6078      	str	r0, [r7, #4]
	switch (num) {
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	2b09      	cmp	r3, #9
 800030c:	f200 81b4 	bhi.w	8000678 <display_number+0x378>
 8000310:	a201      	add	r2, pc, #4	@ (adr r2, 8000318 <display_number+0x18>)
 8000312:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000316:	bf00      	nop
 8000318:	08000341 	.word	0x08000341
 800031c:	08000393 	.word	0x08000393
 8000320:	080003e5 	.word	0x080003e5
 8000324:	08000437 	.word	0x08000437
 8000328:	08000489 	.word	0x08000489
 800032c:	080004db 	.word	0x080004db
 8000330:	0800052d 	.word	0x0800052d
 8000334:	0800057f 	.word	0x0800057f
 8000338:	080005d1 	.word	0x080005d1
 800033c:	08000623 	.word	0x08000623
		case 0:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 8000340:	2200      	movs	r2, #0
 8000342:	2101      	movs	r1, #1
 8000344:	48cb      	ldr	r0, [pc, #812]	@ (8000674 <display_number+0x374>)
 8000346:	f002 f8f8 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 800034a:	2200      	movs	r2, #0
 800034c:	2102      	movs	r1, #2
 800034e:	48c9      	ldr	r0, [pc, #804]	@ (8000674 <display_number+0x374>)
 8000350:	f002 f8f3 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 8000354:	2200      	movs	r2, #0
 8000356:	2104      	movs	r1, #4
 8000358:	48c6      	ldr	r0, [pc, #792]	@ (8000674 <display_number+0x374>)
 800035a:	f002 f8ee 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_ON);
 800035e:	2200      	movs	r2, #0
 8000360:	2108      	movs	r1, #8
 8000362:	48c4      	ldr	r0, [pc, #784]	@ (8000674 <display_number+0x374>)
 8000364:	f002 f8e9 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_ON);
 8000368:	2200      	movs	r2, #0
 800036a:	2110      	movs	r1, #16
 800036c:	48c1      	ldr	r0, [pc, #772]	@ (8000674 <display_number+0x374>)
 800036e:	f002 f8e4 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_ON);
 8000372:	2200      	movs	r2, #0
 8000374:	2120      	movs	r1, #32
 8000376:	48bf      	ldr	r0, [pc, #764]	@ (8000674 <display_number+0x374>)
 8000378:	f002 f8df 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_OFF);
 800037c:	2201      	movs	r2, #1
 800037e:	2140      	movs	r1, #64	@ 0x40
 8000380:	48bc      	ldr	r0, [pc, #752]	@ (8000674 <display_number+0x374>)
 8000382:	f002 f8da 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 8000386:	2201      	movs	r2, #1
 8000388:	2180      	movs	r1, #128	@ 0x80
 800038a:	48ba      	ldr	r0, [pc, #744]	@ (8000674 <display_number+0x374>)
 800038c:	f002 f8d5 	bl	800253a <HAL_GPIO_WritePin>
			break;
 8000390:	e19b      	b.n	80006ca <display_number+0x3ca>
		case 1:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_OFF);
 8000392:	2201      	movs	r2, #1
 8000394:	2101      	movs	r1, #1
 8000396:	48b7      	ldr	r0, [pc, #732]	@ (8000674 <display_number+0x374>)
 8000398:	f002 f8cf 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 800039c:	2200      	movs	r2, #0
 800039e:	2102      	movs	r1, #2
 80003a0:	48b4      	ldr	r0, [pc, #720]	@ (8000674 <display_number+0x374>)
 80003a2:	f002 f8ca 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 80003a6:	2200      	movs	r2, #0
 80003a8:	2104      	movs	r1, #4
 80003aa:	48b2      	ldr	r0, [pc, #712]	@ (8000674 <display_number+0x374>)
 80003ac:	f002 f8c5 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_OFF);
 80003b0:	2201      	movs	r2, #1
 80003b2:	2108      	movs	r1, #8
 80003b4:	48af      	ldr	r0, [pc, #700]	@ (8000674 <display_number+0x374>)
 80003b6:	f002 f8c0 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_OFF);
 80003ba:	2201      	movs	r2, #1
 80003bc:	2110      	movs	r1, #16
 80003be:	48ad      	ldr	r0, [pc, #692]	@ (8000674 <display_number+0x374>)
 80003c0:	f002 f8bb 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_OFF);
 80003c4:	2201      	movs	r2, #1
 80003c6:	2120      	movs	r1, #32
 80003c8:	48aa      	ldr	r0, [pc, #680]	@ (8000674 <display_number+0x374>)
 80003ca:	f002 f8b6 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_OFF);
 80003ce:	2201      	movs	r2, #1
 80003d0:	2140      	movs	r1, #64	@ 0x40
 80003d2:	48a8      	ldr	r0, [pc, #672]	@ (8000674 <display_number+0x374>)
 80003d4:	f002 f8b1 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 80003d8:	2201      	movs	r2, #1
 80003da:	2180      	movs	r1, #128	@ 0x80
 80003dc:	48a5      	ldr	r0, [pc, #660]	@ (8000674 <display_number+0x374>)
 80003de:	f002 f8ac 	bl	800253a <HAL_GPIO_WritePin>
			break;
 80003e2:	e172      	b.n	80006ca <display_number+0x3ca>
		case 2:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 80003e4:	2200      	movs	r2, #0
 80003e6:	2101      	movs	r1, #1
 80003e8:	48a2      	ldr	r0, [pc, #648]	@ (8000674 <display_number+0x374>)
 80003ea:	f002 f8a6 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 80003ee:	2200      	movs	r2, #0
 80003f0:	2102      	movs	r1, #2
 80003f2:	48a0      	ldr	r0, [pc, #640]	@ (8000674 <display_number+0x374>)
 80003f4:	f002 f8a1 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_OFF);
 80003f8:	2201      	movs	r2, #1
 80003fa:	2104      	movs	r1, #4
 80003fc:	489d      	ldr	r0, [pc, #628]	@ (8000674 <display_number+0x374>)
 80003fe:	f002 f89c 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_ON);
 8000402:	2200      	movs	r2, #0
 8000404:	2108      	movs	r1, #8
 8000406:	489b      	ldr	r0, [pc, #620]	@ (8000674 <display_number+0x374>)
 8000408:	f002 f897 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_ON);
 800040c:	2200      	movs	r2, #0
 800040e:	2110      	movs	r1, #16
 8000410:	4898      	ldr	r0, [pc, #608]	@ (8000674 <display_number+0x374>)
 8000412:	f002 f892 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_OFF);
 8000416:	2201      	movs	r2, #1
 8000418:	2120      	movs	r1, #32
 800041a:	4896      	ldr	r0, [pc, #600]	@ (8000674 <display_number+0x374>)
 800041c:	f002 f88d 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_ON);
 8000420:	2200      	movs	r2, #0
 8000422:	2140      	movs	r1, #64	@ 0x40
 8000424:	4893      	ldr	r0, [pc, #588]	@ (8000674 <display_number+0x374>)
 8000426:	f002 f888 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 800042a:	2201      	movs	r2, #1
 800042c:	2180      	movs	r1, #128	@ 0x80
 800042e:	4891      	ldr	r0, [pc, #580]	@ (8000674 <display_number+0x374>)
 8000430:	f002 f883 	bl	800253a <HAL_GPIO_WritePin>
			break;
 8000434:	e149      	b.n	80006ca <display_number+0x3ca>
		case 3:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 8000436:	2200      	movs	r2, #0
 8000438:	2101      	movs	r1, #1
 800043a:	488e      	ldr	r0, [pc, #568]	@ (8000674 <display_number+0x374>)
 800043c:	f002 f87d 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 8000440:	2200      	movs	r2, #0
 8000442:	2102      	movs	r1, #2
 8000444:	488b      	ldr	r0, [pc, #556]	@ (8000674 <display_number+0x374>)
 8000446:	f002 f878 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 800044a:	2200      	movs	r2, #0
 800044c:	2104      	movs	r1, #4
 800044e:	4889      	ldr	r0, [pc, #548]	@ (8000674 <display_number+0x374>)
 8000450:	f002 f873 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_ON);
 8000454:	2200      	movs	r2, #0
 8000456:	2108      	movs	r1, #8
 8000458:	4886      	ldr	r0, [pc, #536]	@ (8000674 <display_number+0x374>)
 800045a:	f002 f86e 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_OFF);
 800045e:	2201      	movs	r2, #1
 8000460:	2110      	movs	r1, #16
 8000462:	4884      	ldr	r0, [pc, #528]	@ (8000674 <display_number+0x374>)
 8000464:	f002 f869 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_OFF);
 8000468:	2201      	movs	r2, #1
 800046a:	2120      	movs	r1, #32
 800046c:	4881      	ldr	r0, [pc, #516]	@ (8000674 <display_number+0x374>)
 800046e:	f002 f864 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_ON);
 8000472:	2200      	movs	r2, #0
 8000474:	2140      	movs	r1, #64	@ 0x40
 8000476:	487f      	ldr	r0, [pc, #508]	@ (8000674 <display_number+0x374>)
 8000478:	f002 f85f 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 800047c:	2201      	movs	r2, #1
 800047e:	2180      	movs	r1, #128	@ 0x80
 8000480:	487c      	ldr	r0, [pc, #496]	@ (8000674 <display_number+0x374>)
 8000482:	f002 f85a 	bl	800253a <HAL_GPIO_WritePin>
			break;
 8000486:	e120      	b.n	80006ca <display_number+0x3ca>
		case 4:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_OFF);
 8000488:	2201      	movs	r2, #1
 800048a:	2101      	movs	r1, #1
 800048c:	4879      	ldr	r0, [pc, #484]	@ (8000674 <display_number+0x374>)
 800048e:	f002 f854 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 8000492:	2200      	movs	r2, #0
 8000494:	2102      	movs	r1, #2
 8000496:	4877      	ldr	r0, [pc, #476]	@ (8000674 <display_number+0x374>)
 8000498:	f002 f84f 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 800049c:	2200      	movs	r2, #0
 800049e:	2104      	movs	r1, #4
 80004a0:	4874      	ldr	r0, [pc, #464]	@ (8000674 <display_number+0x374>)
 80004a2:	f002 f84a 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_OFF);
 80004a6:	2201      	movs	r2, #1
 80004a8:	2108      	movs	r1, #8
 80004aa:	4872      	ldr	r0, [pc, #456]	@ (8000674 <display_number+0x374>)
 80004ac:	f002 f845 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_OFF);
 80004b0:	2201      	movs	r2, #1
 80004b2:	2110      	movs	r1, #16
 80004b4:	486f      	ldr	r0, [pc, #444]	@ (8000674 <display_number+0x374>)
 80004b6:	f002 f840 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_ON);
 80004ba:	2200      	movs	r2, #0
 80004bc:	2120      	movs	r1, #32
 80004be:	486d      	ldr	r0, [pc, #436]	@ (8000674 <display_number+0x374>)
 80004c0:	f002 f83b 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_ON);
 80004c4:	2200      	movs	r2, #0
 80004c6:	2140      	movs	r1, #64	@ 0x40
 80004c8:	486a      	ldr	r0, [pc, #424]	@ (8000674 <display_number+0x374>)
 80004ca:	f002 f836 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 80004ce:	2201      	movs	r2, #1
 80004d0:	2180      	movs	r1, #128	@ 0x80
 80004d2:	4868      	ldr	r0, [pc, #416]	@ (8000674 <display_number+0x374>)
 80004d4:	f002 f831 	bl	800253a <HAL_GPIO_WritePin>
			break;
 80004d8:	e0f7      	b.n	80006ca <display_number+0x3ca>
		case 5:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 80004da:	2200      	movs	r2, #0
 80004dc:	2101      	movs	r1, #1
 80004de:	4865      	ldr	r0, [pc, #404]	@ (8000674 <display_number+0x374>)
 80004e0:	f002 f82b 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_OFF);
 80004e4:	2201      	movs	r2, #1
 80004e6:	2102      	movs	r1, #2
 80004e8:	4862      	ldr	r0, [pc, #392]	@ (8000674 <display_number+0x374>)
 80004ea:	f002 f826 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 80004ee:	2200      	movs	r2, #0
 80004f0:	2104      	movs	r1, #4
 80004f2:	4860      	ldr	r0, [pc, #384]	@ (8000674 <display_number+0x374>)
 80004f4:	f002 f821 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_ON);
 80004f8:	2200      	movs	r2, #0
 80004fa:	2108      	movs	r1, #8
 80004fc:	485d      	ldr	r0, [pc, #372]	@ (8000674 <display_number+0x374>)
 80004fe:	f002 f81c 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_OFF);
 8000502:	2201      	movs	r2, #1
 8000504:	2110      	movs	r1, #16
 8000506:	485b      	ldr	r0, [pc, #364]	@ (8000674 <display_number+0x374>)
 8000508:	f002 f817 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_ON);
 800050c:	2200      	movs	r2, #0
 800050e:	2120      	movs	r1, #32
 8000510:	4858      	ldr	r0, [pc, #352]	@ (8000674 <display_number+0x374>)
 8000512:	f002 f812 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_ON);
 8000516:	2200      	movs	r2, #0
 8000518:	2140      	movs	r1, #64	@ 0x40
 800051a:	4856      	ldr	r0, [pc, #344]	@ (8000674 <display_number+0x374>)
 800051c:	f002 f80d 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 8000520:	2201      	movs	r2, #1
 8000522:	2180      	movs	r1, #128	@ 0x80
 8000524:	4853      	ldr	r0, [pc, #332]	@ (8000674 <display_number+0x374>)
 8000526:	f002 f808 	bl	800253a <HAL_GPIO_WritePin>
			break;
 800052a:	e0ce      	b.n	80006ca <display_number+0x3ca>
		case 6:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 800052c:	2200      	movs	r2, #0
 800052e:	2101      	movs	r1, #1
 8000530:	4850      	ldr	r0, [pc, #320]	@ (8000674 <display_number+0x374>)
 8000532:	f002 f802 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_OFF);
 8000536:	2201      	movs	r2, #1
 8000538:	2102      	movs	r1, #2
 800053a:	484e      	ldr	r0, [pc, #312]	@ (8000674 <display_number+0x374>)
 800053c:	f001 fffd 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 8000540:	2200      	movs	r2, #0
 8000542:	2104      	movs	r1, #4
 8000544:	484b      	ldr	r0, [pc, #300]	@ (8000674 <display_number+0x374>)
 8000546:	f001 fff8 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_ON);
 800054a:	2200      	movs	r2, #0
 800054c:	2108      	movs	r1, #8
 800054e:	4849      	ldr	r0, [pc, #292]	@ (8000674 <display_number+0x374>)
 8000550:	f001 fff3 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_ON);
 8000554:	2200      	movs	r2, #0
 8000556:	2110      	movs	r1, #16
 8000558:	4846      	ldr	r0, [pc, #280]	@ (8000674 <display_number+0x374>)
 800055a:	f001 ffee 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_ON);
 800055e:	2200      	movs	r2, #0
 8000560:	2120      	movs	r1, #32
 8000562:	4844      	ldr	r0, [pc, #272]	@ (8000674 <display_number+0x374>)
 8000564:	f001 ffe9 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_ON);
 8000568:	2200      	movs	r2, #0
 800056a:	2140      	movs	r1, #64	@ 0x40
 800056c:	4841      	ldr	r0, [pc, #260]	@ (8000674 <display_number+0x374>)
 800056e:	f001 ffe4 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 8000572:	2201      	movs	r2, #1
 8000574:	2180      	movs	r1, #128	@ 0x80
 8000576:	483f      	ldr	r0, [pc, #252]	@ (8000674 <display_number+0x374>)
 8000578:	f001 ffdf 	bl	800253a <HAL_GPIO_WritePin>
			break;
 800057c:	e0a5      	b.n	80006ca <display_number+0x3ca>
		case 7:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 800057e:	2200      	movs	r2, #0
 8000580:	2101      	movs	r1, #1
 8000582:	483c      	ldr	r0, [pc, #240]	@ (8000674 <display_number+0x374>)
 8000584:	f001 ffd9 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 8000588:	2200      	movs	r2, #0
 800058a:	2102      	movs	r1, #2
 800058c:	4839      	ldr	r0, [pc, #228]	@ (8000674 <display_number+0x374>)
 800058e:	f001 ffd4 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 8000592:	2200      	movs	r2, #0
 8000594:	2104      	movs	r1, #4
 8000596:	4837      	ldr	r0, [pc, #220]	@ (8000674 <display_number+0x374>)
 8000598:	f001 ffcf 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_OFF);
 800059c:	2201      	movs	r2, #1
 800059e:	2108      	movs	r1, #8
 80005a0:	4834      	ldr	r0, [pc, #208]	@ (8000674 <display_number+0x374>)
 80005a2:	f001 ffca 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_OFF);
 80005a6:	2201      	movs	r2, #1
 80005a8:	2110      	movs	r1, #16
 80005aa:	4832      	ldr	r0, [pc, #200]	@ (8000674 <display_number+0x374>)
 80005ac:	f001 ffc5 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_OFF);
 80005b0:	2201      	movs	r2, #1
 80005b2:	2120      	movs	r1, #32
 80005b4:	482f      	ldr	r0, [pc, #188]	@ (8000674 <display_number+0x374>)
 80005b6:	f001 ffc0 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_OFF);
 80005ba:	2201      	movs	r2, #1
 80005bc:	2140      	movs	r1, #64	@ 0x40
 80005be:	482d      	ldr	r0, [pc, #180]	@ (8000674 <display_number+0x374>)
 80005c0:	f001 ffbb 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 80005c4:	2201      	movs	r2, #1
 80005c6:	2180      	movs	r1, #128	@ 0x80
 80005c8:	482a      	ldr	r0, [pc, #168]	@ (8000674 <display_number+0x374>)
 80005ca:	f001 ffb6 	bl	800253a <HAL_GPIO_WritePin>
			break;
 80005ce:	e07c      	b.n	80006ca <display_number+0x3ca>
		case 8:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 80005d0:	2200      	movs	r2, #0
 80005d2:	2101      	movs	r1, #1
 80005d4:	4827      	ldr	r0, [pc, #156]	@ (8000674 <display_number+0x374>)
 80005d6:	f001 ffb0 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 80005da:	2200      	movs	r2, #0
 80005dc:	2102      	movs	r1, #2
 80005de:	4825      	ldr	r0, [pc, #148]	@ (8000674 <display_number+0x374>)
 80005e0:	f001 ffab 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 80005e4:	2200      	movs	r2, #0
 80005e6:	2104      	movs	r1, #4
 80005e8:	4822      	ldr	r0, [pc, #136]	@ (8000674 <display_number+0x374>)
 80005ea:	f001 ffa6 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_ON);
 80005ee:	2200      	movs	r2, #0
 80005f0:	2108      	movs	r1, #8
 80005f2:	4820      	ldr	r0, [pc, #128]	@ (8000674 <display_number+0x374>)
 80005f4:	f001 ffa1 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_ON);
 80005f8:	2200      	movs	r2, #0
 80005fa:	2110      	movs	r1, #16
 80005fc:	481d      	ldr	r0, [pc, #116]	@ (8000674 <display_number+0x374>)
 80005fe:	f001 ff9c 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_ON);
 8000602:	2200      	movs	r2, #0
 8000604:	2120      	movs	r1, #32
 8000606:	481b      	ldr	r0, [pc, #108]	@ (8000674 <display_number+0x374>)
 8000608:	f001 ff97 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_ON);
 800060c:	2200      	movs	r2, #0
 800060e:	2140      	movs	r1, #64	@ 0x40
 8000610:	4818      	ldr	r0, [pc, #96]	@ (8000674 <display_number+0x374>)
 8000612:	f001 ff92 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 8000616:	2201      	movs	r2, #1
 8000618:	2180      	movs	r1, #128	@ 0x80
 800061a:	4816      	ldr	r0, [pc, #88]	@ (8000674 <display_number+0x374>)
 800061c:	f001 ff8d 	bl	800253a <HAL_GPIO_WritePin>
			break;
 8000620:	e053      	b.n	80006ca <display_number+0x3ca>
		case 9:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_ON);
 8000622:	2200      	movs	r2, #0
 8000624:	2101      	movs	r1, #1
 8000626:	4813      	ldr	r0, [pc, #76]	@ (8000674 <display_number+0x374>)
 8000628:	f001 ff87 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_ON);
 800062c:	2200      	movs	r2, #0
 800062e:	2102      	movs	r1, #2
 8000630:	4810      	ldr	r0, [pc, #64]	@ (8000674 <display_number+0x374>)
 8000632:	f001 ff82 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_ON);
 8000636:	2200      	movs	r2, #0
 8000638:	2104      	movs	r1, #4
 800063a:	480e      	ldr	r0, [pc, #56]	@ (8000674 <display_number+0x374>)
 800063c:	f001 ff7d 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_ON);
 8000640:	2200      	movs	r2, #0
 8000642:	2108      	movs	r1, #8
 8000644:	480b      	ldr	r0, [pc, #44]	@ (8000674 <display_number+0x374>)
 8000646:	f001 ff78 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_OFF);
 800064a:	2201      	movs	r2, #1
 800064c:	2110      	movs	r1, #16
 800064e:	4809      	ldr	r0, [pc, #36]	@ (8000674 <display_number+0x374>)
 8000650:	f001 ff73 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_ON);
 8000654:	2200      	movs	r2, #0
 8000656:	2120      	movs	r1, #32
 8000658:	4806      	ldr	r0, [pc, #24]	@ (8000674 <display_number+0x374>)
 800065a:	f001 ff6e 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_ON);
 800065e:	2200      	movs	r2, #0
 8000660:	2140      	movs	r1, #64	@ 0x40
 8000662:	4804      	ldr	r0, [pc, #16]	@ (8000674 <display_number+0x374>)
 8000664:	f001 ff69 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 8000668:	2201      	movs	r2, #1
 800066a:	2180      	movs	r1, #128	@ 0x80
 800066c:	4801      	ldr	r0, [pc, #4]	@ (8000674 <display_number+0x374>)
 800066e:	f001 ff64 	bl	800253a <HAL_GPIO_WritePin>
			break;
 8000672:	e02a      	b.n	80006ca <display_number+0x3ca>
 8000674:	40010800 	.word	0x40010800
		default:
			HAL_GPIO_WritePin(SEG_0_GPIO_Port, SEG_0_Pin, LED_OFF);
 8000678:	2201      	movs	r2, #1
 800067a:	2101      	movs	r1, #1
 800067c:	4815      	ldr	r0, [pc, #84]	@ (80006d4 <display_number+0x3d4>)
 800067e:	f001 ff5c 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_1_GPIO_Port, SEG_1_Pin, LED_OFF);
 8000682:	2201      	movs	r2, #1
 8000684:	2102      	movs	r1, #2
 8000686:	4813      	ldr	r0, [pc, #76]	@ (80006d4 <display_number+0x3d4>)
 8000688:	f001 ff57 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_2_GPIO_Port, SEG_2_Pin, LED_OFF);
 800068c:	2201      	movs	r2, #1
 800068e:	2104      	movs	r1, #4
 8000690:	4810      	ldr	r0, [pc, #64]	@ (80006d4 <display_number+0x3d4>)
 8000692:	f001 ff52 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_3_GPIO_Port, SEG_3_Pin, LED_OFF);
 8000696:	2201      	movs	r2, #1
 8000698:	2108      	movs	r1, #8
 800069a:	480e      	ldr	r0, [pc, #56]	@ (80006d4 <display_number+0x3d4>)
 800069c:	f001 ff4d 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_4_GPIO_Port, SEG_4_Pin, LED_OFF);
 80006a0:	2201      	movs	r2, #1
 80006a2:	2110      	movs	r1, #16
 80006a4:	480b      	ldr	r0, [pc, #44]	@ (80006d4 <display_number+0x3d4>)
 80006a6:	f001 ff48 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_5_GPIO_Port, SEG_5_Pin, LED_OFF);
 80006aa:	2201      	movs	r2, #1
 80006ac:	2120      	movs	r1, #32
 80006ae:	4809      	ldr	r0, [pc, #36]	@ (80006d4 <display_number+0x3d4>)
 80006b0:	f001 ff43 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_6_GPIO_Port, SEG_6_Pin, LED_OFF);
 80006b4:	2201      	movs	r2, #1
 80006b6:	2140      	movs	r1, #64	@ 0x40
 80006b8:	4806      	ldr	r0, [pc, #24]	@ (80006d4 <display_number+0x3d4>)
 80006ba:	f001 ff3e 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(SEG_7_GPIO_Port, SEG_7_Pin, LED_OFF);
 80006be:	2201      	movs	r2, #1
 80006c0:	2180      	movs	r1, #128	@ 0x80
 80006c2:	4804      	ldr	r0, [pc, #16]	@ (80006d4 <display_number+0x3d4>)
 80006c4:	f001 ff39 	bl	800253a <HAL_GPIO_WritePin>
			break;
 80006c8:	bf00      	nop
	}
}
 80006ca:	bf00      	nop
 80006cc:	3708      	adds	r7, #8
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bd80      	pop	{r7, pc}
 80006d2:	bf00      	nop
 80006d4:	40010800 	.word	0x40010800

080006d8 <enable_digit>:

void enable_digit(int digit)
{
 80006d8:	b580      	push	{r7, lr}
 80006da:	b082      	sub	sp, #8
 80006dc:	af00      	add	r7, sp, #0
 80006de:	6078      	str	r0, [r7, #4]
	switch (digit) {
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	2b03      	cmp	r3, #3
 80006e4:	d86e      	bhi.n	80007c4 <enable_digit+0xec>
 80006e6:	a201      	add	r2, pc, #4	@ (adr r2, 80006ec <enable_digit+0x14>)
 80006e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006ec:	080006fd 	.word	0x080006fd
 80006f0:	0800072f 	.word	0x0800072f
 80006f4:	08000761 	.word	0x08000761
 80006f8:	08000793 	.word	0x08000793
		case 0:
			HAL_GPIO_WritePin(EN_0_GPIO_Port, EN_0_Pin, ENABLE);
 80006fc:	2201      	movs	r2, #1
 80006fe:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000702:	4833      	ldr	r0, [pc, #204]	@ (80007d0 <enable_digit+0xf8>)
 8000704:	f001 ff19 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_1_GPIO_Port, EN_1_Pin, DISABLE);
 8000708:	2200      	movs	r2, #0
 800070a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800070e:	4830      	ldr	r0, [pc, #192]	@ (80007d0 <enable_digit+0xf8>)
 8000710:	f001 ff13 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_2_GPIO_Port, EN_2_Pin, DISABLE);
 8000714:	2200      	movs	r2, #0
 8000716:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800071a:	482d      	ldr	r0, [pc, #180]	@ (80007d0 <enable_digit+0xf8>)
 800071c:	f001 ff0d 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_3_GPIO_Port, EN_3_Pin, DISABLE);
 8000720:	2200      	movs	r2, #0
 8000722:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000726:	482a      	ldr	r0, [pc, #168]	@ (80007d0 <enable_digit+0xf8>)
 8000728:	f001 ff07 	bl	800253a <HAL_GPIO_WritePin>
			break;
 800072c:	e04b      	b.n	80007c6 <enable_digit+0xee>
		case 1:
			HAL_GPIO_WritePin(EN_0_GPIO_Port, EN_0_Pin, DISABLE);
 800072e:	2200      	movs	r2, #0
 8000730:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000734:	4826      	ldr	r0, [pc, #152]	@ (80007d0 <enable_digit+0xf8>)
 8000736:	f001 ff00 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_1_GPIO_Port, EN_1_Pin, ENABLE);
 800073a:	2201      	movs	r2, #1
 800073c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000740:	4823      	ldr	r0, [pc, #140]	@ (80007d0 <enable_digit+0xf8>)
 8000742:	f001 fefa 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_2_GPIO_Port, EN_2_Pin, DISABLE);
 8000746:	2200      	movs	r2, #0
 8000748:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800074c:	4820      	ldr	r0, [pc, #128]	@ (80007d0 <enable_digit+0xf8>)
 800074e:	f001 fef4 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_3_GPIO_Port, EN_3_Pin, DISABLE);
 8000752:	2200      	movs	r2, #0
 8000754:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000758:	481d      	ldr	r0, [pc, #116]	@ (80007d0 <enable_digit+0xf8>)
 800075a:	f001 feee 	bl	800253a <HAL_GPIO_WritePin>
			break;
 800075e:	e032      	b.n	80007c6 <enable_digit+0xee>
		case 2:
			HAL_GPIO_WritePin(EN_0_GPIO_Port, EN_0_Pin, DISABLE);
 8000760:	2200      	movs	r2, #0
 8000762:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000766:	481a      	ldr	r0, [pc, #104]	@ (80007d0 <enable_digit+0xf8>)
 8000768:	f001 fee7 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_1_GPIO_Port, EN_1_Pin, DISABLE);
 800076c:	2200      	movs	r2, #0
 800076e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000772:	4817      	ldr	r0, [pc, #92]	@ (80007d0 <enable_digit+0xf8>)
 8000774:	f001 fee1 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_2_GPIO_Port, EN_2_Pin, ENABLE);
 8000778:	2201      	movs	r2, #1
 800077a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800077e:	4814      	ldr	r0, [pc, #80]	@ (80007d0 <enable_digit+0xf8>)
 8000780:	f001 fedb 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_3_GPIO_Port, EN_3_Pin, DISABLE);
 8000784:	2200      	movs	r2, #0
 8000786:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800078a:	4811      	ldr	r0, [pc, #68]	@ (80007d0 <enable_digit+0xf8>)
 800078c:	f001 fed5 	bl	800253a <HAL_GPIO_WritePin>
			break;
 8000790:	e019      	b.n	80007c6 <enable_digit+0xee>
		case 3:
			HAL_GPIO_WritePin(EN_0_GPIO_Port, EN_0_Pin, DISABLE);
 8000792:	2200      	movs	r2, #0
 8000794:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000798:	480d      	ldr	r0, [pc, #52]	@ (80007d0 <enable_digit+0xf8>)
 800079a:	f001 fece 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_1_GPIO_Port, EN_1_Pin, DISABLE);
 800079e:	2200      	movs	r2, #0
 80007a0:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80007a4:	480a      	ldr	r0, [pc, #40]	@ (80007d0 <enable_digit+0xf8>)
 80007a6:	f001 fec8 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_2_GPIO_Port, EN_2_Pin, DISABLE);
 80007aa:	2200      	movs	r2, #0
 80007ac:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007b0:	4807      	ldr	r0, [pc, #28]	@ (80007d0 <enable_digit+0xf8>)
 80007b2:	f001 fec2 	bl	800253a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN_3_GPIO_Port, EN_3_Pin, ENABLE);
 80007b6:	2201      	movs	r2, #1
 80007b8:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80007bc:	4804      	ldr	r0, [pc, #16]	@ (80007d0 <enable_digit+0xf8>)
 80007be:	f001 febc 	bl	800253a <HAL_GPIO_WritePin>
			break;
 80007c2:	e000      	b.n	80007c6 <enable_digit+0xee>
		default:
			break;
 80007c4:	bf00      	nop
	}
}
 80007c6:	bf00      	nop
 80007c8:	3708      	adds	r7, #8
 80007ca:	46bd      	mov	sp, r7
 80007cc:	bd80      	pop	{r7, pc}
 80007ce:	bf00      	nop
 80007d0:	40010800 	.word	0x40010800

080007d4 <getKeyInput>:
	BTN_2_GPIO_Port,
	BTN_2_Pin
};

void getKeyInput(struct ButtonStruct* button)
{
 80007d4:	b580      	push	{r7, lr}
 80007d6:	b082      	sub	sp, #8
 80007d8:	af00      	add	r7, sp, #0
 80007da:	6078      	str	r0, [r7, #4]
	button->keyBuffer[2] = button->keyBuffer[1];
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	685a      	ldr	r2, [r3, #4]
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	609a      	str	r2, [r3, #8]
	button->keyBuffer[1] = button->keyBuffer[0];
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	681a      	ldr	r2, [r3, #0]
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	605a      	str	r2, [r3, #4]

	button->keyBuffer[0] = HAL_GPIO_ReadPin(button->PORT, button->PIN);
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	69da      	ldr	r2, [r3, #28]
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	8c1b      	ldrh	r3, [r3, #32]
 80007f4:	4619      	mov	r1, r3
 80007f6:	4610      	mov	r0, r2
 80007f8:	f001 fe88 	bl	800250c <HAL_GPIO_ReadPin>
 80007fc:	4603      	mov	r3, r0
 80007fe:	461a      	mov	r2, r3
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	601a      	str	r2, [r3, #0]

	if ((button->keyBuffer[0] == button->keyBuffer[1]) && (button->keyBuffer[1] == button->keyBuffer[2]))
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	681a      	ldr	r2, [r3, #0]
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	685b      	ldr	r3, [r3, #4]
 800080c:	429a      	cmp	r2, r3
 800080e:	d12d      	bne.n	800086c <getKeyInput+0x98>
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	685a      	ldr	r2, [r3, #4]
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	689b      	ldr	r3, [r3, #8]
 8000818:	429a      	cmp	r2, r3
 800081a:	d127      	bne.n	800086c <getKeyInput+0x98>
	{
		if (button->keyBuffer[2] != button->keyBuffer[3])
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	689a      	ldr	r2, [r3, #8]
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	68db      	ldr	r3, [r3, #12]
 8000824:	429a      	cmp	r2, r3
 8000826:	d00e      	beq.n	8000846 <getKeyInput+0x72>
		{
			button->keyBuffer[3] = button->keyBuffer[2];
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	689a      	ldr	r2, [r3, #8]
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	60da      	str	r2, [r3, #12]

			if (button->keyBuffer[3] == PRESSED_STATE)
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	68db      	ldr	r3, [r3, #12]
 8000834:	2b00      	cmp	r3, #0
 8000836:	d119      	bne.n	800086c <getKeyInput+0x98>
			{
				button->timeOutForPressed = TIME_OUT_FOR_LONG_PRESSED / TIME_READ_BTN;
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	2219      	movs	r2, #25
 800083c:	611a      	str	r2, [r3, #16]
				button->isPressed = 1;
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	2201      	movs	r2, #1
 8000842:	615a      	str	r2, [r3, #20]
					button->isLongPress = 1;
				}
			}
		}
	}
}
 8000844:	e012      	b.n	800086c <getKeyInput+0x98>
			--button->timeOutForPressed;
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	691b      	ldr	r3, [r3, #16]
 800084a:	1e5a      	subs	r2, r3, #1
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	611a      	str	r2, [r3, #16]
			if (button->timeOutForPressed <= 0)
 8000850:	687b      	ldr	r3, [r7, #4]
 8000852:	691b      	ldr	r3, [r3, #16]
 8000854:	2b00      	cmp	r3, #0
 8000856:	dc09      	bgt.n	800086c <getKeyInput+0x98>
				button->timeOutForPressed = TIME_OUT_FOR_LONG_PRESSED / TIME_READ_BTN;
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	2219      	movs	r2, #25
 800085c:	611a      	str	r2, [r3, #16]
				if (button->keyBuffer[3] == PRESSED_STATE)
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	68db      	ldr	r3, [r3, #12]
 8000862:	2b00      	cmp	r3, #0
 8000864:	d102      	bne.n	800086c <getKeyInput+0x98>
					button->isLongPress = 1;
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	2201      	movs	r2, #1
 800086a:	619a      	str	r2, [r3, #24]
}
 800086c:	bf00      	nop
 800086e:	3708      	adds	r7, #8
 8000870:	46bd      	mov	sp, r7
 8000872:	bd80      	pop	{r7, pc}

08000874 <isButtonPressed>:

int isButtonPressed(struct ButtonStruct* button)
{
 8000874:	b480      	push	{r7}
 8000876:	b083      	sub	sp, #12
 8000878:	af00      	add	r7, sp, #0
 800087a:	6078      	str	r0, [r7, #4]
	if (button->isPressed == 1)
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	695b      	ldr	r3, [r3, #20]
 8000880:	2b01      	cmp	r3, #1
 8000882:	d104      	bne.n	800088e <isButtonPressed+0x1a>
	{
		button->isPressed = 0;
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	2200      	movs	r2, #0
 8000888:	615a      	str	r2, [r3, #20]
		return 1;
 800088a:	2301      	movs	r3, #1
 800088c:	e000      	b.n	8000890 <isButtonPressed+0x1c>
	}
	return 0;
 800088e:	2300      	movs	r3, #0
}
 8000890:	4618      	mov	r0, r3
 8000892:	370c      	adds	r7, #12
 8000894:	46bd      	mov	sp, r7
 8000896:	bc80      	pop	{r7}
 8000898:	4770      	bx	lr

0800089a <isButtonLongPressed>:

int isButtonLongPressed(struct ButtonStruct* button)
{
 800089a:	b480      	push	{r7}
 800089c:	b083      	sub	sp, #12
 800089e:	af00      	add	r7, sp, #0
 80008a0:	6078      	str	r0, [r7, #4]
	if (button->isLongPress == 1)
 80008a2:	687b      	ldr	r3, [r7, #4]
 80008a4:	699b      	ldr	r3, [r3, #24]
 80008a6:	2b01      	cmp	r3, #1
 80008a8:	d104      	bne.n	80008b4 <isButtonLongPressed+0x1a>
	{
		button->isLongPress = 0;
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	2200      	movs	r2, #0
 80008ae:	619a      	str	r2, [r3, #24]
		return 1;
 80008b0:	2301      	movs	r3, #1
 80008b2:	e000      	b.n	80008b6 <isButtonLongPressed+0x1c>
	}
	return 0;
 80008b4:	2300      	movs	r3, #0
}
 80008b6:	4618      	mov	r0, r3
 80008b8:	370c      	adds	r7, #12
 80008ba:	46bd      	mov	sp, r7
 80008bc:	bc80      	pop	{r7}
 80008be:	4770      	bx	lr

080008c0 <resetButton>:

void resetButton(struct ButtonStruct* button)
{
 80008c0:	b480      	push	{r7}
 80008c2:	b083      	sub	sp, #12
 80008c4:	af00      	add	r7, sp, #0
 80008c6:	6078      	str	r0, [r7, #4]
	button->isPressed = 0;
 80008c8:	687b      	ldr	r3, [r7, #4]
 80008ca:	2200      	movs	r2, #0
 80008cc:	615a      	str	r2, [r3, #20]
	button->isLongPress = 0;
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	2200      	movs	r2, #0
 80008d2:	619a      	str	r2, [r3, #24]
}
 80008d4:	bf00      	nop
 80008d6:	370c      	adds	r7, #12
 80008d8:	46bd      	mov	sp, r7
 80008da:	bc80      	pop	{r7}
 80008dc:	4770      	bx	lr
	...

080008e0 <fsm_traffic_light>:
#include "fsm.h"

enum TrafficLightState TRAFFIC_LIGHT_STATE = INIT;

void fsm_traffic_light()
{
 80008e0:	b580      	push	{r7, lr}
 80008e2:	af00      	add	r7, sp, #0
	switch (TRAFFIC_LIGHT_STATE) {
 80008e4:	4bbc      	ldr	r3, [pc, #752]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 80008e6:	781b      	ldrb	r3, [r3, #0]
 80008e8:	2b0f      	cmp	r3, #15
 80008ea:	f200 81e9 	bhi.w	8000cc0 <fsm_traffic_light+0x3e0>
 80008ee:	a201      	add	r2, pc, #4	@ (adr r2, 80008f4 <fsm_traffic_light+0x14>)
 80008f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80008f4:	08000935 	.word	0x08000935
 80008f8:	08000941 	.word	0x08000941
 80008fc:	080009a7 	.word	0x080009a7
 8000900:	080009f5 	.word	0x080009f5
 8000904:	08000a5b 	.word	0x08000a5b
 8000908:	08000aa9 	.word	0x08000aa9
 800090c:	08000adf 	.word	0x08000adf
 8000910:	08000afd 	.word	0x08000afd
 8000914:	08000b33 	.word	0x08000b33
 8000918:	08000b51 	.word	0x08000b51
 800091c:	08000b87 	.word	0x08000b87
 8000920:	08000bbd 	.word	0x08000bbd
 8000924:	08000c09 	.word	0x08000c09
 8000928:	08000c3d 	.word	0x08000c3d
 800092c:	08000c71 	.word	0x08000c71
 8000930:	08000ca5 	.word	0x08000ca5
		case INIT:
			// CHANGE STATE
			if (1) // -> AUTO_RED_GRN
			{
				init_auto_red_grn();
 8000934:	f000 fafe 	bl	8000f34 <init_auto_red_grn>
				TRAFFIC_LIGHT_STATE = AUTO_RED_GRN;
 8000938:	4ba7      	ldr	r3, [pc, #668]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 800093a:	2201      	movs	r2, #1
 800093c:	701a      	strb	r2, [r3, #0]
			}
			break;
 800093e:	e1de      	b.n	8000cfe <fsm_traffic_light+0x41e>
		case AUTO_RED_GRN:
			auto_red_grn();
 8000940:	f000 fb32 	bl	8000fa8 <auto_red_grn>

			// CHANGE STATE
			if (isFlag(TIMER_TRAFFIC_LIGHT)) // -> AUTO_RED_YEL
 8000944:	2001      	movs	r0, #1
 8000946:	f001 f9db 	bl	8001d00 <isFlag>
 800094a:	4603      	mov	r3, r0
 800094c:	2b00      	cmp	r3, #0
 800094e:	d005      	beq.n	800095c <fsm_traffic_light+0x7c>
			{
				init_auto_red_yel();
 8000950:	f000 fb58 	bl	8001004 <init_auto_red_yel>
				TRAFFIC_LIGHT_STATE = AUTO_RED_YEL;
 8000954:	4ba0      	ldr	r3, [pc, #640]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000956:	2202      	movs	r2, #2
 8000958:	701a      	strb	r2, [r3, #0]
			{
				init_man_red_grn();
				TRAFFIC_LIGHT_STATE = MAN_RED_GRN;
			}

			break;
 800095a:	e1b3      	b.n	8000cc4 <fsm_traffic_light+0x3e4>
			else if (isButtonPressed(&button0)) // -> RED_TIME_CONFIG
 800095c:	489f      	ldr	r0, [pc, #636]	@ (8000bdc <fsm_traffic_light+0x2fc>)
 800095e:	f7ff ff89 	bl	8000874 <isButtonPressed>
 8000962:	4603      	mov	r3, r0
 8000964:	2b00      	cmp	r3, #0
 8000966:	d005      	beq.n	8000974 <fsm_traffic_light+0x94>
				init_red_time_config();
 8000968:	f000 fcd8 	bl	800131c <init_red_time_config>
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG;
 800096c:	4b9a      	ldr	r3, [pc, #616]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 800096e:	2209      	movs	r2, #9
 8000970:	701a      	strb	r2, [r3, #0]
			break;
 8000972:	e1a7      	b.n	8000cc4 <fsm_traffic_light+0x3e4>
			else if (isButtonPressed(&button1)) // -> YEL_BLINKY
 8000974:	489a      	ldr	r0, [pc, #616]	@ (8000be0 <fsm_traffic_light+0x300>)
 8000976:	f7ff ff7d 	bl	8000874 <isButtonPressed>
 800097a:	4603      	mov	r3, r0
 800097c:	2b00      	cmp	r3, #0
 800097e:	d005      	beq.n	800098c <fsm_traffic_light+0xac>
				init_yel_blinky();
 8000980:	f001 f856 	bl	8001a30 <init_yel_blinky>
				TRAFFIC_LIGHT_STATE = YEL_BLINKY;
 8000984:	4b94      	ldr	r3, [pc, #592]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000986:	220f      	movs	r2, #15
 8000988:	701a      	strb	r2, [r3, #0]
			break;
 800098a:	e19b      	b.n	8000cc4 <fsm_traffic_light+0x3e4>
			else if (isButtonPressed(&button2)) // -> MAN_RED_GRN
 800098c:	4895      	ldr	r0, [pc, #596]	@ (8000be4 <fsm_traffic_light+0x304>)
 800098e:	f7ff ff71 	bl	8000874 <isButtonPressed>
 8000992:	4603      	mov	r3, r0
 8000994:	2b00      	cmp	r3, #0
 8000996:	f000 8195 	beq.w	8000cc4 <fsm_traffic_light+0x3e4>
				init_man_red_grn();
 800099a:	f000 fc5f 	bl	800125c <init_man_red_grn>
				TRAFFIC_LIGHT_STATE = MAN_RED_GRN;
 800099e:	4b8e      	ldr	r3, [pc, #568]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 80009a0:	2205      	movs	r2, #5
 80009a2:	701a      	strb	r2, [r3, #0]
			break;
 80009a4:	e18e      	b.n	8000cc4 <fsm_traffic_light+0x3e4>
		case AUTO_RED_YEL:
			auto_red_yel();
 80009a6:	f000 fb61 	bl	800106c <auto_red_yel>

			// CHANGE STATE
			if (isFlag(TIMER_TRAFFIC_LIGHT)) // -> AUTO_GRN_RED
 80009aa:	2001      	movs	r0, #1
 80009ac:	f001 f9a8 	bl	8001d00 <isFlag>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d005      	beq.n	80009c2 <fsm_traffic_light+0xe2>
			{
				init_auto_grn_red();
 80009b6:	f000 fb87 	bl	80010c8 <init_auto_grn_red>
				TRAFFIC_LIGHT_STATE = AUTO_GRN_RED;
 80009ba:	4b87      	ldr	r3, [pc, #540]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 80009bc:	2203      	movs	r2, #3
 80009be:	701a      	strb	r2, [r3, #0]
			else if (isButtonPressed(&button1)) // -> YEL_BLINKY
			{
				init_yel_blinky();
				TRAFFIC_LIGHT_STATE = YEL_BLINKY;
			}
			break;
 80009c0:	e182      	b.n	8000cc8 <fsm_traffic_light+0x3e8>
			else if (isButtonPressed(&button0)) // -> RED_TIME_CONFIG
 80009c2:	4886      	ldr	r0, [pc, #536]	@ (8000bdc <fsm_traffic_light+0x2fc>)
 80009c4:	f7ff ff56 	bl	8000874 <isButtonPressed>
 80009c8:	4603      	mov	r3, r0
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d005      	beq.n	80009da <fsm_traffic_light+0xfa>
				init_red_time_config();
 80009ce:	f000 fca5 	bl	800131c <init_red_time_config>
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG;
 80009d2:	4b81      	ldr	r3, [pc, #516]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 80009d4:	2209      	movs	r2, #9
 80009d6:	701a      	strb	r2, [r3, #0]
			break;
 80009d8:	e176      	b.n	8000cc8 <fsm_traffic_light+0x3e8>
			else if (isButtonPressed(&button1)) // -> YEL_BLINKY
 80009da:	4881      	ldr	r0, [pc, #516]	@ (8000be0 <fsm_traffic_light+0x300>)
 80009dc:	f7ff ff4a 	bl	8000874 <isButtonPressed>
 80009e0:	4603      	mov	r3, r0
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	f000 8170 	beq.w	8000cc8 <fsm_traffic_light+0x3e8>
				init_yel_blinky();
 80009e8:	f001 f822 	bl	8001a30 <init_yel_blinky>
				TRAFFIC_LIGHT_STATE = YEL_BLINKY;
 80009ec:	4b7a      	ldr	r3, [pc, #488]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 80009ee:	220f      	movs	r2, #15
 80009f0:	701a      	strb	r2, [r3, #0]
			break;
 80009f2:	e169      	b.n	8000cc8 <fsm_traffic_light+0x3e8>
		case AUTO_GRN_RED:
			auto_grn_red();
 80009f4:	f000 fba2 	bl	800113c <auto_grn_red>

			if (isFlag(TIMER_TRAFFIC_LIGHT)) // -> AUTO_YEL_RED
 80009f8:	2001      	movs	r0, #1
 80009fa:	f001 f981 	bl	8001d00 <isFlag>
 80009fe:	4603      	mov	r3, r0
 8000a00:	2b00      	cmp	r3, #0
 8000a02:	d005      	beq.n	8000a10 <fsm_traffic_light+0x130>
			{
				init_auto_yel_red();
 8000a04:	f000 fbc8 	bl	8001198 <init_auto_yel_red>
				TRAFFIC_LIGHT_STATE = AUTO_YEL_RED;
 8000a08:	4b73      	ldr	r3, [pc, #460]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000a0a:	2204      	movs	r2, #4
 8000a0c:	701a      	strb	r2, [r3, #0]
			else if (isButtonPressed(&button2)) // -> MAN_GRN_RED
			{
				init_man_grn_red();
				TRAFFIC_LIGHT_STATE = MAN_GRN_RED;
			}
			break;
 8000a0e:	e15d      	b.n	8000ccc <fsm_traffic_light+0x3ec>
			else if (isButtonPressed(&button0)) // -> RED_TIME_CONFIG
 8000a10:	4872      	ldr	r0, [pc, #456]	@ (8000bdc <fsm_traffic_light+0x2fc>)
 8000a12:	f7ff ff2f 	bl	8000874 <isButtonPressed>
 8000a16:	4603      	mov	r3, r0
 8000a18:	2b00      	cmp	r3, #0
 8000a1a:	d005      	beq.n	8000a28 <fsm_traffic_light+0x148>
				init_red_time_config();
 8000a1c:	f000 fc7e 	bl	800131c <init_red_time_config>
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG;
 8000a20:	4b6d      	ldr	r3, [pc, #436]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000a22:	2209      	movs	r2, #9
 8000a24:	701a      	strb	r2, [r3, #0]
			break;
 8000a26:	e151      	b.n	8000ccc <fsm_traffic_light+0x3ec>
			else if (isButtonPressed(&button1)) // -> YEL_BLINKY
 8000a28:	486d      	ldr	r0, [pc, #436]	@ (8000be0 <fsm_traffic_light+0x300>)
 8000a2a:	f7ff ff23 	bl	8000874 <isButtonPressed>
 8000a2e:	4603      	mov	r3, r0
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	d005      	beq.n	8000a40 <fsm_traffic_light+0x160>
				init_yel_blinky();
 8000a34:	f000 fffc 	bl	8001a30 <init_yel_blinky>
				TRAFFIC_LIGHT_STATE = YEL_BLINKY;
 8000a38:	4b67      	ldr	r3, [pc, #412]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000a3a:	220f      	movs	r2, #15
 8000a3c:	701a      	strb	r2, [r3, #0]
			break;
 8000a3e:	e145      	b.n	8000ccc <fsm_traffic_light+0x3ec>
			else if (isButtonPressed(&button2)) // -> MAN_GRN_RED
 8000a40:	4868      	ldr	r0, [pc, #416]	@ (8000be4 <fsm_traffic_light+0x304>)
 8000a42:	f7ff ff17 	bl	8000874 <isButtonPressed>
 8000a46:	4603      	mov	r3, r0
 8000a48:	2b00      	cmp	r3, #0
 8000a4a:	f000 813f 	beq.w	8000ccc <fsm_traffic_light+0x3ec>
				init_man_grn_red();
 8000a4e:	f000 fc37 	bl	80012c0 <init_man_grn_red>
				TRAFFIC_LIGHT_STATE = MAN_GRN_RED;
 8000a52:	4b61      	ldr	r3, [pc, #388]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000a54:	2207      	movs	r2, #7
 8000a56:	701a      	strb	r2, [r3, #0]
			break;
 8000a58:	e138      	b.n	8000ccc <fsm_traffic_light+0x3ec>
		case AUTO_YEL_RED:
			auto_yel_red();
 8000a5a:	f000 fbd1 	bl	8001200 <auto_yel_red>

			if (isFlag(TIMER_TRAFFIC_LIGHT)) // -> AUTO_RED_GRN
 8000a5e:	2001      	movs	r0, #1
 8000a60:	f001 f94e 	bl	8001d00 <isFlag>
 8000a64:	4603      	mov	r3, r0
 8000a66:	2b00      	cmp	r3, #0
 8000a68:	d005      	beq.n	8000a76 <fsm_traffic_light+0x196>
			{
				init_auto_red_grn();
 8000a6a:	f000 fa63 	bl	8000f34 <init_auto_red_grn>
				TRAFFIC_LIGHT_STATE = AUTO_RED_GRN;
 8000a6e:	4b5a      	ldr	r3, [pc, #360]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000a70:	2201      	movs	r2, #1
 8000a72:	701a      	strb	r2, [r3, #0]
			else if (isButtonPressed(&button1)) // -> YEL_BLINKY
			{
				init_yel_blinky();
				TRAFFIC_LIGHT_STATE = YEL_BLINKY;
			}
			break;
 8000a74:	e12c      	b.n	8000cd0 <fsm_traffic_light+0x3f0>
			else if (isButtonPressed(&button0)) // -> RED_TIME_CONFIG
 8000a76:	4859      	ldr	r0, [pc, #356]	@ (8000bdc <fsm_traffic_light+0x2fc>)
 8000a78:	f7ff fefc 	bl	8000874 <isButtonPressed>
 8000a7c:	4603      	mov	r3, r0
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	d005      	beq.n	8000a8e <fsm_traffic_light+0x1ae>
				init_red_time_config();
 8000a82:	f000 fc4b 	bl	800131c <init_red_time_config>
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG;
 8000a86:	4b54      	ldr	r3, [pc, #336]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000a88:	2209      	movs	r2, #9
 8000a8a:	701a      	strb	r2, [r3, #0]
			break;
 8000a8c:	e120      	b.n	8000cd0 <fsm_traffic_light+0x3f0>
			else if (isButtonPressed(&button1)) // -> YEL_BLINKY
 8000a8e:	4854      	ldr	r0, [pc, #336]	@ (8000be0 <fsm_traffic_light+0x300>)
 8000a90:	f7ff fef0 	bl	8000874 <isButtonPressed>
 8000a94:	4603      	mov	r3, r0
 8000a96:	2b00      	cmp	r3, #0
 8000a98:	f000 811a 	beq.w	8000cd0 <fsm_traffic_light+0x3f0>
				init_yel_blinky();
 8000a9c:	f000 ffc8 	bl	8001a30 <init_yel_blinky>
				TRAFFIC_LIGHT_STATE = YEL_BLINKY;
 8000aa0:	4b4d      	ldr	r3, [pc, #308]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000aa2:	220f      	movs	r2, #15
 8000aa4:	701a      	strb	r2, [r3, #0]
			break;
 8000aa6:	e113      	b.n	8000cd0 <fsm_traffic_light+0x3f0>
		case MAN_RED_GRN:
			man_red_grn();
 8000aa8:	f000 fbea 	bl	8001280 <man_red_grn>

			if (isButtonPressed(&button1)) // -> MAN_RED_YEL
 8000aac:	484c      	ldr	r0, [pc, #304]	@ (8000be0 <fsm_traffic_light+0x300>)
 8000aae:	f7ff fee1 	bl	8000874 <isButtonPressed>
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d005      	beq.n	8000ac4 <fsm_traffic_light+0x1e4>
			{
				init_man_red_yel();
 8000ab8:	f000 fbea 	bl	8001290 <init_man_red_yel>
				TRAFFIC_LIGHT_STATE = MAN_RED_YEL;
 8000abc:	4b46      	ldr	r3, [pc, #280]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000abe:	2206      	movs	r2, #6
 8000ac0:	701a      	strb	r2, [r3, #0]
			else if (isButtonPressed(&button2)) // -> AUTO_RED_GRN
			{
				init_auto_red_grn();
				TRAFFIC_LIGHT_STATE = AUTO_RED_GRN;
			}
			break;
 8000ac2:	e107      	b.n	8000cd4 <fsm_traffic_light+0x3f4>
			else if (isButtonPressed(&button2)) // -> AUTO_RED_GRN
 8000ac4:	4847      	ldr	r0, [pc, #284]	@ (8000be4 <fsm_traffic_light+0x304>)
 8000ac6:	f7ff fed5 	bl	8000874 <isButtonPressed>
 8000aca:	4603      	mov	r3, r0
 8000acc:	2b00      	cmp	r3, #0
 8000ace:	f000 8101 	beq.w	8000cd4 <fsm_traffic_light+0x3f4>
				init_auto_red_grn();
 8000ad2:	f000 fa2f 	bl	8000f34 <init_auto_red_grn>
				TRAFFIC_LIGHT_STATE = AUTO_RED_GRN;
 8000ad6:	4b40      	ldr	r3, [pc, #256]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000ad8:	2201      	movs	r2, #1
 8000ada:	701a      	strb	r2, [r3, #0]
			break;
 8000adc:	e0fa      	b.n	8000cd4 <fsm_traffic_light+0x3f4>
		case MAN_RED_YEL:
			man_red_yel();
 8000ade:	f000 fbe7 	bl	80012b0 <man_red_yel>

			if (isFlag(TIMER_TRAFFIC_LIGHT)) // -> MAN_GRN_RED
 8000ae2:	2001      	movs	r0, #1
 8000ae4:	f001 f90c 	bl	8001d00 <isFlag>
 8000ae8:	4603      	mov	r3, r0
 8000aea:	2b00      	cmp	r3, #0
 8000aec:	f000 80f4 	beq.w	8000cd8 <fsm_traffic_light+0x3f8>
			{
				init_man_grn_red();
 8000af0:	f000 fbe6 	bl	80012c0 <init_man_grn_red>
				TRAFFIC_LIGHT_STATE = MAN_GRN_RED;
 8000af4:	4b38      	ldr	r3, [pc, #224]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000af6:	2207      	movs	r2, #7
 8000af8:	701a      	strb	r2, [r3, #0]
			}
			break;
 8000afa:	e0ed      	b.n	8000cd8 <fsm_traffic_light+0x3f8>
		case MAN_GRN_RED:
			man_grn_red();
 8000afc:	f000 fbee 	bl	80012dc <man_grn_red>

			if (isButtonPressed(&button1)) // -> MAN_YEL_RED
 8000b00:	4837      	ldr	r0, [pc, #220]	@ (8000be0 <fsm_traffic_light+0x300>)
 8000b02:	f7ff feb7 	bl	8000874 <isButtonPressed>
 8000b06:	4603      	mov	r3, r0
 8000b08:	2b00      	cmp	r3, #0
 8000b0a:	d005      	beq.n	8000b18 <fsm_traffic_light+0x238>
			{
				init_man_yel_red();
 8000b0c:	f000 fbee 	bl	80012ec <init_man_yel_red>
				TRAFFIC_LIGHT_STATE = MAN_YEL_RED;
 8000b10:	4b31      	ldr	r3, [pc, #196]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000b12:	2208      	movs	r2, #8
 8000b14:	701a      	strb	r2, [r3, #0]
			else if (isButtonPressed(&button2)) // -> AUTO_GRN_RED
			{
				init_auto_grn_red();
				TRAFFIC_LIGHT_STATE = AUTO_GRN_RED;
			}
			break;
 8000b16:	e0e1      	b.n	8000cdc <fsm_traffic_light+0x3fc>
			else if (isButtonPressed(&button2)) // -> AUTO_GRN_RED
 8000b18:	4832      	ldr	r0, [pc, #200]	@ (8000be4 <fsm_traffic_light+0x304>)
 8000b1a:	f7ff feab 	bl	8000874 <isButtonPressed>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	f000 80db 	beq.w	8000cdc <fsm_traffic_light+0x3fc>
				init_auto_grn_red();
 8000b26:	f000 facf 	bl	80010c8 <init_auto_grn_red>
				TRAFFIC_LIGHT_STATE = AUTO_GRN_RED;
 8000b2a:	4b2b      	ldr	r3, [pc, #172]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000b2c:	2203      	movs	r2, #3
 8000b2e:	701a      	strb	r2, [r3, #0]
			break;
 8000b30:	e0d4      	b.n	8000cdc <fsm_traffic_light+0x3fc>
		case MAN_YEL_RED:
			man_yel_red();
 8000b32:	f000 fbeb 	bl	800130c <man_yel_red>

			if (isFlag(TIMER_TRAFFIC_LIGHT)) // -> MAN_RED_GRN
 8000b36:	2001      	movs	r0, #1
 8000b38:	f001 f8e2 	bl	8001d00 <isFlag>
 8000b3c:	4603      	mov	r3, r0
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	f000 80ce 	beq.w	8000ce0 <fsm_traffic_light+0x400>
			{
				init_man_red_grn();
 8000b44:	f000 fb8a 	bl	800125c <init_man_red_grn>
				TRAFFIC_LIGHT_STATE = MAN_RED_GRN;
 8000b48:	4b23      	ldr	r3, [pc, #140]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000b4a:	2205      	movs	r2, #5
 8000b4c:	701a      	strb	r2, [r3, #0]
			}
			break;
 8000b4e:	e0c7      	b.n	8000ce0 <fsm_traffic_light+0x400>
		case RED_TIME_CONFIG:
			red_time_config();
 8000b50:	f000 fc0e 	bl	8001370 <red_time_config>

			if (isButtonPressed(&button0)) // -> YEL_TIME_CONFIG
 8000b54:	4821      	ldr	r0, [pc, #132]	@ (8000bdc <fsm_traffic_light+0x2fc>)
 8000b56:	f7ff fe8d 	bl	8000874 <isButtonPressed>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	d005      	beq.n	8000b6c <fsm_traffic_light+0x28c>
			{
				init_yel_time_config();
 8000b60:	f000 fd0c 	bl	800157c <init_yel_time_config>
				TRAFFIC_LIGHT_STATE = YEL_TIME_CONFIG;
 8000b64:	4b1c      	ldr	r3, [pc, #112]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000b66:	220b      	movs	r2, #11
 8000b68:	701a      	strb	r2, [r3, #0]
			else if (red_temp_time != red_time) // -> RED_TIME_CONFIG_CHANGE
			{
				init_red_time_config_change();
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG_CHANGE;
			}
			break;
 8000b6a:	e0bb      	b.n	8000ce4 <fsm_traffic_light+0x404>
			else if (red_temp_time != red_time) // -> RED_TIME_CONFIG_CHANGE
 8000b6c:	4b1e      	ldr	r3, [pc, #120]	@ (8000be8 <fsm_traffic_light+0x308>)
 8000b6e:	681a      	ldr	r2, [r3, #0]
 8000b70:	4b1e      	ldr	r3, [pc, #120]	@ (8000bec <fsm_traffic_light+0x30c>)
 8000b72:	681b      	ldr	r3, [r3, #0]
 8000b74:	429a      	cmp	r2, r3
 8000b76:	f000 80b5 	beq.w	8000ce4 <fsm_traffic_light+0x404>
				init_red_time_config_change();
 8000b7a:	f000 fc47 	bl	800140c <init_red_time_config_change>
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG_CHANGE;
 8000b7e:	4b16      	ldr	r3, [pc, #88]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000b80:	220a      	movs	r2, #10
 8000b82:	701a      	strb	r2, [r3, #0]
			break;
 8000b84:	e0ae      	b.n	8000ce4 <fsm_traffic_light+0x404>
		case RED_TIME_CONFIG_CHANGE:
			red_time_config_change();
 8000b86:	f000 fc6f 	bl	8001468 <red_time_config_change>

			if (isButtonPressed(&button0)) // -> YEL_TIME_CONFIG
 8000b8a:	4814      	ldr	r0, [pc, #80]	@ (8000bdc <fsm_traffic_light+0x2fc>)
 8000b8c:	f7ff fe72 	bl	8000874 <isButtonPressed>
 8000b90:	4603      	mov	r3, r0
 8000b92:	2b00      	cmp	r3, #0
 8000b94:	d005      	beq.n	8000ba2 <fsm_traffic_light+0x2c2>
			{
				init_yel_time_config();
 8000b96:	f000 fcf1 	bl	800157c <init_yel_time_config>
				TRAFFIC_LIGHT_STATE = YEL_TIME_CONFIG;
 8000b9a:	4b0f      	ldr	r3, [pc, #60]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000b9c:	220b      	movs	r2, #11
 8000b9e:	701a      	strb	r2, [r3, #0]
			else if (red_temp_time == red_time) // -> RED_TIME_CONFIG
			{
				init_red_time_config();
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG;
			}
			break;
 8000ba0:	e0a2      	b.n	8000ce8 <fsm_traffic_light+0x408>
			else if (red_temp_time == red_time) // -> RED_TIME_CONFIG
 8000ba2:	4b11      	ldr	r3, [pc, #68]	@ (8000be8 <fsm_traffic_light+0x308>)
 8000ba4:	681a      	ldr	r2, [r3, #0]
 8000ba6:	4b11      	ldr	r3, [pc, #68]	@ (8000bec <fsm_traffic_light+0x30c>)
 8000ba8:	681b      	ldr	r3, [r3, #0]
 8000baa:	429a      	cmp	r2, r3
 8000bac:	f040 809c 	bne.w	8000ce8 <fsm_traffic_light+0x408>
				init_red_time_config();
 8000bb0:	f000 fbb4 	bl	800131c <init_red_time_config>
				TRAFFIC_LIGHT_STATE = RED_TIME_CONFIG;
 8000bb4:	4b08      	ldr	r3, [pc, #32]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000bb6:	2209      	movs	r2, #9
 8000bb8:	701a      	strb	r2, [r3, #0]
			break;
 8000bba:	e095      	b.n	8000ce8 <fsm_traffic_light+0x408>
		case YEL_TIME_CONFIG:
			yel_time_config();
 8000bbc:	f000 fd08 	bl	80015d0 <yel_time_config>

			if (isButtonPressed(&button0)) // -> GRN_TIME_CONFIG
 8000bc0:	4806      	ldr	r0, [pc, #24]	@ (8000bdc <fsm_traffic_light+0x2fc>)
 8000bc2:	f7ff fe57 	bl	8000874 <isButtonPressed>
 8000bc6:	4603      	mov	r3, r0
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d011      	beq.n	8000bf0 <fsm_traffic_light+0x310>
			{
				init_grn_time_config();
 8000bcc:	f000 fe06 	bl	80017dc <init_grn_time_config>
				TRAFFIC_LIGHT_STATE = GRN_TIME_CONFIG;
 8000bd0:	4b01      	ldr	r3, [pc, #4]	@ (8000bd8 <fsm_traffic_light+0x2f8>)
 8000bd2:	220d      	movs	r2, #13
 8000bd4:	701a      	strb	r2, [r3, #0]
			else if (yel_temp_time != yel_time) // -> YEL_TIME_CONFIG_CHANGE
			{
				init_yel_time_config_change();
				TRAFFIC_LIGHT_STATE = YEL_TIME_CONFIG_CHANGE;
			}
			break;
 8000bd6:	e089      	b.n	8000cec <fsm_traffic_light+0x40c>
 8000bd8:	200000bc 	.word	0x200000bc
 8000bdc:	20000000 	.word	0x20000000
 8000be0:	20000024 	.word	0x20000024
 8000be4:	20000048 	.word	0x20000048
 8000be8:	20000088 	.word	0x20000088
 8000bec:	2000007c 	.word	0x2000007c
			else if (yel_temp_time != yel_time) // -> YEL_TIME_CONFIG_CHANGE
 8000bf0:	4b44      	ldr	r3, [pc, #272]	@ (8000d04 <fsm_traffic_light+0x424>)
 8000bf2:	681a      	ldr	r2, [r3, #0]
 8000bf4:	4b44      	ldr	r3, [pc, #272]	@ (8000d08 <fsm_traffic_light+0x428>)
 8000bf6:	681b      	ldr	r3, [r3, #0]
 8000bf8:	429a      	cmp	r2, r3
 8000bfa:	d077      	beq.n	8000cec <fsm_traffic_light+0x40c>
				init_yel_time_config_change();
 8000bfc:	f000 fd36 	bl	800166c <init_yel_time_config_change>
				TRAFFIC_LIGHT_STATE = YEL_TIME_CONFIG_CHANGE;
 8000c00:	4b42      	ldr	r3, [pc, #264]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000c02:	220c      	movs	r2, #12
 8000c04:	701a      	strb	r2, [r3, #0]
			break;
 8000c06:	e071      	b.n	8000cec <fsm_traffic_light+0x40c>
		case YEL_TIME_CONFIG_CHANGE:
			yel_time_config_change();
 8000c08:	f000 fd5e 	bl	80016c8 <yel_time_config_change>

			if (isButtonPressed(&button0)) // -> GRN_TIME_CONFIG
 8000c0c:	4840      	ldr	r0, [pc, #256]	@ (8000d10 <fsm_traffic_light+0x430>)
 8000c0e:	f7ff fe31 	bl	8000874 <isButtonPressed>
 8000c12:	4603      	mov	r3, r0
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	d005      	beq.n	8000c24 <fsm_traffic_light+0x344>
			{
				init_grn_time_config();
 8000c18:	f000 fde0 	bl	80017dc <init_grn_time_config>
				TRAFFIC_LIGHT_STATE = GRN_TIME_CONFIG;
 8000c1c:	4b3b      	ldr	r3, [pc, #236]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000c1e:	220d      	movs	r2, #13
 8000c20:	701a      	strb	r2, [r3, #0]
			else if (yel_temp_time == yel_time) // -> YEL_TIME_CONFIG
			{
				init_yel_time_config();
				TRAFFIC_LIGHT_STATE = YEL_TIME_CONFIG;
			}
			break;
 8000c22:	e065      	b.n	8000cf0 <fsm_traffic_light+0x410>
			else if (yel_temp_time == yel_time) // -> YEL_TIME_CONFIG
 8000c24:	4b37      	ldr	r3, [pc, #220]	@ (8000d04 <fsm_traffic_light+0x424>)
 8000c26:	681a      	ldr	r2, [r3, #0]
 8000c28:	4b37      	ldr	r3, [pc, #220]	@ (8000d08 <fsm_traffic_light+0x428>)
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	429a      	cmp	r2, r3
 8000c2e:	d15f      	bne.n	8000cf0 <fsm_traffic_light+0x410>
				init_yel_time_config();
 8000c30:	f000 fca4 	bl	800157c <init_yel_time_config>
				TRAFFIC_LIGHT_STATE = YEL_TIME_CONFIG;
 8000c34:	4b35      	ldr	r3, [pc, #212]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000c36:	220b      	movs	r2, #11
 8000c38:	701a      	strb	r2, [r3, #0]
			break;
 8000c3a:	e059      	b.n	8000cf0 <fsm_traffic_light+0x410>
		case GRN_TIME_CONFIG:
			grn_time_config();
 8000c3c:	f000 fdf8 	bl	8001830 <grn_time_config>

			if (isButtonPressed(&button0)) // -> AUTO_RED_GRN
 8000c40:	4833      	ldr	r0, [pc, #204]	@ (8000d10 <fsm_traffic_light+0x430>)
 8000c42:	f7ff fe17 	bl	8000874 <isButtonPressed>
 8000c46:	4603      	mov	r3, r0
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d005      	beq.n	8000c58 <fsm_traffic_light+0x378>
			{
				init_auto_red_grn();
 8000c4c:	f000 f972 	bl	8000f34 <init_auto_red_grn>
				TRAFFIC_LIGHT_STATE = AUTO_RED_GRN;
 8000c50:	4b2e      	ldr	r3, [pc, #184]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000c52:	2201      	movs	r2, #1
 8000c54:	701a      	strb	r2, [r3, #0]
			else if (grn_temp_time != grn_time) // -> GRN_TIME_CONFIG_CHANGE
			{
				init_grn_time_config_change();
				TRAFFIC_LIGHT_STATE = GRN_TIME_CONFIG_CHANGE;
			}
			break;
 8000c56:	e04d      	b.n	8000cf4 <fsm_traffic_light+0x414>
			else if (grn_temp_time != grn_time) // -> GRN_TIME_CONFIG_CHANGE
 8000c58:	4b2e      	ldr	r3, [pc, #184]	@ (8000d14 <fsm_traffic_light+0x434>)
 8000c5a:	681a      	ldr	r2, [r3, #0]
 8000c5c:	4b2e      	ldr	r3, [pc, #184]	@ (8000d18 <fsm_traffic_light+0x438>)
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	429a      	cmp	r2, r3
 8000c62:	d047      	beq.n	8000cf4 <fsm_traffic_light+0x414>
				init_grn_time_config_change();
 8000c64:	f000 fe32 	bl	80018cc <init_grn_time_config_change>
				TRAFFIC_LIGHT_STATE = GRN_TIME_CONFIG_CHANGE;
 8000c68:	4b28      	ldr	r3, [pc, #160]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000c6a:	220e      	movs	r2, #14
 8000c6c:	701a      	strb	r2, [r3, #0]
			break;
 8000c6e:	e041      	b.n	8000cf4 <fsm_traffic_light+0x414>
		case GRN_TIME_CONFIG_CHANGE:
			grn_time_config_change();
 8000c70:	f000 fe5a 	bl	8001928 <grn_time_config_change>

			if (isButtonPressed(&button0)) // -> AUTO_RED_GRN
 8000c74:	4826      	ldr	r0, [pc, #152]	@ (8000d10 <fsm_traffic_light+0x430>)
 8000c76:	f7ff fdfd 	bl	8000874 <isButtonPressed>
 8000c7a:	4603      	mov	r3, r0
 8000c7c:	2b00      	cmp	r3, #0
 8000c7e:	d005      	beq.n	8000c8c <fsm_traffic_light+0x3ac>
			{
				init_auto_red_grn();
 8000c80:	f000 f958 	bl	8000f34 <init_auto_red_grn>
				TRAFFIC_LIGHT_STATE = AUTO_RED_GRN;
 8000c84:	4b21      	ldr	r3, [pc, #132]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000c86:	2201      	movs	r2, #1
 8000c88:	701a      	strb	r2, [r3, #0]
			else if (grn_temp_time == grn_time) // -> GRN_TIME_CONFIG
			{
				init_grn_time_config();
				TRAFFIC_LIGHT_STATE = GRN_TIME_CONFIG;
			}
			break;
 8000c8a:	e035      	b.n	8000cf8 <fsm_traffic_light+0x418>
			else if (grn_temp_time == grn_time) // -> GRN_TIME_CONFIG
 8000c8c:	4b21      	ldr	r3, [pc, #132]	@ (8000d14 <fsm_traffic_light+0x434>)
 8000c8e:	681a      	ldr	r2, [r3, #0]
 8000c90:	4b21      	ldr	r3, [pc, #132]	@ (8000d18 <fsm_traffic_light+0x438>)
 8000c92:	681b      	ldr	r3, [r3, #0]
 8000c94:	429a      	cmp	r2, r3
 8000c96:	d12f      	bne.n	8000cf8 <fsm_traffic_light+0x418>
				init_grn_time_config();
 8000c98:	f000 fda0 	bl	80017dc <init_grn_time_config>
				TRAFFIC_LIGHT_STATE = GRN_TIME_CONFIG;
 8000c9c:	4b1b      	ldr	r3, [pc, #108]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000c9e:	220d      	movs	r2, #13
 8000ca0:	701a      	strb	r2, [r3, #0]
			break;
 8000ca2:	e029      	b.n	8000cf8 <fsm_traffic_light+0x418>
		case YEL_BLINKY:
			yel_blinky();
 8000ca4:	f000 fed6 	bl	8001a54 <yel_blinky>

			if (isButtonPressed(&button1)) // -> AUTO_RED_GRN
 8000ca8:	481c      	ldr	r0, [pc, #112]	@ (8000d1c <fsm_traffic_light+0x43c>)
 8000caa:	f7ff fde3 	bl	8000874 <isButtonPressed>
 8000cae:	4603      	mov	r3, r0
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d023      	beq.n	8000cfc <fsm_traffic_light+0x41c>
			{
				init_auto_red_grn();
 8000cb4:	f000 f93e 	bl	8000f34 <init_auto_red_grn>
				TRAFFIC_LIGHT_STATE = AUTO_RED_GRN;
 8000cb8:	4b14      	ldr	r3, [pc, #80]	@ (8000d0c <fsm_traffic_light+0x42c>)
 8000cba:	2201      	movs	r2, #1
 8000cbc:	701a      	strb	r2, [r3, #0]
			}
			break;
 8000cbe:	e01d      	b.n	8000cfc <fsm_traffic_light+0x41c>
		default:
			break;
 8000cc0:	bf00      	nop
 8000cc2:	e01c      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cc4:	bf00      	nop
 8000cc6:	e01a      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cc8:	bf00      	nop
 8000cca:	e018      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000ccc:	bf00      	nop
 8000cce:	e016      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cd0:	bf00      	nop
 8000cd2:	e014      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cd4:	bf00      	nop
 8000cd6:	e012      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cd8:	bf00      	nop
 8000cda:	e010      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cdc:	bf00      	nop
 8000cde:	e00e      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000ce0:	bf00      	nop
 8000ce2:	e00c      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000ce4:	bf00      	nop
 8000ce6:	e00a      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000ce8:	bf00      	nop
 8000cea:	e008      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cec:	bf00      	nop
 8000cee:	e006      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cf0:	bf00      	nop
 8000cf2:	e004      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cf4:	bf00      	nop
 8000cf6:	e002      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cf8:	bf00      	nop
 8000cfa:	e000      	b.n	8000cfe <fsm_traffic_light+0x41e>
			break;
 8000cfc:	bf00      	nop
	}
}
 8000cfe:	bf00      	nop
 8000d00:	bd80      	pop	{r7, pc}
 8000d02:	bf00      	nop
 8000d04:	2000008c 	.word	0x2000008c
 8000d08:	20000080 	.word	0x20000080
 8000d0c:	200000bc 	.word	0x200000bc
 8000d10:	20000000 	.word	0x20000000
 8000d14:	20000090 	.word	0x20000090
 8000d18:	20000084 	.word	0x20000084
 8000d1c:	20000024 	.word	0x20000024

08000d20 <turn_red_on>:

void turn_red_on()
{
 8000d20:	b580      	push	{r7, lr}
 8000d22:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin, LED_ON);
 8000d24:	2200      	movs	r2, #0
 8000d26:	2110      	movs	r1, #16
 8000d28:	480f      	ldr	r0, [pc, #60]	@ (8000d68 <turn_red_on+0x48>)
 8000d2a:	f001 fc06 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin, LED_OFF);
 8000d2e:	2201      	movs	r2, #1
 8000d30:	2120      	movs	r1, #32
 8000d32:	480d      	ldr	r0, [pc, #52]	@ (8000d68 <turn_red_on+0x48>)
 8000d34:	f001 fc01 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin, LED_OFF);
 8000d38:	2201      	movs	r2, #1
 8000d3a:	2140      	movs	r1, #64	@ 0x40
 8000d3c:	480a      	ldr	r0, [pc, #40]	@ (8000d68 <turn_red_on+0x48>)
 8000d3e:	f001 fbfc 	bl	800253a <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 8000d42:	2200      	movs	r2, #0
 8000d44:	2180      	movs	r1, #128	@ 0x80
 8000d46:	4808      	ldr	r0, [pc, #32]	@ (8000d68 <turn_red_on+0x48>)
 8000d48:	f001 fbf7 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin, LED_OFF);
 8000d4c:	2201      	movs	r2, #1
 8000d4e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000d52:	4805      	ldr	r0, [pc, #20]	@ (8000d68 <turn_red_on+0x48>)
 8000d54:	f001 fbf1 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin, LED_OFF);
 8000d58:	2201      	movs	r2, #1
 8000d5a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000d5e:	4802      	ldr	r0, [pc, #8]	@ (8000d68 <turn_red_on+0x48>)
 8000d60:	f001 fbeb 	bl	800253a <HAL_GPIO_WritePin>
}
 8000d64:	bf00      	nop
 8000d66:	bd80      	pop	{r7, pc}
 8000d68:	40010c00 	.word	0x40010c00

08000d6c <turn_yel_on>:

void turn_yel_on()
{
 8000d6c:	b580      	push	{r7, lr}
 8000d6e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin, LED_OFF);
 8000d70:	2201      	movs	r2, #1
 8000d72:	2110      	movs	r1, #16
 8000d74:	480f      	ldr	r0, [pc, #60]	@ (8000db4 <turn_yel_on+0x48>)
 8000d76:	f001 fbe0 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin, LED_ON);
 8000d7a:	2200      	movs	r2, #0
 8000d7c:	2120      	movs	r1, #32
 8000d7e:	480d      	ldr	r0, [pc, #52]	@ (8000db4 <turn_yel_on+0x48>)
 8000d80:	f001 fbdb 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin, LED_OFF);
 8000d84:	2201      	movs	r2, #1
 8000d86:	2140      	movs	r1, #64	@ 0x40
 8000d88:	480a      	ldr	r0, [pc, #40]	@ (8000db4 <turn_yel_on+0x48>)
 8000d8a:	f001 fbd6 	bl	800253a <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000d8e:	2201      	movs	r2, #1
 8000d90:	2180      	movs	r1, #128	@ 0x80
 8000d92:	4808      	ldr	r0, [pc, #32]	@ (8000db4 <turn_yel_on+0x48>)
 8000d94:	f001 fbd1 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin, LED_ON);
 8000d98:	2200      	movs	r2, #0
 8000d9a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000d9e:	4805      	ldr	r0, [pc, #20]	@ (8000db4 <turn_yel_on+0x48>)
 8000da0:	f001 fbcb 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin, LED_OFF);
 8000da4:	2201      	movs	r2, #1
 8000da6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000daa:	4802      	ldr	r0, [pc, #8]	@ (8000db4 <turn_yel_on+0x48>)
 8000dac:	f001 fbc5 	bl	800253a <HAL_GPIO_WritePin>
}
 8000db0:	bf00      	nop
 8000db2:	bd80      	pop	{r7, pc}
 8000db4:	40010c00 	.word	0x40010c00

08000db8 <turn_grn_on>:

void turn_grn_on()
{
 8000db8:	b580      	push	{r7, lr}
 8000dba:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin, LED_OFF);
 8000dbc:	2201      	movs	r2, #1
 8000dbe:	2110      	movs	r1, #16
 8000dc0:	480f      	ldr	r0, [pc, #60]	@ (8000e00 <turn_grn_on+0x48>)
 8000dc2:	f001 fbba 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin, LED_OFF);
 8000dc6:	2201      	movs	r2, #1
 8000dc8:	2120      	movs	r1, #32
 8000dca:	480d      	ldr	r0, [pc, #52]	@ (8000e00 <turn_grn_on+0x48>)
 8000dcc:	f001 fbb5 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin, LED_ON);
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	2140      	movs	r1, #64	@ 0x40
 8000dd4:	480a      	ldr	r0, [pc, #40]	@ (8000e00 <turn_grn_on+0x48>)
 8000dd6:	f001 fbb0 	bl	800253a <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000dda:	2201      	movs	r2, #1
 8000ddc:	2180      	movs	r1, #128	@ 0x80
 8000dde:	4808      	ldr	r0, [pc, #32]	@ (8000e00 <turn_grn_on+0x48>)
 8000de0:	f001 fbab 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin, LED_OFF);
 8000de4:	2201      	movs	r2, #1
 8000de6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000dea:	4805      	ldr	r0, [pc, #20]	@ (8000e00 <turn_grn_on+0x48>)
 8000dec:	f001 fba5 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin, LED_ON);
 8000df0:	2200      	movs	r2, #0
 8000df2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000df6:	4802      	ldr	r0, [pc, #8]	@ (8000e00 <turn_grn_on+0x48>)
 8000df8:	f001 fb9f 	bl	800253a <HAL_GPIO_WritePin>
}
 8000dfc:	bf00      	nop
 8000dfe:	bd80      	pop	{r7, pc}
 8000e00:	40010c00 	.word	0x40010c00

08000e04 <turn_on_red_grn>:

void turn_on_red_grn()
{
 8000e04:	b580      	push	{r7, lr}
 8000e06:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin, LED_ON);
 8000e08:	2200      	movs	r2, #0
 8000e0a:	2110      	movs	r1, #16
 8000e0c:	480f      	ldr	r0, [pc, #60]	@ (8000e4c <turn_on_red_grn+0x48>)
 8000e0e:	f001 fb94 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin, LED_OFF);
 8000e12:	2201      	movs	r2, #1
 8000e14:	2120      	movs	r1, #32
 8000e16:	480d      	ldr	r0, [pc, #52]	@ (8000e4c <turn_on_red_grn+0x48>)
 8000e18:	f001 fb8f 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin, LED_OFF);
 8000e1c:	2201      	movs	r2, #1
 8000e1e:	2140      	movs	r1, #64	@ 0x40
 8000e20:	480a      	ldr	r0, [pc, #40]	@ (8000e4c <turn_on_red_grn+0x48>)
 8000e22:	f001 fb8a 	bl	800253a <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000e26:	2201      	movs	r2, #1
 8000e28:	2180      	movs	r1, #128	@ 0x80
 8000e2a:	4808      	ldr	r0, [pc, #32]	@ (8000e4c <turn_on_red_grn+0x48>)
 8000e2c:	f001 fb85 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin, LED_OFF);
 8000e30:	2201      	movs	r2, #1
 8000e32:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000e36:	4805      	ldr	r0, [pc, #20]	@ (8000e4c <turn_on_red_grn+0x48>)
 8000e38:	f001 fb7f 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin, LED_ON);
 8000e3c:	2200      	movs	r2, #0
 8000e3e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000e42:	4802      	ldr	r0, [pc, #8]	@ (8000e4c <turn_on_red_grn+0x48>)
 8000e44:	f001 fb79 	bl	800253a <HAL_GPIO_WritePin>
}
 8000e48:	bf00      	nop
 8000e4a:	bd80      	pop	{r7, pc}
 8000e4c:	40010c00 	.word	0x40010c00

08000e50 <turn_on_red_yel>:

void turn_on_red_yel()
{
 8000e50:	b580      	push	{r7, lr}
 8000e52:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin, LED_ON);
 8000e54:	2200      	movs	r2, #0
 8000e56:	2110      	movs	r1, #16
 8000e58:	480f      	ldr	r0, [pc, #60]	@ (8000e98 <turn_on_red_yel+0x48>)
 8000e5a:	f001 fb6e 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin, LED_OFF);
 8000e5e:	2201      	movs	r2, #1
 8000e60:	2120      	movs	r1, #32
 8000e62:	480d      	ldr	r0, [pc, #52]	@ (8000e98 <turn_on_red_yel+0x48>)
 8000e64:	f001 fb69 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin, LED_OFF);
 8000e68:	2201      	movs	r2, #1
 8000e6a:	2140      	movs	r1, #64	@ 0x40
 8000e6c:	480a      	ldr	r0, [pc, #40]	@ (8000e98 <turn_on_red_yel+0x48>)
 8000e6e:	f001 fb64 	bl	800253a <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000e72:	2201      	movs	r2, #1
 8000e74:	2180      	movs	r1, #128	@ 0x80
 8000e76:	4808      	ldr	r0, [pc, #32]	@ (8000e98 <turn_on_red_yel+0x48>)
 8000e78:	f001 fb5f 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin, LED_ON);
 8000e7c:	2200      	movs	r2, #0
 8000e7e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000e82:	4805      	ldr	r0, [pc, #20]	@ (8000e98 <turn_on_red_yel+0x48>)
 8000e84:	f001 fb59 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin, LED_OFF);
 8000e88:	2201      	movs	r2, #1
 8000e8a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000e8e:	4802      	ldr	r0, [pc, #8]	@ (8000e98 <turn_on_red_yel+0x48>)
 8000e90:	f001 fb53 	bl	800253a <HAL_GPIO_WritePin>
}
 8000e94:	bf00      	nop
 8000e96:	bd80      	pop	{r7, pc}
 8000e98:	40010c00 	.word	0x40010c00

08000e9c <turn_on_grn_red>:

void turn_on_grn_red()
{
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin, LED_OFF);
 8000ea0:	2201      	movs	r2, #1
 8000ea2:	2110      	movs	r1, #16
 8000ea4:	480f      	ldr	r0, [pc, #60]	@ (8000ee4 <turn_on_grn_red+0x48>)
 8000ea6:	f001 fb48 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin, LED_OFF);
 8000eaa:	2201      	movs	r2, #1
 8000eac:	2120      	movs	r1, #32
 8000eae:	480d      	ldr	r0, [pc, #52]	@ (8000ee4 <turn_on_grn_red+0x48>)
 8000eb0:	f001 fb43 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin, LED_ON);
 8000eb4:	2200      	movs	r2, #0
 8000eb6:	2140      	movs	r1, #64	@ 0x40
 8000eb8:	480a      	ldr	r0, [pc, #40]	@ (8000ee4 <turn_on_grn_red+0x48>)
 8000eba:	f001 fb3e 	bl	800253a <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	2180      	movs	r1, #128	@ 0x80
 8000ec2:	4808      	ldr	r0, [pc, #32]	@ (8000ee4 <turn_on_grn_red+0x48>)
 8000ec4:	f001 fb39 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin, LED_OFF);
 8000ec8:	2201      	movs	r2, #1
 8000eca:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000ece:	4805      	ldr	r0, [pc, #20]	@ (8000ee4 <turn_on_grn_red+0x48>)
 8000ed0:	f001 fb33 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin, LED_OFF);
 8000ed4:	2201      	movs	r2, #1
 8000ed6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000eda:	4802      	ldr	r0, [pc, #8]	@ (8000ee4 <turn_on_grn_red+0x48>)
 8000edc:	f001 fb2d 	bl	800253a <HAL_GPIO_WritePin>
}
 8000ee0:	bf00      	nop
 8000ee2:	bd80      	pop	{r7, pc}
 8000ee4:	40010c00 	.word	0x40010c00

08000ee8 <turn_on_yel_red>:

void turn_on_yel_red()
{
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin, LED_OFF);
 8000eec:	2201      	movs	r2, #1
 8000eee:	2110      	movs	r1, #16
 8000ef0:	480f      	ldr	r0, [pc, #60]	@ (8000f30 <turn_on_yel_red+0x48>)
 8000ef2:	f001 fb22 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin, LED_ON);
 8000ef6:	2200      	movs	r2, #0
 8000ef8:	2120      	movs	r1, #32
 8000efa:	480d      	ldr	r0, [pc, #52]	@ (8000f30 <turn_on_yel_red+0x48>)
 8000efc:	f001 fb1d 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin, LED_OFF);
 8000f00:	2201      	movs	r2, #1
 8000f02:	2140      	movs	r1, #64	@ 0x40
 8000f04:	480a      	ldr	r0, [pc, #40]	@ (8000f30 <turn_on_yel_red+0x48>)
 8000f06:	f001 fb18 	bl	800253a <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	2180      	movs	r1, #128	@ 0x80
 8000f0e:	4808      	ldr	r0, [pc, #32]	@ (8000f30 <turn_on_yel_red+0x48>)
 8000f10:	f001 fb13 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin, LED_OFF);
 8000f14:	2201      	movs	r2, #1
 8000f16:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000f1a:	4805      	ldr	r0, [pc, #20]	@ (8000f30 <turn_on_yel_red+0x48>)
 8000f1c:	f001 fb0d 	bl	800253a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin, LED_OFF);
 8000f20:	2201      	movs	r2, #1
 8000f22:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000f26:	4802      	ldr	r0, [pc, #8]	@ (8000f30 <turn_on_yel_red+0x48>)
 8000f28:	f001 fb07 	bl	800253a <HAL_GPIO_WritePin>
}
 8000f2c:	bf00      	nop
 8000f2e:	bd80      	pop	{r7, pc}
 8000f30:	40010c00 	.word	0x40010c00

08000f34 <init_auto_red_grn>:

void init_auto_red_grn()
{
 8000f34:	b580      	push	{r7, lr}
 8000f36:	af00      	add	r7, sp, #0
	// TIMER_TRAFFIC_LIGHT, BTN_0, BTN_1, BTN_2
	setTimer(TIMER_TRAFFIC_LIGHT, grn_time * 1000);
 8000f38:	4b14      	ldr	r3, [pc, #80]	@ (8000f8c <init_auto_red_grn+0x58>)
 8000f3a:	681b      	ldr	r3, [r3, #0]
 8000f3c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000f40:	fb02 f303 	mul.w	r3, r2, r3
 8000f44:	4619      	mov	r1, r3
 8000f46:	2001      	movs	r0, #1
 8000f48:	f000 fe92 	bl	8001c70 <setTimer>
	resetButton(&button0);
 8000f4c:	4810      	ldr	r0, [pc, #64]	@ (8000f90 <init_auto_red_grn+0x5c>)
 8000f4e:	f7ff fcb7 	bl	80008c0 <resetButton>
	resetButton(&button1);
 8000f52:	4810      	ldr	r0, [pc, #64]	@ (8000f94 <init_auto_red_grn+0x60>)
 8000f54:	f7ff fcb4 	bl	80008c0 <resetButton>
	resetButton(&button2);
 8000f58:	480f      	ldr	r0, [pc, #60]	@ (8000f98 <init_auto_red_grn+0x64>)
 8000f5a:	f7ff fcb1 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	set_on_4digits();
 8000f5e:	f7ff f8f5 	bl	800014c <set_on_4digits>
	setTimer(TIMER_7SEG, TIME_7SEG);
 8000f62:	2105      	movs	r1, #5
 8000f64:	2002      	movs	r0, #2
 8000f66:	f000 fe83 	bl	8001c70 <setTimer>
	setTimer(TIMER_1SEC, TIME_1SEC);
 8000f6a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000f6e:	2004      	movs	r0, #4
 8000f70:	f000 fe7e 	bl	8001c70 <setTimer>
	counter_way0 = red_time;
 8000f74:	4b09      	ldr	r3, [pc, #36]	@ (8000f9c <init_auto_red_grn+0x68>)
 8000f76:	681b      	ldr	r3, [r3, #0]
 8000f78:	4a09      	ldr	r2, [pc, #36]	@ (8000fa0 <init_auto_red_grn+0x6c>)
 8000f7a:	6013      	str	r3, [r2, #0]
	counter_way1 = grn_time;
 8000f7c:	4b03      	ldr	r3, [pc, #12]	@ (8000f8c <init_auto_red_grn+0x58>)
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	4a08      	ldr	r2, [pc, #32]	@ (8000fa4 <init_auto_red_grn+0x70>)
 8000f82:	6013      	str	r3, [r2, #0]
	update_led_7seg_buffer();
 8000f84:	f7ff f954 	bl	8000230 <update_led_7seg_buffer>

}
 8000f88:	bf00      	nop
 8000f8a:	bd80      	pop	{r7, pc}
 8000f8c:	20000084 	.word	0x20000084
 8000f90:	20000000 	.word	0x20000000
 8000f94:	20000024 	.word	0x20000024
 8000f98:	20000048 	.word	0x20000048
 8000f9c:	2000007c 	.word	0x2000007c
 8000fa0:	200000d4 	.word	0x200000d4
 8000fa4:	200000d8 	.word	0x200000d8

08000fa8 <auto_red_grn>:
void auto_red_grn()
{
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	af00      	add	r7, sp, #0
	if (1)
	{
		turn_on_red_grn();
 8000fac:	f7ff ff2a 	bl	8000e04 <turn_on_red_grn>
	}

	if (isFlag(TIMER_7SEG))
 8000fb0:	2002      	movs	r0, #2
 8000fb2:	f000 fea5 	bl	8001d00 <isFlag>
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d005      	beq.n	8000fc8 <auto_red_grn+0x20>
	{
		display_4digits();
 8000fbc:	f7ff f8f8 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 8000fc0:	2105      	movs	r1, #5
 8000fc2:	2002      	movs	r0, #2
 8000fc4:	f000 fe54 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_1SEC))
 8000fc8:	2004      	movs	r0, #4
 8000fca:	f000 fe99 	bl	8001d00 <isFlag>
 8000fce:	4603      	mov	r3, r0
 8000fd0:	2b00      	cmp	r3, #0
 8000fd2:	d010      	beq.n	8000ff6 <auto_red_grn+0x4e>
	{
		--counter_way0;
 8000fd4:	4b09      	ldr	r3, [pc, #36]	@ (8000ffc <auto_red_grn+0x54>)
 8000fd6:	681b      	ldr	r3, [r3, #0]
 8000fd8:	3b01      	subs	r3, #1
 8000fda:	4a08      	ldr	r2, [pc, #32]	@ (8000ffc <auto_red_grn+0x54>)
 8000fdc:	6013      	str	r3, [r2, #0]
		--counter_way1;
 8000fde:	4b08      	ldr	r3, [pc, #32]	@ (8001000 <auto_red_grn+0x58>)
 8000fe0:	681b      	ldr	r3, [r3, #0]
 8000fe2:	3b01      	subs	r3, #1
 8000fe4:	4a06      	ldr	r2, [pc, #24]	@ (8001000 <auto_red_grn+0x58>)
 8000fe6:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 8000fe8:	f7ff f922 	bl	8000230 <update_led_7seg_buffer>
		setTimer(TIMER_1SEC, TIME_1SEC);
 8000fec:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000ff0:	2004      	movs	r0, #4
 8000ff2:	f000 fe3d 	bl	8001c70 <setTimer>
	}
}
 8000ff6:	bf00      	nop
 8000ff8:	bd80      	pop	{r7, pc}
 8000ffa:	bf00      	nop
 8000ffc:	200000d4 	.word	0x200000d4
 8001000:	200000d8 	.word	0x200000d8

08001004 <init_auto_red_yel>:

void init_auto_red_yel()
{
 8001004:	b580      	push	{r7, lr}
 8001006:	af00      	add	r7, sp, #0
	// TIMER_TRAFFIC_LIGHT, BTN_0, BTN_1
	setTimer(TIMER_TRAFFIC_LIGHT, yel_time * 1000);
 8001008:	4b13      	ldr	r3, [pc, #76]	@ (8001058 <init_auto_red_yel+0x54>)
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001010:	fb02 f303 	mul.w	r3, r2, r3
 8001014:	4619      	mov	r1, r3
 8001016:	2001      	movs	r0, #1
 8001018:	f000 fe2a 	bl	8001c70 <setTimer>
	resetButton(&button0);
 800101c:	480f      	ldr	r0, [pc, #60]	@ (800105c <init_auto_red_yel+0x58>)
 800101e:	f7ff fc4f 	bl	80008c0 <resetButton>
	resetButton(&button1);
 8001022:	480f      	ldr	r0, [pc, #60]	@ (8001060 <init_auto_red_yel+0x5c>)
 8001024:	f7ff fc4c 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	set_on_4digits();
 8001028:	f7ff f890 	bl	800014c <set_on_4digits>
	setTimer(TIMER_7SEG, TIME_7SEG);
 800102c:	2105      	movs	r1, #5
 800102e:	2002      	movs	r0, #2
 8001030:	f000 fe1e 	bl	8001c70 <setTimer>
	setTimer(TIMER_1SEC, TIME_1SEC);
 8001034:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001038:	2004      	movs	r0, #4
 800103a:	f000 fe19 	bl	8001c70 <setTimer>
	counter_way0 = yel_time;
 800103e:	4b06      	ldr	r3, [pc, #24]	@ (8001058 <init_auto_red_yel+0x54>)
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	4a08      	ldr	r2, [pc, #32]	@ (8001064 <init_auto_red_yel+0x60>)
 8001044:	6013      	str	r3, [r2, #0]
	counter_way1 = yel_time;
 8001046:	4b04      	ldr	r3, [pc, #16]	@ (8001058 <init_auto_red_yel+0x54>)
 8001048:	681b      	ldr	r3, [r3, #0]
 800104a:	4a07      	ldr	r2, [pc, #28]	@ (8001068 <init_auto_red_yel+0x64>)
 800104c:	6013      	str	r3, [r2, #0]
	update_led_7seg_buffer();
 800104e:	f7ff f8ef 	bl	8000230 <update_led_7seg_buffer>
}
 8001052:	bf00      	nop
 8001054:	bd80      	pop	{r7, pc}
 8001056:	bf00      	nop
 8001058:	20000080 	.word	0x20000080
 800105c:	20000000 	.word	0x20000000
 8001060:	20000024 	.word	0x20000024
 8001064:	200000d4 	.word	0x200000d4
 8001068:	200000d8 	.word	0x200000d8

0800106c <auto_red_yel>:
void auto_red_yel()
{
 800106c:	b580      	push	{r7, lr}
 800106e:	af00      	add	r7, sp, #0
	if (1)
	{
		turn_on_red_yel();
 8001070:	f7ff feee 	bl	8000e50 <turn_on_red_yel>
	}

	if (isFlag(TIMER_7SEG))
 8001074:	2002      	movs	r0, #2
 8001076:	f000 fe43 	bl	8001d00 <isFlag>
 800107a:	4603      	mov	r3, r0
 800107c:	2b00      	cmp	r3, #0
 800107e:	d005      	beq.n	800108c <auto_red_yel+0x20>
	{
		display_4digits();
 8001080:	f7ff f896 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 8001084:	2105      	movs	r1, #5
 8001086:	2002      	movs	r0, #2
 8001088:	f000 fdf2 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_1SEC))
 800108c:	2004      	movs	r0, #4
 800108e:	f000 fe37 	bl	8001d00 <isFlag>
 8001092:	4603      	mov	r3, r0
 8001094:	2b00      	cmp	r3, #0
 8001096:	d010      	beq.n	80010ba <auto_red_yel+0x4e>
	{
		--counter_way0;
 8001098:	4b09      	ldr	r3, [pc, #36]	@ (80010c0 <auto_red_yel+0x54>)
 800109a:	681b      	ldr	r3, [r3, #0]
 800109c:	3b01      	subs	r3, #1
 800109e:	4a08      	ldr	r2, [pc, #32]	@ (80010c0 <auto_red_yel+0x54>)
 80010a0:	6013      	str	r3, [r2, #0]
		--counter_way1;
 80010a2:	4b08      	ldr	r3, [pc, #32]	@ (80010c4 <auto_red_yel+0x58>)
 80010a4:	681b      	ldr	r3, [r3, #0]
 80010a6:	3b01      	subs	r3, #1
 80010a8:	4a06      	ldr	r2, [pc, #24]	@ (80010c4 <auto_red_yel+0x58>)
 80010aa:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 80010ac:	f7ff f8c0 	bl	8000230 <update_led_7seg_buffer>
		setTimer(TIMER_1SEC, TIME_1SEC);
 80010b0:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80010b4:	2004      	movs	r0, #4
 80010b6:	f000 fddb 	bl	8001c70 <setTimer>
	}
}
 80010ba:	bf00      	nop
 80010bc:	bd80      	pop	{r7, pc}
 80010be:	bf00      	nop
 80010c0:	200000d4 	.word	0x200000d4
 80010c4:	200000d8 	.word	0x200000d8

080010c8 <init_auto_grn_red>:

void init_auto_grn_red()
{
 80010c8:	b580      	push	{r7, lr}
 80010ca:	af00      	add	r7, sp, #0
	// TIMER_TRAFFIC_LIGHT, BTN_0, BTN_1, BTN_2
	setTimer(TIMER_TRAFFIC_LIGHT, grn_time * 1000);
 80010cc:	4b14      	ldr	r3, [pc, #80]	@ (8001120 <init_auto_grn_red+0x58>)
 80010ce:	681b      	ldr	r3, [r3, #0]
 80010d0:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80010d4:	fb02 f303 	mul.w	r3, r2, r3
 80010d8:	4619      	mov	r1, r3
 80010da:	2001      	movs	r0, #1
 80010dc:	f000 fdc8 	bl	8001c70 <setTimer>
	resetButton(&button0);
 80010e0:	4810      	ldr	r0, [pc, #64]	@ (8001124 <init_auto_grn_red+0x5c>)
 80010e2:	f7ff fbed 	bl	80008c0 <resetButton>
	resetButton(&button1);
 80010e6:	4810      	ldr	r0, [pc, #64]	@ (8001128 <init_auto_grn_red+0x60>)
 80010e8:	f7ff fbea 	bl	80008c0 <resetButton>
	resetButton(&button2);
 80010ec:	480f      	ldr	r0, [pc, #60]	@ (800112c <init_auto_grn_red+0x64>)
 80010ee:	f7ff fbe7 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	set_on_4digits();
 80010f2:	f7ff f82b 	bl	800014c <set_on_4digits>
	setTimer(TIMER_7SEG, TIME_7SEG);
 80010f6:	2105      	movs	r1, #5
 80010f8:	2002      	movs	r0, #2
 80010fa:	f000 fdb9 	bl	8001c70 <setTimer>
	setTimer(TIMER_1SEC, TIME_1SEC);
 80010fe:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001102:	2004      	movs	r0, #4
 8001104:	f000 fdb4 	bl	8001c70 <setTimer>
	counter_way0 = grn_time;
 8001108:	4b05      	ldr	r3, [pc, #20]	@ (8001120 <init_auto_grn_red+0x58>)
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	4a08      	ldr	r2, [pc, #32]	@ (8001130 <init_auto_grn_red+0x68>)
 800110e:	6013      	str	r3, [r2, #0]
	counter_way1 = red_time;
 8001110:	4b08      	ldr	r3, [pc, #32]	@ (8001134 <init_auto_grn_red+0x6c>)
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	4a08      	ldr	r2, [pc, #32]	@ (8001138 <init_auto_grn_red+0x70>)
 8001116:	6013      	str	r3, [r2, #0]
	update_led_7seg_buffer();
 8001118:	f7ff f88a 	bl	8000230 <update_led_7seg_buffer>
}
 800111c:	bf00      	nop
 800111e:	bd80      	pop	{r7, pc}
 8001120:	20000084 	.word	0x20000084
 8001124:	20000000 	.word	0x20000000
 8001128:	20000024 	.word	0x20000024
 800112c:	20000048 	.word	0x20000048
 8001130:	200000d4 	.word	0x200000d4
 8001134:	2000007c 	.word	0x2000007c
 8001138:	200000d8 	.word	0x200000d8

0800113c <auto_grn_red>:
void auto_grn_red()
{
 800113c:	b580      	push	{r7, lr}
 800113e:	af00      	add	r7, sp, #0
	if (1)
	{
		turn_on_grn_red();
 8001140:	f7ff feac 	bl	8000e9c <turn_on_grn_red>
	}

	if (isFlag(TIMER_7SEG))
 8001144:	2002      	movs	r0, #2
 8001146:	f000 fddb 	bl	8001d00 <isFlag>
 800114a:	4603      	mov	r3, r0
 800114c:	2b00      	cmp	r3, #0
 800114e:	d005      	beq.n	800115c <auto_grn_red+0x20>
	{
		display_4digits();
 8001150:	f7ff f82e 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 8001154:	2105      	movs	r1, #5
 8001156:	2002      	movs	r0, #2
 8001158:	f000 fd8a 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_1SEC))
 800115c:	2004      	movs	r0, #4
 800115e:	f000 fdcf 	bl	8001d00 <isFlag>
 8001162:	4603      	mov	r3, r0
 8001164:	2b00      	cmp	r3, #0
 8001166:	d010      	beq.n	800118a <auto_grn_red+0x4e>
	{
		--counter_way0;
 8001168:	4b09      	ldr	r3, [pc, #36]	@ (8001190 <auto_grn_red+0x54>)
 800116a:	681b      	ldr	r3, [r3, #0]
 800116c:	3b01      	subs	r3, #1
 800116e:	4a08      	ldr	r2, [pc, #32]	@ (8001190 <auto_grn_red+0x54>)
 8001170:	6013      	str	r3, [r2, #0]
		--counter_way1;
 8001172:	4b08      	ldr	r3, [pc, #32]	@ (8001194 <auto_grn_red+0x58>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	3b01      	subs	r3, #1
 8001178:	4a06      	ldr	r2, [pc, #24]	@ (8001194 <auto_grn_red+0x58>)
 800117a:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 800117c:	f7ff f858 	bl	8000230 <update_led_7seg_buffer>
		setTimer(TIMER_1SEC, TIME_1SEC);
 8001180:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001184:	2004      	movs	r0, #4
 8001186:	f000 fd73 	bl	8001c70 <setTimer>
	}
}
 800118a:	bf00      	nop
 800118c:	bd80      	pop	{r7, pc}
 800118e:	bf00      	nop
 8001190:	200000d4 	.word	0x200000d4
 8001194:	200000d8 	.word	0x200000d8

08001198 <init_auto_yel_red>:

void init_auto_yel_red()
{
 8001198:	b580      	push	{r7, lr}
 800119a:	af00      	add	r7, sp, #0
	// TIMER_TRAFFIC_LIGHT, BTN_0, BTN_1
	setTimer(TIMER_TRAFFIC_LIGHT, yel_time * 1000);
 800119c:	4b13      	ldr	r3, [pc, #76]	@ (80011ec <init_auto_yel_red+0x54>)
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80011a4:	fb02 f303 	mul.w	r3, r2, r3
 80011a8:	4619      	mov	r1, r3
 80011aa:	2001      	movs	r0, #1
 80011ac:	f000 fd60 	bl	8001c70 <setTimer>
	resetButton(&button0);
 80011b0:	480f      	ldr	r0, [pc, #60]	@ (80011f0 <init_auto_yel_red+0x58>)
 80011b2:	f7ff fb85 	bl	80008c0 <resetButton>
	resetButton(&button1);
 80011b6:	480f      	ldr	r0, [pc, #60]	@ (80011f4 <init_auto_yel_red+0x5c>)
 80011b8:	f7ff fb82 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	set_on_4digits();
 80011bc:	f7fe ffc6 	bl	800014c <set_on_4digits>
	setTimer(TIMER_7SEG, TIME_7SEG);
 80011c0:	2105      	movs	r1, #5
 80011c2:	2002      	movs	r0, #2
 80011c4:	f000 fd54 	bl	8001c70 <setTimer>
	setTimer(TIMER_1SEC, TIME_1SEC);
 80011c8:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80011cc:	2004      	movs	r0, #4
 80011ce:	f000 fd4f 	bl	8001c70 <setTimer>
	counter_way0 = yel_time;
 80011d2:	4b06      	ldr	r3, [pc, #24]	@ (80011ec <init_auto_yel_red+0x54>)
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	4a08      	ldr	r2, [pc, #32]	@ (80011f8 <init_auto_yel_red+0x60>)
 80011d8:	6013      	str	r3, [r2, #0]
	counter_way1 = yel_time;
 80011da:	4b04      	ldr	r3, [pc, #16]	@ (80011ec <init_auto_yel_red+0x54>)
 80011dc:	681b      	ldr	r3, [r3, #0]
 80011de:	4a07      	ldr	r2, [pc, #28]	@ (80011fc <init_auto_yel_red+0x64>)
 80011e0:	6013      	str	r3, [r2, #0]
	update_led_7seg_buffer();
 80011e2:	f7ff f825 	bl	8000230 <update_led_7seg_buffer>
}
 80011e6:	bf00      	nop
 80011e8:	bd80      	pop	{r7, pc}
 80011ea:	bf00      	nop
 80011ec:	20000080 	.word	0x20000080
 80011f0:	20000000 	.word	0x20000000
 80011f4:	20000024 	.word	0x20000024
 80011f8:	200000d4 	.word	0x200000d4
 80011fc:	200000d8 	.word	0x200000d8

08001200 <auto_yel_red>:
void auto_yel_red()
{
 8001200:	b580      	push	{r7, lr}
 8001202:	af00      	add	r7, sp, #0
	if (1)
	{
		turn_on_yel_red();
 8001204:	f7ff fe70 	bl	8000ee8 <turn_on_yel_red>
	}

	if (isFlag(TIMER_7SEG))
 8001208:	2002      	movs	r0, #2
 800120a:	f000 fd79 	bl	8001d00 <isFlag>
 800120e:	4603      	mov	r3, r0
 8001210:	2b00      	cmp	r3, #0
 8001212:	d005      	beq.n	8001220 <auto_yel_red+0x20>
	{
		display_4digits();
 8001214:	f7fe ffcc 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 8001218:	2105      	movs	r1, #5
 800121a:	2002      	movs	r0, #2
 800121c:	f000 fd28 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_1SEC))
 8001220:	2004      	movs	r0, #4
 8001222:	f000 fd6d 	bl	8001d00 <isFlag>
 8001226:	4603      	mov	r3, r0
 8001228:	2b00      	cmp	r3, #0
 800122a:	d010      	beq.n	800124e <auto_yel_red+0x4e>
	{
		--counter_way0;
 800122c:	4b09      	ldr	r3, [pc, #36]	@ (8001254 <auto_yel_red+0x54>)
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	3b01      	subs	r3, #1
 8001232:	4a08      	ldr	r2, [pc, #32]	@ (8001254 <auto_yel_red+0x54>)
 8001234:	6013      	str	r3, [r2, #0]
		--counter_way1;
 8001236:	4b08      	ldr	r3, [pc, #32]	@ (8001258 <auto_yel_red+0x58>)
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	3b01      	subs	r3, #1
 800123c:	4a06      	ldr	r2, [pc, #24]	@ (8001258 <auto_yel_red+0x58>)
 800123e:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 8001240:	f7fe fff6 	bl	8000230 <update_led_7seg_buffer>
		setTimer(TIMER_1SEC, TIME_1SEC);
 8001244:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001248:	2004      	movs	r0, #4
 800124a:	f000 fd11 	bl	8001c70 <setTimer>
	}
}
 800124e:	bf00      	nop
 8001250:	bd80      	pop	{r7, pc}
 8001252:	bf00      	nop
 8001254:	200000d4 	.word	0x200000d4
 8001258:	200000d8 	.word	0x200000d8

0800125c <init_man_red_grn>:

void init_man_red_grn()
{
 800125c:	b580      	push	{r7, lr}
 800125e:	af00      	add	r7, sp, #0
	// BTN_1, BTN_2
	resetButton(&button1);
 8001260:	4805      	ldr	r0, [pc, #20]	@ (8001278 <init_man_red_grn+0x1c>)
 8001262:	f7ff fb2d 	bl	80008c0 <resetButton>
	resetButton(&button2);
 8001266:	4805      	ldr	r0, [pc, #20]	@ (800127c <init_man_red_grn+0x20>)
 8001268:	f7ff fb2a 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	setTimer(TIMER_7SEG, TIME_7SEG);
 800126c:	2105      	movs	r1, #5
 800126e:	2002      	movs	r0, #2
 8001270:	f000 fcfe 	bl	8001c70 <setTimer>
}
 8001274:	bf00      	nop
 8001276:	bd80      	pop	{r7, pc}
 8001278:	20000024 	.word	0x20000024
 800127c:	20000048 	.word	0x20000048

08001280 <man_red_grn>:
void man_red_grn()
{
 8001280:	b580      	push	{r7, lr}
 8001282:	af00      	add	r7, sp, #0
	if (1)
	{
		unable_4digit();
 8001284:	f7fe ff76 	bl	8000174 <unable_4digit>
		turn_on_red_grn();
 8001288:	f7ff fdbc 	bl	8000e04 <turn_on_red_grn>
	}
}
 800128c:	bf00      	nop
 800128e:	bd80      	pop	{r7, pc}

08001290 <init_man_red_yel>:

void init_man_red_yel()
{
 8001290:	b580      	push	{r7, lr}
 8001292:	af00      	add	r7, sp, #0
	// TIMER_TRAFFIC_LIGHT
	setTimer(TIMER_TRAFFIC_LIGHT, yel_time * 1000);
 8001294:	4b05      	ldr	r3, [pc, #20]	@ (80012ac <init_man_red_yel+0x1c>)
 8001296:	681b      	ldr	r3, [r3, #0]
 8001298:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800129c:	fb02 f303 	mul.w	r3, r2, r3
 80012a0:	4619      	mov	r1, r3
 80012a2:	2001      	movs	r0, #1
 80012a4:	f000 fce4 	bl	8001c70 <setTimer>
}
 80012a8:	bf00      	nop
 80012aa:	bd80      	pop	{r7, pc}
 80012ac:	20000080 	.word	0x20000080

080012b0 <man_red_yel>:
void man_red_yel()
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	af00      	add	r7, sp, #0
	if (1)
	{
		unable_4digit();
 80012b4:	f7fe ff5e 	bl	8000174 <unable_4digit>
		turn_on_red_yel();
 80012b8:	f7ff fdca 	bl	8000e50 <turn_on_red_yel>
	}
}
 80012bc:	bf00      	nop
 80012be:	bd80      	pop	{r7, pc}

080012c0 <init_man_grn_red>:

void init_man_grn_red()
{
 80012c0:	b580      	push	{r7, lr}
 80012c2:	af00      	add	r7, sp, #0
	// BTN_1, BTN_2
	resetButton(&button1);
 80012c4:	4803      	ldr	r0, [pc, #12]	@ (80012d4 <init_man_grn_red+0x14>)
 80012c6:	f7ff fafb 	bl	80008c0 <resetButton>
	resetButton(&button2);
 80012ca:	4803      	ldr	r0, [pc, #12]	@ (80012d8 <init_man_grn_red+0x18>)
 80012cc:	f7ff faf8 	bl	80008c0 <resetButton>
}
 80012d0:	bf00      	nop
 80012d2:	bd80      	pop	{r7, pc}
 80012d4:	20000024 	.word	0x20000024
 80012d8:	20000048 	.word	0x20000048

080012dc <man_grn_red>:
void man_grn_red()
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	af00      	add	r7, sp, #0
	if (1)
	{
		unable_4digit();
 80012e0:	f7fe ff48 	bl	8000174 <unable_4digit>
		turn_on_grn_red();
 80012e4:	f7ff fdda 	bl	8000e9c <turn_on_grn_red>
	}
}
 80012e8:	bf00      	nop
 80012ea:	bd80      	pop	{r7, pc}

080012ec <init_man_yel_red>:

void init_man_yel_red()
{
 80012ec:	b580      	push	{r7, lr}
 80012ee:	af00      	add	r7, sp, #0
	// TIMER_TRAFFIC_LIGHT
	setTimer(TIMER_TRAFFIC_LIGHT, yel_time * 1000);
 80012f0:	4b05      	ldr	r3, [pc, #20]	@ (8001308 <init_man_yel_red+0x1c>)
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80012f8:	fb02 f303 	mul.w	r3, r2, r3
 80012fc:	4619      	mov	r1, r3
 80012fe:	2001      	movs	r0, #1
 8001300:	f000 fcb6 	bl	8001c70 <setTimer>
}
 8001304:	bf00      	nop
 8001306:	bd80      	pop	{r7, pc}
 8001308:	20000080 	.word	0x20000080

0800130c <man_yel_red>:
void man_yel_red()
{
 800130c:	b580      	push	{r7, lr}
 800130e:	af00      	add	r7, sp, #0
	if (1)
	{
		unable_4digit();
 8001310:	f7fe ff30 	bl	8000174 <unable_4digit>
		turn_on_yel_red();
 8001314:	f7ff fde8 	bl	8000ee8 <turn_on_yel_red>
	}
}
 8001318:	bf00      	nop
 800131a:	bd80      	pop	{r7, pc}

0800131c <init_red_time_config>:

void init_red_time_config()
{
 800131c:	b580      	push	{r7, lr}
 800131e:	af00      	add	r7, sp, #0
	// BTN_0, red_temp_time
	resetButton(&button0);
 8001320:	480e      	ldr	r0, [pc, #56]	@ (800135c <init_red_time_config+0x40>)
 8001322:	f7ff facd 	bl	80008c0 <resetButton>
	red_temp_time = red_time;
 8001326:	4b0e      	ldr	r3, [pc, #56]	@ (8001360 <init_red_time_config+0x44>)
 8001328:	681b      	ldr	r3, [r3, #0]
 800132a:	4a0e      	ldr	r2, [pc, #56]	@ (8001364 <init_red_time_config+0x48>)
 800132c:	6013      	str	r3, [r2, #0]

	// OTHER PRECONDITIONS
	turn_red_on();
 800132e:	f7ff fcf7 	bl	8000d20 <turn_red_on>
	setTimer(TIMER_250MS, TIME_250MS);
 8001332:	21fa      	movs	r1, #250	@ 0xfa
 8001334:	2006      	movs	r0, #6
 8001336:	f000 fc9b 	bl	8001c70 <setTimer>

	set_on_4digits();
 800133a:	f7fe ff07 	bl	800014c <set_on_4digits>
	counter_way0 = red_temp_time;
 800133e:	4b09      	ldr	r3, [pc, #36]	@ (8001364 <init_red_time_config+0x48>)
 8001340:	681b      	ldr	r3, [r3, #0]
 8001342:	4a09      	ldr	r2, [pc, #36]	@ (8001368 <init_red_time_config+0x4c>)
 8001344:	6013      	str	r3, [r2, #0]
	counter_way1 = 9;
 8001346:	4b09      	ldr	r3, [pc, #36]	@ (800136c <init_red_time_config+0x50>)
 8001348:	2209      	movs	r2, #9
 800134a:	601a      	str	r2, [r3, #0]
	update_led_7seg_buffer();
 800134c:	f7fe ff70 	bl	8000230 <update_led_7seg_buffer>
	setTimer(TIMER_7SEG, TIME_7SEG);
 8001350:	2105      	movs	r1, #5
 8001352:	2002      	movs	r0, #2
 8001354:	f000 fc8c 	bl	8001c70 <setTimer>
}
 8001358:	bf00      	nop
 800135a:	bd80      	pop	{r7, pc}
 800135c:	20000000 	.word	0x20000000
 8001360:	2000007c 	.word	0x2000007c
 8001364:	20000088 	.word	0x20000088
 8001368:	200000d4 	.word	0x200000d4
 800136c:	200000d8 	.word	0x200000d8

08001370 <red_time_config>:
void red_time_config()
{
 8001370:	b580      	push	{r7, lr}
 8001372:	af00      	add	r7, sp, #0
	if (1)
	{
		if (isButtonPressed(&button1))
 8001374:	4821      	ldr	r0, [pc, #132]	@ (80013fc <red_time_config+0x8c>)
 8001376:	f7ff fa7d 	bl	8000874 <isButtonPressed>
 800137a:	4603      	mov	r3, r0
 800137c:	2b00      	cmp	r3, #0
 800137e:	d004      	beq.n	800138a <red_time_config+0x1a>
		{
			++red_temp_time;
 8001380:	4b1f      	ldr	r3, [pc, #124]	@ (8001400 <red_time_config+0x90>)
 8001382:	681b      	ldr	r3, [r3, #0]
 8001384:	3301      	adds	r3, #1
 8001386:	4a1e      	ldr	r2, [pc, #120]	@ (8001400 <red_time_config+0x90>)
 8001388:	6013      	str	r3, [r2, #0]
		}
		if (isButtonLongPressed(&button1))
 800138a:	481c      	ldr	r0, [pc, #112]	@ (80013fc <red_time_config+0x8c>)
 800138c:	f7ff fa85 	bl	800089a <isButtonLongPressed>
 8001390:	4603      	mov	r3, r0
 8001392:	2b00      	cmp	r3, #0
 8001394:	d004      	beq.n	80013a0 <red_time_config+0x30>
		{
			red_temp_time += 5;
 8001396:	4b1a      	ldr	r3, [pc, #104]	@ (8001400 <red_time_config+0x90>)
 8001398:	681b      	ldr	r3, [r3, #0]
 800139a:	3305      	adds	r3, #5
 800139c:	4a18      	ldr	r2, [pc, #96]	@ (8001400 <red_time_config+0x90>)
 800139e:	6013      	str	r3, [r2, #0]
		}
		if (red_temp_time > MAX_COUNTER)
 80013a0:	4b17      	ldr	r3, [pc, #92]	@ (8001400 <red_time_config+0x90>)
 80013a2:	681b      	ldr	r3, [r3, #0]
 80013a4:	2b63      	cmp	r3, #99	@ 0x63
 80013a6:	dd02      	ble.n	80013ae <red_time_config+0x3e>
		{
			red_temp_time = MIN_COUNTER;
 80013a8:	4b15      	ldr	r3, [pc, #84]	@ (8001400 <red_time_config+0x90>)
 80013aa:	2201      	movs	r2, #1
 80013ac:	601a      	str	r2, [r3, #0]
		}

		counter_way0 = red_temp_time;
 80013ae:	4b14      	ldr	r3, [pc, #80]	@ (8001400 <red_time_config+0x90>)
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	4a14      	ldr	r2, [pc, #80]	@ (8001404 <red_time_config+0x94>)
 80013b4:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 80013b6:	f7fe ff3b 	bl	8000230 <update_led_7seg_buffer>
	}

	if (isFlag(TIMER_250MS))
 80013ba:	2006      	movs	r0, #6
 80013bc:	f000 fca0 	bl	8001d00 <isFlag>
 80013c0:	4603      	mov	r3, r0
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d00b      	beq.n	80013de <red_time_config+0x6e>
	{
		HAL_GPIO_TogglePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin);
 80013c6:	2110      	movs	r1, #16
 80013c8:	480f      	ldr	r0, [pc, #60]	@ (8001408 <red_time_config+0x98>)
 80013ca:	f001 f8ce 	bl	800256a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin);
 80013ce:	2180      	movs	r1, #128	@ 0x80
 80013d0:	480d      	ldr	r0, [pc, #52]	@ (8001408 <red_time_config+0x98>)
 80013d2:	f001 f8ca 	bl	800256a <HAL_GPIO_TogglePin>

		setTimer(TIMER_250MS, TIME_250MS);
 80013d6:	21fa      	movs	r1, #250	@ 0xfa
 80013d8:	2006      	movs	r0, #6
 80013da:	f000 fc49 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG))
 80013de:	2002      	movs	r0, #2
 80013e0:	f000 fc8e 	bl	8001d00 <isFlag>
 80013e4:	4603      	mov	r3, r0
 80013e6:	2b00      	cmp	r3, #0
 80013e8:	d005      	beq.n	80013f6 <red_time_config+0x86>
	{
		display_4digits();
 80013ea:	f7fe fee1 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 80013ee:	2105      	movs	r1, #5
 80013f0:	2002      	movs	r0, #2
 80013f2:	f000 fc3d 	bl	8001c70 <setTimer>
	}
}
 80013f6:	bf00      	nop
 80013f8:	bd80      	pop	{r7, pc}
 80013fa:	bf00      	nop
 80013fc:	20000024 	.word	0x20000024
 8001400:	20000088 	.word	0x20000088
 8001404:	200000d4 	.word	0x200000d4
 8001408:	40010c00 	.word	0x40010c00

0800140c <init_red_time_config_change>:

void init_red_time_config_change()
{
 800140c:	b580      	push	{r7, lr}
 800140e:	af00      	add	r7, sp, #0
	// BTN_0, BTN_2, red_temp_time
	resetButton(&button0);
 8001410:	4810      	ldr	r0, [pc, #64]	@ (8001454 <init_red_time_config_change+0x48>)
 8001412:	f7ff fa55 	bl	80008c0 <resetButton>
	resetButton(&button2);
 8001416:	4810      	ldr	r0, [pc, #64]	@ (8001458 <init_red_time_config_change+0x4c>)
 8001418:	f7ff fa52 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	turn_red_on();
 800141c:	f7ff fc80 	bl	8000d20 <turn_red_on>
	setTimer(TIMER_250MS, TIME_250MS);
 8001420:	21fa      	movs	r1, #250	@ 0xfa
 8001422:	2006      	movs	r0, #6
 8001424:	f000 fc24 	bl	8001c70 <setTimer>

	set_on_4digits();
 8001428:	f7fe fe90 	bl	800014c <set_on_4digits>
	counter_way0 = red_temp_time;
 800142c:	4b0b      	ldr	r3, [pc, #44]	@ (800145c <init_red_time_config_change+0x50>)
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	4a0b      	ldr	r2, [pc, #44]	@ (8001460 <init_red_time_config_change+0x54>)
 8001432:	6013      	str	r3, [r2, #0]
	counter_way1 = 10;
 8001434:	4b0b      	ldr	r3, [pc, #44]	@ (8001464 <init_red_time_config_change+0x58>)
 8001436:	220a      	movs	r2, #10
 8001438:	601a      	str	r2, [r3, #0]
	update_led_7seg_buffer();
 800143a:	f7fe fef9 	bl	8000230 <update_led_7seg_buffer>
	setTimer(TIMER_7SEG, TIME_7SEG);
 800143e:	2105      	movs	r1, #5
 8001440:	2002      	movs	r0, #2
 8001442:	f000 fc15 	bl	8001c70 <setTimer>

	setTimer(TIMER_7SEG_STATUS, TIME_7SEG_STATUS);
 8001446:	21fa      	movs	r1, #250	@ 0xfa
 8001448:	2003      	movs	r0, #3
 800144a:	f000 fc11 	bl	8001c70 <setTimer>
}
 800144e:	bf00      	nop
 8001450:	bd80      	pop	{r7, pc}
 8001452:	bf00      	nop
 8001454:	20000000 	.word	0x20000000
 8001458:	20000048 	.word	0x20000048
 800145c:	20000088 	.word	0x20000088
 8001460:	200000d4 	.word	0x200000d4
 8001464:	200000d8 	.word	0x200000d8

08001468 <red_time_config_change>:
void red_time_config_change()
{
 8001468:	b580      	push	{r7, lr}
 800146a:	af00      	add	r7, sp, #0
	if (1)
	{
		if (isButtonPressed(&button1))
 800146c:	483a      	ldr	r0, [pc, #232]	@ (8001558 <red_time_config_change+0xf0>)
 800146e:	f7ff fa01 	bl	8000874 <isButtonPressed>
 8001472:	4603      	mov	r3, r0
 8001474:	2b00      	cmp	r3, #0
 8001476:	d004      	beq.n	8001482 <red_time_config_change+0x1a>
		{
			++red_temp_time;
 8001478:	4b38      	ldr	r3, [pc, #224]	@ (800155c <red_time_config_change+0xf4>)
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	3301      	adds	r3, #1
 800147e:	4a37      	ldr	r2, [pc, #220]	@ (800155c <red_time_config_change+0xf4>)
 8001480:	6013      	str	r3, [r2, #0]
		}
		if (isButtonLongPressed(&button1))
 8001482:	4835      	ldr	r0, [pc, #212]	@ (8001558 <red_time_config_change+0xf0>)
 8001484:	f7ff fa09 	bl	800089a <isButtonLongPressed>
 8001488:	4603      	mov	r3, r0
 800148a:	2b00      	cmp	r3, #0
 800148c:	d004      	beq.n	8001498 <red_time_config_change+0x30>
		{
			red_temp_time += 5;
 800148e:	4b33      	ldr	r3, [pc, #204]	@ (800155c <red_time_config_change+0xf4>)
 8001490:	681b      	ldr	r3, [r3, #0]
 8001492:	3305      	adds	r3, #5
 8001494:	4a31      	ldr	r2, [pc, #196]	@ (800155c <red_time_config_change+0xf4>)
 8001496:	6013      	str	r3, [r2, #0]
		}
		if (red_temp_time > MAX_COUNTER)
 8001498:	4b30      	ldr	r3, [pc, #192]	@ (800155c <red_time_config_change+0xf4>)
 800149a:	681b      	ldr	r3, [r3, #0]
 800149c:	2b63      	cmp	r3, #99	@ 0x63
 800149e:	dd02      	ble.n	80014a6 <red_time_config_change+0x3e>
		{
			red_temp_time = MIN_COUNTER;
 80014a0:	4b2e      	ldr	r3, [pc, #184]	@ (800155c <red_time_config_change+0xf4>)
 80014a2:	2201      	movs	r2, #1
 80014a4:	601a      	str	r2, [r3, #0]
		}

		if (isButtonPressed(&button2))
 80014a6:	482e      	ldr	r0, [pc, #184]	@ (8001560 <red_time_config_change+0xf8>)
 80014a8:	f7ff f9e4 	bl	8000874 <isButtonPressed>
 80014ac:	4603      	mov	r3, r0
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d010      	beq.n	80014d4 <red_time_config_change+0x6c>
		{
			if (red_temp_time > yel_time)
 80014b2:	4b2a      	ldr	r3, [pc, #168]	@ (800155c <red_time_config_change+0xf4>)
 80014b4:	681a      	ldr	r2, [r3, #0]
 80014b6:	4b2b      	ldr	r3, [pc, #172]	@ (8001564 <red_time_config_change+0xfc>)
 80014b8:	681b      	ldr	r3, [r3, #0]
 80014ba:	429a      	cmp	r2, r3
 80014bc:	dd0a      	ble.n	80014d4 <red_time_config_change+0x6c>
			{
				red_time = red_temp_time;
 80014be:	4b27      	ldr	r3, [pc, #156]	@ (800155c <red_time_config_change+0xf4>)
 80014c0:	681b      	ldr	r3, [r3, #0]
 80014c2:	4a29      	ldr	r2, [pc, #164]	@ (8001568 <red_time_config_change+0x100>)
 80014c4:	6013      	str	r3, [r2, #0]
				grn_time = red_time - yel_time;
 80014c6:	4b28      	ldr	r3, [pc, #160]	@ (8001568 <red_time_config_change+0x100>)
 80014c8:	681a      	ldr	r2, [r3, #0]
 80014ca:	4b26      	ldr	r3, [pc, #152]	@ (8001564 <red_time_config_change+0xfc>)
 80014cc:	681b      	ldr	r3, [r3, #0]
 80014ce:	1ad3      	subs	r3, r2, r3
 80014d0:	4a26      	ldr	r2, [pc, #152]	@ (800156c <red_time_config_change+0x104>)
 80014d2:	6013      	str	r3, [r2, #0]
			}
		}

		counter_way0 = red_temp_time;
 80014d4:	4b21      	ldr	r3, [pc, #132]	@ (800155c <red_time_config_change+0xf4>)
 80014d6:	681b      	ldr	r3, [r3, #0]
 80014d8:	4a25      	ldr	r2, [pc, #148]	@ (8001570 <red_time_config_change+0x108>)
 80014da:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 80014dc:	f7fe fea8 	bl	8000230 <update_led_7seg_buffer>
	}

	if (isFlag(TIMER_250MS))
 80014e0:	2006      	movs	r0, #6
 80014e2:	f000 fc0d 	bl	8001d00 <isFlag>
 80014e6:	4603      	mov	r3, r0
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d00b      	beq.n	8001504 <red_time_config_change+0x9c>
	{
		HAL_GPIO_TogglePin(LED_RED_0_GPIO_Port, LED_RED_0_Pin);
 80014ec:	2110      	movs	r1, #16
 80014ee:	4821      	ldr	r0, [pc, #132]	@ (8001574 <red_time_config_change+0x10c>)
 80014f0:	f001 f83b 	bl	800256a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin);
 80014f4:	2180      	movs	r1, #128	@ 0x80
 80014f6:	481f      	ldr	r0, [pc, #124]	@ (8001574 <red_time_config_change+0x10c>)
 80014f8:	f001 f837 	bl	800256a <HAL_GPIO_TogglePin>
		setTimer(TIMER_250MS, TIME_250MS);
 80014fc:	21fa      	movs	r1, #250	@ 0xfa
 80014fe:	2006      	movs	r0, #6
 8001500:	f000 fbb6 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG))
 8001504:	2002      	movs	r0, #2
 8001506:	f000 fbfb 	bl	8001d00 <isFlag>
 800150a:	4603      	mov	r3, r0
 800150c:	2b00      	cmp	r3, #0
 800150e:	d005      	beq.n	800151c <red_time_config_change+0xb4>
	{
		display_4digits();
 8001510:	f7fe fe4e 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 8001514:	2105      	movs	r1, #5
 8001516:	2002      	movs	r0, #2
 8001518:	f000 fbaa 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG_STATUS))
 800151c:	2003      	movs	r0, #3
 800151e:	f000 fbef 	bl	8001d00 <isFlag>
 8001522:	4603      	mov	r3, r0
 8001524:	2b00      	cmp	r3, #0
 8001526:	d014      	beq.n	8001552 <red_time_config_change+0xea>
	{
		if (status_4digits[0] == LED_ON)
 8001528:	4b13      	ldr	r3, [pc, #76]	@ (8001578 <red_time_config_change+0x110>)
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	2b00      	cmp	r3, #0
 800152e:	d106      	bne.n	800153e <red_time_config_change+0xd6>
		{
			status_4digits[0] = LED_OFF;
 8001530:	4b11      	ldr	r3, [pc, #68]	@ (8001578 <red_time_config_change+0x110>)
 8001532:	2201      	movs	r2, #1
 8001534:	601a      	str	r2, [r3, #0]
			status_4digits[1] = LED_OFF;
 8001536:	4b10      	ldr	r3, [pc, #64]	@ (8001578 <red_time_config_change+0x110>)
 8001538:	2201      	movs	r2, #1
 800153a:	605a      	str	r2, [r3, #4]
 800153c:	e005      	b.n	800154a <red_time_config_change+0xe2>
		}
		else
		{
			status_4digits[0] = LED_ON;
 800153e:	4b0e      	ldr	r3, [pc, #56]	@ (8001578 <red_time_config_change+0x110>)
 8001540:	2200      	movs	r2, #0
 8001542:	601a      	str	r2, [r3, #0]
			status_4digits[1] = LED_ON;
 8001544:	4b0c      	ldr	r3, [pc, #48]	@ (8001578 <red_time_config_change+0x110>)
 8001546:	2200      	movs	r2, #0
 8001548:	605a      	str	r2, [r3, #4]
		}
		setTimer(TIMER_7SEG_STATUS, TIME_7SEG_STATUS);
 800154a:	21fa      	movs	r1, #250	@ 0xfa
 800154c:	2003      	movs	r0, #3
 800154e:	f000 fb8f 	bl	8001c70 <setTimer>
	}
}
 8001552:	bf00      	nop
 8001554:	bd80      	pop	{r7, pc}
 8001556:	bf00      	nop
 8001558:	20000024 	.word	0x20000024
 800155c:	20000088 	.word	0x20000088
 8001560:	20000048 	.word	0x20000048
 8001564:	20000080 	.word	0x20000080
 8001568:	2000007c 	.word	0x2000007c
 800156c:	20000084 	.word	0x20000084
 8001570:	200000d4 	.word	0x200000d4
 8001574:	40010c00 	.word	0x40010c00
 8001578:	200000c4 	.word	0x200000c4

0800157c <init_yel_time_config>:

void init_yel_time_config()
{
 800157c:	b580      	push	{r7, lr}
 800157e:	af00      	add	r7, sp, #0
	// BTN_0, yel_temp_time
	resetButton(&button0);
 8001580:	480e      	ldr	r0, [pc, #56]	@ (80015bc <init_yel_time_config+0x40>)
 8001582:	f7ff f99d 	bl	80008c0 <resetButton>
	yel_temp_time = yel_time;
 8001586:	4b0e      	ldr	r3, [pc, #56]	@ (80015c0 <init_yel_time_config+0x44>)
 8001588:	681b      	ldr	r3, [r3, #0]
 800158a:	4a0e      	ldr	r2, [pc, #56]	@ (80015c4 <init_yel_time_config+0x48>)
 800158c:	6013      	str	r3, [r2, #0]

	// OTHER PRECONDITIONS
	turn_yel_on();
 800158e:	f7ff fbed 	bl	8000d6c <turn_yel_on>
	setTimer(TIMER_250MS, TIME_250MS);
 8001592:	21fa      	movs	r1, #250	@ 0xfa
 8001594:	2006      	movs	r0, #6
 8001596:	f000 fb6b 	bl	8001c70 <setTimer>

	set_on_4digits();
 800159a:	f7fe fdd7 	bl	800014c <set_on_4digits>
	counter_way0 = yel_temp_time;
 800159e:	4b09      	ldr	r3, [pc, #36]	@ (80015c4 <init_yel_time_config+0x48>)
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	4a09      	ldr	r2, [pc, #36]	@ (80015c8 <init_yel_time_config+0x4c>)
 80015a4:	6013      	str	r3, [r2, #0]
	counter_way1 = 11;
 80015a6:	4b09      	ldr	r3, [pc, #36]	@ (80015cc <init_yel_time_config+0x50>)
 80015a8:	220b      	movs	r2, #11
 80015aa:	601a      	str	r2, [r3, #0]
	update_led_7seg_buffer();
 80015ac:	f7fe fe40 	bl	8000230 <update_led_7seg_buffer>
	setTimer(TIMER_7SEG, TIME_7SEG);
 80015b0:	2105      	movs	r1, #5
 80015b2:	2002      	movs	r0, #2
 80015b4:	f000 fb5c 	bl	8001c70 <setTimer>
}
 80015b8:	bf00      	nop
 80015ba:	bd80      	pop	{r7, pc}
 80015bc:	20000000 	.word	0x20000000
 80015c0:	20000080 	.word	0x20000080
 80015c4:	2000008c 	.word	0x2000008c
 80015c8:	200000d4 	.word	0x200000d4
 80015cc:	200000d8 	.word	0x200000d8

080015d0 <yel_time_config>:
void yel_time_config()
{
 80015d0:	b580      	push	{r7, lr}
 80015d2:	af00      	add	r7, sp, #0
	if (1)
	{
		if (isButtonPressed(&button1))
 80015d4:	4821      	ldr	r0, [pc, #132]	@ (800165c <yel_time_config+0x8c>)
 80015d6:	f7ff f94d 	bl	8000874 <isButtonPressed>
 80015da:	4603      	mov	r3, r0
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d004      	beq.n	80015ea <yel_time_config+0x1a>
		{
			++yel_temp_time;
 80015e0:	4b1f      	ldr	r3, [pc, #124]	@ (8001660 <yel_time_config+0x90>)
 80015e2:	681b      	ldr	r3, [r3, #0]
 80015e4:	3301      	adds	r3, #1
 80015e6:	4a1e      	ldr	r2, [pc, #120]	@ (8001660 <yel_time_config+0x90>)
 80015e8:	6013      	str	r3, [r2, #0]
		}
		if (isButtonLongPressed(&button1))
 80015ea:	481c      	ldr	r0, [pc, #112]	@ (800165c <yel_time_config+0x8c>)
 80015ec:	f7ff f955 	bl	800089a <isButtonLongPressed>
 80015f0:	4603      	mov	r3, r0
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d004      	beq.n	8001600 <yel_time_config+0x30>
		{
			yel_temp_time += 5;
 80015f6:	4b1a      	ldr	r3, [pc, #104]	@ (8001660 <yel_time_config+0x90>)
 80015f8:	681b      	ldr	r3, [r3, #0]
 80015fa:	3305      	adds	r3, #5
 80015fc:	4a18      	ldr	r2, [pc, #96]	@ (8001660 <yel_time_config+0x90>)
 80015fe:	6013      	str	r3, [r2, #0]
		}
		if (yel_temp_time > MAX_COUNTER)
 8001600:	4b17      	ldr	r3, [pc, #92]	@ (8001660 <yel_time_config+0x90>)
 8001602:	681b      	ldr	r3, [r3, #0]
 8001604:	2b63      	cmp	r3, #99	@ 0x63
 8001606:	dd02      	ble.n	800160e <yel_time_config+0x3e>
		{
			yel_temp_time = MIN_COUNTER;
 8001608:	4b15      	ldr	r3, [pc, #84]	@ (8001660 <yel_time_config+0x90>)
 800160a:	2201      	movs	r2, #1
 800160c:	601a      	str	r2, [r3, #0]
		}

		counter_way0 = yel_temp_time;
 800160e:	4b14      	ldr	r3, [pc, #80]	@ (8001660 <yel_time_config+0x90>)
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	4a14      	ldr	r2, [pc, #80]	@ (8001664 <yel_time_config+0x94>)
 8001614:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 8001616:	f7fe fe0b 	bl	8000230 <update_led_7seg_buffer>
	}

	if (isFlag(TIMER_250MS))
 800161a:	2006      	movs	r0, #6
 800161c:	f000 fb70 	bl	8001d00 <isFlag>
 8001620:	4603      	mov	r3, r0
 8001622:	2b00      	cmp	r3, #0
 8001624:	d00c      	beq.n	8001640 <yel_time_config+0x70>
	{
		HAL_GPIO_TogglePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin);
 8001626:	2120      	movs	r1, #32
 8001628:	480f      	ldr	r0, [pc, #60]	@ (8001668 <yel_time_config+0x98>)
 800162a:	f000 ff9e 	bl	800256a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin);
 800162e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001632:	480d      	ldr	r0, [pc, #52]	@ (8001668 <yel_time_config+0x98>)
 8001634:	f000 ff99 	bl	800256a <HAL_GPIO_TogglePin>

		setTimer(TIMER_250MS, TIME_250MS);
 8001638:	21fa      	movs	r1, #250	@ 0xfa
 800163a:	2006      	movs	r0, #6
 800163c:	f000 fb18 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG))
 8001640:	2002      	movs	r0, #2
 8001642:	f000 fb5d 	bl	8001d00 <isFlag>
 8001646:	4603      	mov	r3, r0
 8001648:	2b00      	cmp	r3, #0
 800164a:	d005      	beq.n	8001658 <yel_time_config+0x88>
	{
		display_4digits();
 800164c:	f7fe fdb0 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 8001650:	2105      	movs	r1, #5
 8001652:	2002      	movs	r0, #2
 8001654:	f000 fb0c 	bl	8001c70 <setTimer>
	}
}
 8001658:	bf00      	nop
 800165a:	bd80      	pop	{r7, pc}
 800165c:	20000024 	.word	0x20000024
 8001660:	2000008c 	.word	0x2000008c
 8001664:	200000d4 	.word	0x200000d4
 8001668:	40010c00 	.word	0x40010c00

0800166c <init_yel_time_config_change>:

void init_yel_time_config_change()
{
 800166c:	b580      	push	{r7, lr}
 800166e:	af00      	add	r7, sp, #0
	// BTN_0, BTN_2, yel_temp_time
	resetButton(&button0);
 8001670:	4810      	ldr	r0, [pc, #64]	@ (80016b4 <init_yel_time_config_change+0x48>)
 8001672:	f7ff f925 	bl	80008c0 <resetButton>
	resetButton(&button2);
 8001676:	4810      	ldr	r0, [pc, #64]	@ (80016b8 <init_yel_time_config_change+0x4c>)
 8001678:	f7ff f922 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	turn_yel_on();
 800167c:	f7ff fb76 	bl	8000d6c <turn_yel_on>
	setTimer(TIMER_250MS, TIME_250MS);
 8001680:	21fa      	movs	r1, #250	@ 0xfa
 8001682:	2006      	movs	r0, #6
 8001684:	f000 faf4 	bl	8001c70 <setTimer>

	set_on_4digits();
 8001688:	f7fe fd60 	bl	800014c <set_on_4digits>
	counter_way0 = yel_temp_time;
 800168c:	4b0b      	ldr	r3, [pc, #44]	@ (80016bc <init_yel_time_config_change+0x50>)
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	4a0b      	ldr	r2, [pc, #44]	@ (80016c0 <init_yel_time_config_change+0x54>)
 8001692:	6013      	str	r3, [r2, #0]
	counter_way1 = 12;
 8001694:	4b0b      	ldr	r3, [pc, #44]	@ (80016c4 <init_yel_time_config_change+0x58>)
 8001696:	220c      	movs	r2, #12
 8001698:	601a      	str	r2, [r3, #0]
	update_led_7seg_buffer();
 800169a:	f7fe fdc9 	bl	8000230 <update_led_7seg_buffer>
	setTimer(TIMER_7SEG, TIME_7SEG);
 800169e:	2105      	movs	r1, #5
 80016a0:	2002      	movs	r0, #2
 80016a2:	f000 fae5 	bl	8001c70 <setTimer>

	setTimer(TIMER_7SEG_STATUS, TIME_7SEG_STATUS);
 80016a6:	21fa      	movs	r1, #250	@ 0xfa
 80016a8:	2003      	movs	r0, #3
 80016aa:	f000 fae1 	bl	8001c70 <setTimer>
}
 80016ae:	bf00      	nop
 80016b0:	bd80      	pop	{r7, pc}
 80016b2:	bf00      	nop
 80016b4:	20000000 	.word	0x20000000
 80016b8:	20000048 	.word	0x20000048
 80016bc:	2000008c 	.word	0x2000008c
 80016c0:	200000d4 	.word	0x200000d4
 80016c4:	200000d8 	.word	0x200000d8

080016c8 <yel_time_config_change>:
void yel_time_config_change()
{
 80016c8:	b580      	push	{r7, lr}
 80016ca:	af00      	add	r7, sp, #0
	if (1)
	{
		if (isButtonPressed(&button1))
 80016cc:	483a      	ldr	r0, [pc, #232]	@ (80017b8 <yel_time_config_change+0xf0>)
 80016ce:	f7ff f8d1 	bl	8000874 <isButtonPressed>
 80016d2:	4603      	mov	r3, r0
 80016d4:	2b00      	cmp	r3, #0
 80016d6:	d004      	beq.n	80016e2 <yel_time_config_change+0x1a>
		{
			++yel_temp_time;
 80016d8:	4b38      	ldr	r3, [pc, #224]	@ (80017bc <yel_time_config_change+0xf4>)
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	3301      	adds	r3, #1
 80016de:	4a37      	ldr	r2, [pc, #220]	@ (80017bc <yel_time_config_change+0xf4>)
 80016e0:	6013      	str	r3, [r2, #0]
		}
		if (isButtonLongPressed(&button1))
 80016e2:	4835      	ldr	r0, [pc, #212]	@ (80017b8 <yel_time_config_change+0xf0>)
 80016e4:	f7ff f8d9 	bl	800089a <isButtonLongPressed>
 80016e8:	4603      	mov	r3, r0
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d004      	beq.n	80016f8 <yel_time_config_change+0x30>
		{
			yel_temp_time += 5;
 80016ee:	4b33      	ldr	r3, [pc, #204]	@ (80017bc <yel_time_config_change+0xf4>)
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	3305      	adds	r3, #5
 80016f4:	4a31      	ldr	r2, [pc, #196]	@ (80017bc <yel_time_config_change+0xf4>)
 80016f6:	6013      	str	r3, [r2, #0]
		}
		if (yel_temp_time > MAX_COUNTER)
 80016f8:	4b30      	ldr	r3, [pc, #192]	@ (80017bc <yel_time_config_change+0xf4>)
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	2b63      	cmp	r3, #99	@ 0x63
 80016fe:	dd02      	ble.n	8001706 <yel_time_config_change+0x3e>
		{
			yel_temp_time = MIN_COUNTER;
 8001700:	4b2e      	ldr	r3, [pc, #184]	@ (80017bc <yel_time_config_change+0xf4>)
 8001702:	2201      	movs	r2, #1
 8001704:	601a      	str	r2, [r3, #0]
		}

		if (isButtonPressed(&button2))
 8001706:	482e      	ldr	r0, [pc, #184]	@ (80017c0 <yel_time_config_change+0xf8>)
 8001708:	f7ff f8b4 	bl	8000874 <isButtonPressed>
 800170c:	4603      	mov	r3, r0
 800170e:	2b00      	cmp	r3, #0
 8001710:	d010      	beq.n	8001734 <yel_time_config_change+0x6c>
		{
			if (red_time > yel_temp_time)
 8001712:	4b2c      	ldr	r3, [pc, #176]	@ (80017c4 <yel_time_config_change+0xfc>)
 8001714:	681a      	ldr	r2, [r3, #0]
 8001716:	4b29      	ldr	r3, [pc, #164]	@ (80017bc <yel_time_config_change+0xf4>)
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	429a      	cmp	r2, r3
 800171c:	dd0a      	ble.n	8001734 <yel_time_config_change+0x6c>
			{
				yel_time = yel_temp_time;
 800171e:	4b27      	ldr	r3, [pc, #156]	@ (80017bc <yel_time_config_change+0xf4>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	4a29      	ldr	r2, [pc, #164]	@ (80017c8 <yel_time_config_change+0x100>)
 8001724:	6013      	str	r3, [r2, #0]
				grn_time = red_time - yel_time;
 8001726:	4b27      	ldr	r3, [pc, #156]	@ (80017c4 <yel_time_config_change+0xfc>)
 8001728:	681a      	ldr	r2, [r3, #0]
 800172a:	4b27      	ldr	r3, [pc, #156]	@ (80017c8 <yel_time_config_change+0x100>)
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	1ad3      	subs	r3, r2, r3
 8001730:	4a26      	ldr	r2, [pc, #152]	@ (80017cc <yel_time_config_change+0x104>)
 8001732:	6013      	str	r3, [r2, #0]
			}
		}

		counter_way0 = yel_temp_time;
 8001734:	4b21      	ldr	r3, [pc, #132]	@ (80017bc <yel_time_config_change+0xf4>)
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	4a25      	ldr	r2, [pc, #148]	@ (80017d0 <yel_time_config_change+0x108>)
 800173a:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 800173c:	f7fe fd78 	bl	8000230 <update_led_7seg_buffer>
	}

	if (isFlag(TIMER_250MS))
 8001740:	2006      	movs	r0, #6
 8001742:	f000 fadd 	bl	8001d00 <isFlag>
 8001746:	4603      	mov	r3, r0
 8001748:	2b00      	cmp	r3, #0
 800174a:	d00c      	beq.n	8001766 <yel_time_config_change+0x9e>
	{
		HAL_GPIO_TogglePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin);
 800174c:	2120      	movs	r1, #32
 800174e:	4821      	ldr	r0, [pc, #132]	@ (80017d4 <yel_time_config_change+0x10c>)
 8001750:	f000 ff0b 	bl	800256a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin);
 8001754:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001758:	481e      	ldr	r0, [pc, #120]	@ (80017d4 <yel_time_config_change+0x10c>)
 800175a:	f000 ff06 	bl	800256a <HAL_GPIO_TogglePin>
		setTimer(TIMER_250MS, TIME_250MS);
 800175e:	21fa      	movs	r1, #250	@ 0xfa
 8001760:	2006      	movs	r0, #6
 8001762:	f000 fa85 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG))
 8001766:	2002      	movs	r0, #2
 8001768:	f000 faca 	bl	8001d00 <isFlag>
 800176c:	4603      	mov	r3, r0
 800176e:	2b00      	cmp	r3, #0
 8001770:	d005      	beq.n	800177e <yel_time_config_change+0xb6>
	{
		display_4digits();
 8001772:	f7fe fd1d 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 8001776:	2105      	movs	r1, #5
 8001778:	2002      	movs	r0, #2
 800177a:	f000 fa79 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG_STATUS))
 800177e:	2003      	movs	r0, #3
 8001780:	f000 fabe 	bl	8001d00 <isFlag>
 8001784:	4603      	mov	r3, r0
 8001786:	2b00      	cmp	r3, #0
 8001788:	d014      	beq.n	80017b4 <yel_time_config_change+0xec>
	{
		if (status_4digits[0] == LED_ON)
 800178a:	4b13      	ldr	r3, [pc, #76]	@ (80017d8 <yel_time_config_change+0x110>)
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	2b00      	cmp	r3, #0
 8001790:	d106      	bne.n	80017a0 <yel_time_config_change+0xd8>
		{
			status_4digits[0] = LED_OFF;
 8001792:	4b11      	ldr	r3, [pc, #68]	@ (80017d8 <yel_time_config_change+0x110>)
 8001794:	2201      	movs	r2, #1
 8001796:	601a      	str	r2, [r3, #0]
			status_4digits[1] = LED_OFF;
 8001798:	4b0f      	ldr	r3, [pc, #60]	@ (80017d8 <yel_time_config_change+0x110>)
 800179a:	2201      	movs	r2, #1
 800179c:	605a      	str	r2, [r3, #4]
 800179e:	e005      	b.n	80017ac <yel_time_config_change+0xe4>
		}
		else
		{
			status_4digits[0] = LED_ON;
 80017a0:	4b0d      	ldr	r3, [pc, #52]	@ (80017d8 <yel_time_config_change+0x110>)
 80017a2:	2200      	movs	r2, #0
 80017a4:	601a      	str	r2, [r3, #0]
			status_4digits[1] = LED_ON;
 80017a6:	4b0c      	ldr	r3, [pc, #48]	@ (80017d8 <yel_time_config_change+0x110>)
 80017a8:	2200      	movs	r2, #0
 80017aa:	605a      	str	r2, [r3, #4]
		}
		setTimer(TIMER_7SEG_STATUS, TIME_7SEG_STATUS);
 80017ac:	21fa      	movs	r1, #250	@ 0xfa
 80017ae:	2003      	movs	r0, #3
 80017b0:	f000 fa5e 	bl	8001c70 <setTimer>
	}
}
 80017b4:	bf00      	nop
 80017b6:	bd80      	pop	{r7, pc}
 80017b8:	20000024 	.word	0x20000024
 80017bc:	2000008c 	.word	0x2000008c
 80017c0:	20000048 	.word	0x20000048
 80017c4:	2000007c 	.word	0x2000007c
 80017c8:	20000080 	.word	0x20000080
 80017cc:	20000084 	.word	0x20000084
 80017d0:	200000d4 	.word	0x200000d4
 80017d4:	40010c00 	.word	0x40010c00
 80017d8:	200000c4 	.word	0x200000c4

080017dc <init_grn_time_config>:

void init_grn_time_config()
{
 80017dc:	b580      	push	{r7, lr}
 80017de:	af00      	add	r7, sp, #0
	// BTN_0, grn_temp_time
	resetButton(&button0);
 80017e0:	480e      	ldr	r0, [pc, #56]	@ (800181c <init_grn_time_config+0x40>)
 80017e2:	f7ff f86d 	bl	80008c0 <resetButton>
	grn_temp_time = grn_time;
 80017e6:	4b0e      	ldr	r3, [pc, #56]	@ (8001820 <init_grn_time_config+0x44>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	4a0e      	ldr	r2, [pc, #56]	@ (8001824 <init_grn_time_config+0x48>)
 80017ec:	6013      	str	r3, [r2, #0]

	// OTHER PRECONDITIONS
	turn_grn_on();
 80017ee:	f7ff fae3 	bl	8000db8 <turn_grn_on>
	setTimer(TIMER_250MS, TIME_250MS);
 80017f2:	21fa      	movs	r1, #250	@ 0xfa
 80017f4:	2006      	movs	r0, #6
 80017f6:	f000 fa3b 	bl	8001c70 <setTimer>

	set_on_4digits();
 80017fa:	f7fe fca7 	bl	800014c <set_on_4digits>
	counter_way0 =grn_temp_time;
 80017fe:	4b09      	ldr	r3, [pc, #36]	@ (8001824 <init_grn_time_config+0x48>)
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	4a09      	ldr	r2, [pc, #36]	@ (8001828 <init_grn_time_config+0x4c>)
 8001804:	6013      	str	r3, [r2, #0]
	counter_way1 = 13;
 8001806:	4b09      	ldr	r3, [pc, #36]	@ (800182c <init_grn_time_config+0x50>)
 8001808:	220d      	movs	r2, #13
 800180a:	601a      	str	r2, [r3, #0]
	update_led_7seg_buffer();
 800180c:	f7fe fd10 	bl	8000230 <update_led_7seg_buffer>
	setTimer(TIMER_7SEG, TIME_7SEG);
 8001810:	2105      	movs	r1, #5
 8001812:	2002      	movs	r0, #2
 8001814:	f000 fa2c 	bl	8001c70 <setTimer>
}
 8001818:	bf00      	nop
 800181a:	bd80      	pop	{r7, pc}
 800181c:	20000000 	.word	0x20000000
 8001820:	20000084 	.word	0x20000084
 8001824:	20000090 	.word	0x20000090
 8001828:	200000d4 	.word	0x200000d4
 800182c:	200000d8 	.word	0x200000d8

08001830 <grn_time_config>:
void grn_time_config()
{
 8001830:	b580      	push	{r7, lr}
 8001832:	af00      	add	r7, sp, #0
	if (1)
	{
		if (isButtonPressed(&button1))
 8001834:	4821      	ldr	r0, [pc, #132]	@ (80018bc <grn_time_config+0x8c>)
 8001836:	f7ff f81d 	bl	8000874 <isButtonPressed>
 800183a:	4603      	mov	r3, r0
 800183c:	2b00      	cmp	r3, #0
 800183e:	d004      	beq.n	800184a <grn_time_config+0x1a>
		{
			++grn_temp_time;
 8001840:	4b1f      	ldr	r3, [pc, #124]	@ (80018c0 <grn_time_config+0x90>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	3301      	adds	r3, #1
 8001846:	4a1e      	ldr	r2, [pc, #120]	@ (80018c0 <grn_time_config+0x90>)
 8001848:	6013      	str	r3, [r2, #0]
		}
		if (isButtonLongPressed(&button1))
 800184a:	481c      	ldr	r0, [pc, #112]	@ (80018bc <grn_time_config+0x8c>)
 800184c:	f7ff f825 	bl	800089a <isButtonLongPressed>
 8001850:	4603      	mov	r3, r0
 8001852:	2b00      	cmp	r3, #0
 8001854:	d004      	beq.n	8001860 <grn_time_config+0x30>
		{
			grn_temp_time += 5;
 8001856:	4b1a      	ldr	r3, [pc, #104]	@ (80018c0 <grn_time_config+0x90>)
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	3305      	adds	r3, #5
 800185c:	4a18      	ldr	r2, [pc, #96]	@ (80018c0 <grn_time_config+0x90>)
 800185e:	6013      	str	r3, [r2, #0]
		}
		if (grn_temp_time > MAX_COUNTER)
 8001860:	4b17      	ldr	r3, [pc, #92]	@ (80018c0 <grn_time_config+0x90>)
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	2b63      	cmp	r3, #99	@ 0x63
 8001866:	dd02      	ble.n	800186e <grn_time_config+0x3e>
		{
			grn_temp_time = MIN_COUNTER;
 8001868:	4b15      	ldr	r3, [pc, #84]	@ (80018c0 <grn_time_config+0x90>)
 800186a:	2201      	movs	r2, #1
 800186c:	601a      	str	r2, [r3, #0]
		}

		counter_way0 = grn_temp_time;
 800186e:	4b14      	ldr	r3, [pc, #80]	@ (80018c0 <grn_time_config+0x90>)
 8001870:	681b      	ldr	r3, [r3, #0]
 8001872:	4a14      	ldr	r2, [pc, #80]	@ (80018c4 <grn_time_config+0x94>)
 8001874:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 8001876:	f7fe fcdb 	bl	8000230 <update_led_7seg_buffer>
	}

	if (isFlag(TIMER_250MS))
 800187a:	2006      	movs	r0, #6
 800187c:	f000 fa40 	bl	8001d00 <isFlag>
 8001880:	4603      	mov	r3, r0
 8001882:	2b00      	cmp	r3, #0
 8001884:	d00c      	beq.n	80018a0 <grn_time_config+0x70>
	{
		HAL_GPIO_TogglePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin);
 8001886:	2140      	movs	r1, #64	@ 0x40
 8001888:	480f      	ldr	r0, [pc, #60]	@ (80018c8 <grn_time_config+0x98>)
 800188a:	f000 fe6e 	bl	800256a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin);
 800188e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001892:	480d      	ldr	r0, [pc, #52]	@ (80018c8 <grn_time_config+0x98>)
 8001894:	f000 fe69 	bl	800256a <HAL_GPIO_TogglePin>

		setTimer(TIMER_250MS, TIME_250MS);
 8001898:	21fa      	movs	r1, #250	@ 0xfa
 800189a:	2006      	movs	r0, #6
 800189c:	f000 f9e8 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG))
 80018a0:	2002      	movs	r0, #2
 80018a2:	f000 fa2d 	bl	8001d00 <isFlag>
 80018a6:	4603      	mov	r3, r0
 80018a8:	2b00      	cmp	r3, #0
 80018aa:	d005      	beq.n	80018b8 <grn_time_config+0x88>
	{
		display_4digits();
 80018ac:	f7fe fc80 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 80018b0:	2105      	movs	r1, #5
 80018b2:	2002      	movs	r0, #2
 80018b4:	f000 f9dc 	bl	8001c70 <setTimer>
	}
}
 80018b8:	bf00      	nop
 80018ba:	bd80      	pop	{r7, pc}
 80018bc:	20000024 	.word	0x20000024
 80018c0:	20000090 	.word	0x20000090
 80018c4:	200000d4 	.word	0x200000d4
 80018c8:	40010c00 	.word	0x40010c00

080018cc <init_grn_time_config_change>:

void init_grn_time_config_change()
{
 80018cc:	b580      	push	{r7, lr}
 80018ce:	af00      	add	r7, sp, #0
	// BTN_0, BTN_2, grn_temp_time
	resetButton(&button0);
 80018d0:	4810      	ldr	r0, [pc, #64]	@ (8001914 <init_grn_time_config_change+0x48>)
 80018d2:	f7fe fff5 	bl	80008c0 <resetButton>
	resetButton(&button2);
 80018d6:	4810      	ldr	r0, [pc, #64]	@ (8001918 <init_grn_time_config_change+0x4c>)
 80018d8:	f7fe fff2 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	turn_grn_on();
 80018dc:	f7ff fa6c 	bl	8000db8 <turn_grn_on>
	setTimer(TIMER_250MS, TIME_250MS);
 80018e0:	21fa      	movs	r1, #250	@ 0xfa
 80018e2:	2006      	movs	r0, #6
 80018e4:	f000 f9c4 	bl	8001c70 <setTimer>

	set_on_4digits();
 80018e8:	f7fe fc30 	bl	800014c <set_on_4digits>
	counter_way0 = grn_temp_time;
 80018ec:	4b0b      	ldr	r3, [pc, #44]	@ (800191c <init_grn_time_config_change+0x50>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	4a0b      	ldr	r2, [pc, #44]	@ (8001920 <init_grn_time_config_change+0x54>)
 80018f2:	6013      	str	r3, [r2, #0]
	counter_way1 = 14;
 80018f4:	4b0b      	ldr	r3, [pc, #44]	@ (8001924 <init_grn_time_config_change+0x58>)
 80018f6:	220e      	movs	r2, #14
 80018f8:	601a      	str	r2, [r3, #0]
	update_led_7seg_buffer();
 80018fa:	f7fe fc99 	bl	8000230 <update_led_7seg_buffer>
	setTimer(TIMER_7SEG, TIME_7SEG);
 80018fe:	2105      	movs	r1, #5
 8001900:	2002      	movs	r0, #2
 8001902:	f000 f9b5 	bl	8001c70 <setTimer>

	setTimer(TIMER_7SEG_STATUS, TIME_7SEG_STATUS);
 8001906:	21fa      	movs	r1, #250	@ 0xfa
 8001908:	2003      	movs	r0, #3
 800190a:	f000 f9b1 	bl	8001c70 <setTimer>
}
 800190e:	bf00      	nop
 8001910:	bd80      	pop	{r7, pc}
 8001912:	bf00      	nop
 8001914:	20000000 	.word	0x20000000
 8001918:	20000048 	.word	0x20000048
 800191c:	20000090 	.word	0x20000090
 8001920:	200000d4 	.word	0x200000d4
 8001924:	200000d8 	.word	0x200000d8

08001928 <grn_time_config_change>:
void grn_time_config_change()
{
 8001928:	b580      	push	{r7, lr}
 800192a:	af00      	add	r7, sp, #0
	if (1)
	{
		if (isButtonPressed(&button1))
 800192c:	4837      	ldr	r0, [pc, #220]	@ (8001a0c <grn_time_config_change+0xe4>)
 800192e:	f7fe ffa1 	bl	8000874 <isButtonPressed>
 8001932:	4603      	mov	r3, r0
 8001934:	2b00      	cmp	r3, #0
 8001936:	d004      	beq.n	8001942 <grn_time_config_change+0x1a>
		{
			++grn_temp_time;
 8001938:	4b35      	ldr	r3, [pc, #212]	@ (8001a10 <grn_time_config_change+0xe8>)
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	3301      	adds	r3, #1
 800193e:	4a34      	ldr	r2, [pc, #208]	@ (8001a10 <grn_time_config_change+0xe8>)
 8001940:	6013      	str	r3, [r2, #0]
		}
		if (isButtonLongPressed(&button1))
 8001942:	4832      	ldr	r0, [pc, #200]	@ (8001a0c <grn_time_config_change+0xe4>)
 8001944:	f7fe ffa9 	bl	800089a <isButtonLongPressed>
 8001948:	4603      	mov	r3, r0
 800194a:	2b00      	cmp	r3, #0
 800194c:	d004      	beq.n	8001958 <grn_time_config_change+0x30>
		{
			grn_temp_time += 5;
 800194e:	4b30      	ldr	r3, [pc, #192]	@ (8001a10 <grn_time_config_change+0xe8>)
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	3305      	adds	r3, #5
 8001954:	4a2e      	ldr	r2, [pc, #184]	@ (8001a10 <grn_time_config_change+0xe8>)
 8001956:	6013      	str	r3, [r2, #0]
		}
		if (grn_temp_time > MAX_COUNTER)
 8001958:	4b2d      	ldr	r3, [pc, #180]	@ (8001a10 <grn_time_config_change+0xe8>)
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	2b63      	cmp	r3, #99	@ 0x63
 800195e:	dd02      	ble.n	8001966 <grn_time_config_change+0x3e>
		{
			grn_temp_time = MIN_COUNTER;
 8001960:	4b2b      	ldr	r3, [pc, #172]	@ (8001a10 <grn_time_config_change+0xe8>)
 8001962:	2201      	movs	r2, #1
 8001964:	601a      	str	r2, [r3, #0]
		}

		if (isButtonPressed(&button2))
 8001966:	482b      	ldr	r0, [pc, #172]	@ (8001a14 <grn_time_config_change+0xec>)
 8001968:	f7fe ff84 	bl	8000874 <isButtonPressed>
 800196c:	4603      	mov	r3, r0
 800196e:	2b00      	cmp	r3, #0
 8001970:	d00a      	beq.n	8001988 <grn_time_config_change+0x60>
		{
			if (1)
			{
				grn_time = grn_temp_time;
 8001972:	4b27      	ldr	r3, [pc, #156]	@ (8001a10 <grn_time_config_change+0xe8>)
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	4a28      	ldr	r2, [pc, #160]	@ (8001a18 <grn_time_config_change+0xf0>)
 8001978:	6013      	str	r3, [r2, #0]
				red_time = grn_time + yel_time;
 800197a:	4b27      	ldr	r3, [pc, #156]	@ (8001a18 <grn_time_config_change+0xf0>)
 800197c:	681a      	ldr	r2, [r3, #0]
 800197e:	4b27      	ldr	r3, [pc, #156]	@ (8001a1c <grn_time_config_change+0xf4>)
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	4413      	add	r3, r2
 8001984:	4a26      	ldr	r2, [pc, #152]	@ (8001a20 <grn_time_config_change+0xf8>)
 8001986:	6013      	str	r3, [r2, #0]
			}
		}

		counter_way0 = grn_temp_time;
 8001988:	4b21      	ldr	r3, [pc, #132]	@ (8001a10 <grn_time_config_change+0xe8>)
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	4a25      	ldr	r2, [pc, #148]	@ (8001a24 <grn_time_config_change+0xfc>)
 800198e:	6013      	str	r3, [r2, #0]
		update_led_7seg_buffer();
 8001990:	f7fe fc4e 	bl	8000230 <update_led_7seg_buffer>
	}

	if (isFlag(TIMER_250MS))
 8001994:	2006      	movs	r0, #6
 8001996:	f000 f9b3 	bl	8001d00 <isFlag>
 800199a:	4603      	mov	r3, r0
 800199c:	2b00      	cmp	r3, #0
 800199e:	d00c      	beq.n	80019ba <grn_time_config_change+0x92>
	{
		HAL_GPIO_TogglePin(LED_GRN_0_GPIO_Port, LED_GRN_0_Pin);
 80019a0:	2140      	movs	r1, #64	@ 0x40
 80019a2:	4821      	ldr	r0, [pc, #132]	@ (8001a28 <grn_time_config_change+0x100>)
 80019a4:	f000 fde1 	bl	800256a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LED_GRN_1_GPIO_Port, LED_GRN_1_Pin);
 80019a8:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80019ac:	481e      	ldr	r0, [pc, #120]	@ (8001a28 <grn_time_config_change+0x100>)
 80019ae:	f000 fddc 	bl	800256a <HAL_GPIO_TogglePin>
		setTimer(TIMER_250MS, TIME_250MS);
 80019b2:	21fa      	movs	r1, #250	@ 0xfa
 80019b4:	2006      	movs	r0, #6
 80019b6:	f000 f95b 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG))
 80019ba:	2002      	movs	r0, #2
 80019bc:	f000 f9a0 	bl	8001d00 <isFlag>
 80019c0:	4603      	mov	r3, r0
 80019c2:	2b00      	cmp	r3, #0
 80019c4:	d005      	beq.n	80019d2 <grn_time_config_change+0xaa>
	{
		display_4digits();
 80019c6:	f7fe fbf3 	bl	80001b0 <display_4digits>
		setTimer(TIMER_7SEG, TIME_7SEG);
 80019ca:	2105      	movs	r1, #5
 80019cc:	2002      	movs	r0, #2
 80019ce:	f000 f94f 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_7SEG_STATUS))
 80019d2:	2003      	movs	r0, #3
 80019d4:	f000 f994 	bl	8001d00 <isFlag>
 80019d8:	4603      	mov	r3, r0
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d014      	beq.n	8001a08 <grn_time_config_change+0xe0>
	{
		if (status_4digits[0] == LED_ON)
 80019de:	4b13      	ldr	r3, [pc, #76]	@ (8001a2c <grn_time_config_change+0x104>)
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d106      	bne.n	80019f4 <grn_time_config_change+0xcc>
		{
			status_4digits[0] = LED_OFF;
 80019e6:	4b11      	ldr	r3, [pc, #68]	@ (8001a2c <grn_time_config_change+0x104>)
 80019e8:	2201      	movs	r2, #1
 80019ea:	601a      	str	r2, [r3, #0]
			status_4digits[1] = LED_OFF;
 80019ec:	4b0f      	ldr	r3, [pc, #60]	@ (8001a2c <grn_time_config_change+0x104>)
 80019ee:	2201      	movs	r2, #1
 80019f0:	605a      	str	r2, [r3, #4]
 80019f2:	e005      	b.n	8001a00 <grn_time_config_change+0xd8>
		}
		else
		{
			status_4digits[0] = LED_ON;
 80019f4:	4b0d      	ldr	r3, [pc, #52]	@ (8001a2c <grn_time_config_change+0x104>)
 80019f6:	2200      	movs	r2, #0
 80019f8:	601a      	str	r2, [r3, #0]
			status_4digits[1] = LED_ON;
 80019fa:	4b0c      	ldr	r3, [pc, #48]	@ (8001a2c <grn_time_config_change+0x104>)
 80019fc:	2200      	movs	r2, #0
 80019fe:	605a      	str	r2, [r3, #4]
		}
		setTimer(TIMER_7SEG_STATUS, TIME_7SEG_STATUS);
 8001a00:	21fa      	movs	r1, #250	@ 0xfa
 8001a02:	2003      	movs	r0, #3
 8001a04:	f000 f934 	bl	8001c70 <setTimer>
	}
}
 8001a08:	bf00      	nop
 8001a0a:	bd80      	pop	{r7, pc}
 8001a0c:	20000024 	.word	0x20000024
 8001a10:	20000090 	.word	0x20000090
 8001a14:	20000048 	.word	0x20000048
 8001a18:	20000084 	.word	0x20000084
 8001a1c:	20000080 	.word	0x20000080
 8001a20:	2000007c 	.word	0x2000007c
 8001a24:	200000d4 	.word	0x200000d4
 8001a28:	40010c00 	.word	0x40010c00
 8001a2c:	200000c4 	.word	0x200000c4

08001a30 <init_yel_blinky>:

void init_yel_blinky()
{
 8001a30:	b580      	push	{r7, lr}
 8001a32:	af00      	add	r7, sp, #0
	// BTN_1
	resetButton(&button1);
 8001a34:	4806      	ldr	r0, [pc, #24]	@ (8001a50 <init_yel_blinky+0x20>)
 8001a36:	f7fe ff43 	bl	80008c0 <resetButton>

	// OTHER PRECONDITIONS
	turn_yel_on();
 8001a3a:	f7ff f997 	bl	8000d6c <turn_yel_on>
	unable_4digit();
 8001a3e:	f7fe fb99 	bl	8000174 <unable_4digit>
	setTimer(TIMER_500MS, TIME_500MS);
 8001a42:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8001a46:	2005      	movs	r0, #5
 8001a48:	f000 f912 	bl	8001c70 <setTimer>
}
 8001a4c:	bf00      	nop
 8001a4e:	bd80      	pop	{r7, pc}
 8001a50:	20000024 	.word	0x20000024

08001a54 <yel_blinky>:
void yel_blinky()
{
 8001a54:	b580      	push	{r7, lr}
 8001a56:	af00      	add	r7, sp, #0
	if (isFlag(TIMER_500MS))
 8001a58:	2005      	movs	r0, #5
 8001a5a:	f000 f951 	bl	8001d00 <isFlag>
 8001a5e:	4603      	mov	r3, r0
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d00d      	beq.n	8001a80 <yel_blinky+0x2c>
	{
		HAL_GPIO_TogglePin(LED_YEL_0_GPIO_Port, LED_YEL_0_Pin);
 8001a64:	2120      	movs	r1, #32
 8001a66:	4807      	ldr	r0, [pc, #28]	@ (8001a84 <yel_blinky+0x30>)
 8001a68:	f000 fd7f 	bl	800256a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LED_YEL_1_GPIO_Port, LED_YEL_1_Pin);
 8001a6c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001a70:	4804      	ldr	r0, [pc, #16]	@ (8001a84 <yel_blinky+0x30>)
 8001a72:	f000 fd7a 	bl	800256a <HAL_GPIO_TogglePin>
		setTimer(TIMER_500MS, TIME_500MS);
 8001a76:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8001a7a:	2005      	movs	r0, #5
 8001a7c:	f000 f8f8 	bl	8001c70 <setTimer>
	}
}
 8001a80:	bf00      	nop
 8001a82:	bd80      	pop	{r7, pc}
 8001a84:	40010c00 	.word	0x40010c00

08001a88 <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Configure pins
*/
void MX_GPIO_Init(void)
{
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	b086      	sub	sp, #24
 8001a8c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a8e:	f107 0308 	add.w	r3, r7, #8
 8001a92:	2200      	movs	r2, #0
 8001a94:	601a      	str	r2, [r3, #0]
 8001a96:	605a      	str	r2, [r3, #4]
 8001a98:	609a      	str	r2, [r3, #8]
 8001a9a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a9c:	4b28      	ldr	r3, [pc, #160]	@ (8001b40 <MX_GPIO_Init+0xb8>)
 8001a9e:	699b      	ldr	r3, [r3, #24]
 8001aa0:	4a27      	ldr	r2, [pc, #156]	@ (8001b40 <MX_GPIO_Init+0xb8>)
 8001aa2:	f043 0304 	orr.w	r3, r3, #4
 8001aa6:	6193      	str	r3, [r2, #24]
 8001aa8:	4b25      	ldr	r3, [pc, #148]	@ (8001b40 <MX_GPIO_Init+0xb8>)
 8001aaa:	699b      	ldr	r3, [r3, #24]
 8001aac:	f003 0304 	and.w	r3, r3, #4
 8001ab0:	607b      	str	r3, [r7, #4]
 8001ab2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ab4:	4b22      	ldr	r3, [pc, #136]	@ (8001b40 <MX_GPIO_Init+0xb8>)
 8001ab6:	699b      	ldr	r3, [r3, #24]
 8001ab8:	4a21      	ldr	r2, [pc, #132]	@ (8001b40 <MX_GPIO_Init+0xb8>)
 8001aba:	f043 0308 	orr.w	r3, r3, #8
 8001abe:	6193      	str	r3, [r2, #24]
 8001ac0:	4b1f      	ldr	r3, [pc, #124]	@ (8001b40 <MX_GPIO_Init+0xb8>)
 8001ac2:	699b      	ldr	r3, [r3, #24]
 8001ac4:	f003 0308 	and.w	r3, r3, #8
 8001ac8:	603b      	str	r3, [r7, #0]
 8001aca:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, SEG_0_Pin|SEG_1_Pin|SEG_2_Pin|SEG_3_Pin
 8001acc:	2200      	movs	r2, #0
 8001ace:	f641 31ff 	movw	r1, #7167	@ 0x1bff
 8001ad2:	481c      	ldr	r0, [pc, #112]	@ (8001b44 <MX_GPIO_Init+0xbc>)
 8001ad4:	f000 fd31 	bl	800253a <HAL_GPIO_WritePin>
                          |SEG_4_Pin|SEG_5_Pin|SEG_6_Pin|SEG_7_Pin
                          |EN_0_Pin|EN_1_Pin|EN_3_Pin|LED_RED_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, BTN_0_Pin|BTN_1_Pin|BTN_2_Pin|LED_RED_0_Pin
 8001ad8:	2200      	movs	r2, #0
 8001ada:	f247 31f0 	movw	r1, #29680	@ 0x73f0
 8001ade:	481a      	ldr	r0, [pc, #104]	@ (8001b48 <MX_GPIO_Init+0xc0>)
 8001ae0:	f000 fd2b 	bl	800253a <HAL_GPIO_WritePin>
                          |LED_GRN_1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : SEG_0_Pin SEG_1_Pin SEG_2_Pin SEG_3_Pin
                           SEG_4_Pin SEG_5_Pin SEG_6_Pin SEG_7_Pin
                           EN_0_Pin EN_1_Pin EN_3_Pin LED_RED_Pin */
  GPIO_InitStruct.Pin = SEG_0_Pin|SEG_1_Pin|SEG_2_Pin|SEG_3_Pin
 8001ae4:	f641 33ff 	movw	r3, #7167	@ 0x1bff
 8001ae8:	60bb      	str	r3, [r7, #8]
                          |SEG_4_Pin|SEG_5_Pin|SEG_6_Pin|SEG_7_Pin
                          |EN_0_Pin|EN_1_Pin|EN_3_Pin|LED_RED_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001aea:	2301      	movs	r3, #1
 8001aec:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aee:	2300      	movs	r3, #0
 8001af0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001af2:	2302      	movs	r3, #2
 8001af4:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001af6:	f107 0308 	add.w	r3, r7, #8
 8001afa:	4619      	mov	r1, r3
 8001afc:	4811      	ldr	r0, [pc, #68]	@ (8001b44 <MX_GPIO_Init+0xbc>)
 8001afe:	f000 fb89 	bl	8002214 <HAL_GPIO_Init>

  /*Configure GPIO pins : BTN_0_Pin BTN_1_Pin BTN_2_Pin LED_RED_0_Pin
                           LED_YEL_0_Pin LED_GRN_0_Pin LED_RED_1_Pin LED_YEL_1_Pin
                           LED_GRN_1_Pin */
  GPIO_InitStruct.Pin = BTN_0_Pin|BTN_1_Pin|BTN_2_Pin|LED_RED_0_Pin
 8001b02:	f247 33f0 	movw	r3, #29680	@ 0x73f0
 8001b06:	60bb      	str	r3, [r7, #8]
                          |LED_YEL_0_Pin|LED_GRN_0_Pin|LED_RED_1_Pin|LED_YEL_1_Pin
                          |LED_GRN_1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b08:	2301      	movs	r3, #1
 8001b0a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b0c:	2300      	movs	r3, #0
 8001b0e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b10:	2302      	movs	r3, #2
 8001b12:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b14:	f107 0308 	add.w	r3, r7, #8
 8001b18:	4619      	mov	r1, r3
 8001b1a:	480b      	ldr	r0, [pc, #44]	@ (8001b48 <MX_GPIO_Init+0xc0>)
 8001b1c:	f000 fb7a 	bl	8002214 <HAL_GPIO_Init>

  /*Configure GPIO pin : EN_2_Pin */
  GPIO_InitStruct.Pin = EN_2_Pin;
 8001b20:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001b24:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b26:	2303      	movs	r3, #3
 8001b28:	60fb      	str	r3, [r7, #12]
  HAL_GPIO_Init(EN_2_GPIO_Port, &GPIO_InitStruct);
 8001b2a:	f107 0308 	add.w	r3, r7, #8
 8001b2e:	4619      	mov	r1, r3
 8001b30:	4804      	ldr	r0, [pc, #16]	@ (8001b44 <MX_GPIO_Init+0xbc>)
 8001b32:	f000 fb6f 	bl	8002214 <HAL_GPIO_Init>

}
 8001b36:	bf00      	nop
 8001b38:	3718      	adds	r7, #24
 8001b3a:	46bd      	mov	sp, r7
 8001b3c:	bd80      	pop	{r7, pc}
 8001b3e:	bf00      	nop
 8001b40:	40021000 	.word	0x40021000
 8001b44:	40010800 	.word	0x40010800
 8001b48:	40010c00 	.word	0x40010c00

08001b4c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001b50:	f000 f9f0 	bl	8001f34 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001b54:	f000 f840 	bl	8001bd8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001b58:	f7ff ff96 	bl	8001a88 <MX_GPIO_Init>
  MX_TIM2_Init();
 8001b5c:	f000 f954 	bl	8001e08 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8001b60:	4818      	ldr	r0, [pc, #96]	@ (8001bc4 <main+0x78>)
 8001b62:	f001 f949 	bl	8002df8 <HAL_TIM_Base_Start_IT>
  setTimer(TIMER_STATUS, TIME_STATUS);
 8001b66:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001b6a:	2007      	movs	r0, #7
 8001b6c:	f000 f880 	bl	8001c70 <setTimer>
  setTimer(TIMER_READ_BTN, TIME_READ_BTN);
 8001b70:	2114      	movs	r1, #20
 8001b72:	2000      	movs	r0, #0
 8001b74:	f000 f87c 	bl	8001c70 <setTimer>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	if (isFlag(TIMER_STATUS))
 8001b78:	2007      	movs	r0, #7
 8001b7a:	f000 f8c1 	bl	8001d00 <isFlag>
 8001b7e:	4603      	mov	r3, r0
 8001b80:	2b00      	cmp	r3, #0
 8001b82:	d009      	beq.n	8001b98 <main+0x4c>
	{
	  HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
 8001b84:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001b88:	480f      	ldr	r0, [pc, #60]	@ (8001bc8 <main+0x7c>)
 8001b8a:	f000 fcee 	bl	800256a <HAL_GPIO_TogglePin>
	  setTimer(TIMER_STATUS, TIME_STATUS);
 8001b8e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001b92:	2007      	movs	r0, #7
 8001b94:	f000 f86c 	bl	8001c70 <setTimer>
	}

	if (isFlag(TIMER_READ_BTN))
 8001b98:	2000      	movs	r0, #0
 8001b9a:	f000 f8b1 	bl	8001d00 <isFlag>
 8001b9e:	4603      	mov	r3, r0
 8001ba0:	2b00      	cmp	r3, #0
 8001ba2:	d00c      	beq.n	8001bbe <main+0x72>
	{
		getKeyInput(&button0);
 8001ba4:	4809      	ldr	r0, [pc, #36]	@ (8001bcc <main+0x80>)
 8001ba6:	f7fe fe15 	bl	80007d4 <getKeyInput>
		getKeyInput(&button1);
 8001baa:	4809      	ldr	r0, [pc, #36]	@ (8001bd0 <main+0x84>)
 8001bac:	f7fe fe12 	bl	80007d4 <getKeyInput>
		getKeyInput(&button2);
 8001bb0:	4808      	ldr	r0, [pc, #32]	@ (8001bd4 <main+0x88>)
 8001bb2:	f7fe fe0f 	bl	80007d4 <getKeyInput>

		setTimer(TIMER_READ_BTN, TIME_READ_BTN);
 8001bb6:	2114      	movs	r1, #20
 8001bb8:	2000      	movs	r0, #0
 8001bba:	f000 f859 	bl	8001c70 <setTimer>
	}

	if (1)
	{
	  fsm_traffic_light();
 8001bbe:	f7fe fe8f 	bl	80008e0 <fsm_traffic_light>
	if (isFlag(TIMER_STATUS))
 8001bc2:	e7d9      	b.n	8001b78 <main+0x2c>
 8001bc4:	2000012c 	.word	0x2000012c
 8001bc8:	40010800 	.word	0x40010800
 8001bcc:	20000000 	.word	0x20000000
 8001bd0:	20000024 	.word	0x20000024
 8001bd4:	20000048 	.word	0x20000048

08001bd8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	b090      	sub	sp, #64	@ 0x40
 8001bdc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001bde:	f107 0318 	add.w	r3, r7, #24
 8001be2:	2228      	movs	r2, #40	@ 0x28
 8001be4:	2100      	movs	r1, #0
 8001be6:	4618      	mov	r0, r3
 8001be8:	f001 fc92 	bl	8003510 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001bec:	1d3b      	adds	r3, r7, #4
 8001bee:	2200      	movs	r2, #0
 8001bf0:	601a      	str	r2, [r3, #0]
 8001bf2:	605a      	str	r2, [r3, #4]
 8001bf4:	609a      	str	r2, [r3, #8]
 8001bf6:	60da      	str	r2, [r3, #12]
 8001bf8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001bfa:	2302      	movs	r3, #2
 8001bfc:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001bfe:	2301      	movs	r3, #1
 8001c00:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001c02:	2310      	movs	r3, #16
 8001c04:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001c06:	2300      	movs	r3, #0
 8001c08:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001c0a:	f107 0318 	add.w	r3, r7, #24
 8001c0e:	4618      	mov	r0, r3
 8001c10:	f000 fcc4 	bl	800259c <HAL_RCC_OscConfig>
 8001c14:	4603      	mov	r3, r0
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d001      	beq.n	8001c1e <SystemClock_Config+0x46>
  {
    Error_Handler();
 8001c1a:	f000 f822 	bl	8001c62 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001c1e:	230f      	movs	r3, #15
 8001c20:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001c22:	2300      	movs	r3, #0
 8001c24:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001c26:	2300      	movs	r3, #0
 8001c28:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001c2a:	2300      	movs	r3, #0
 8001c2c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001c2e:	2300      	movs	r3, #0
 8001c30:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001c32:	1d3b      	adds	r3, r7, #4
 8001c34:	2100      	movs	r1, #0
 8001c36:	4618      	mov	r0, r3
 8001c38:	f000 ff32 	bl	8002aa0 <HAL_RCC_ClockConfig>
 8001c3c:	4603      	mov	r3, r0
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d001      	beq.n	8001c46 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8001c42:	f000 f80e 	bl	8001c62 <Error_Handler>
  }
}
 8001c46:	bf00      	nop
 8001c48:	3740      	adds	r7, #64	@ 0x40
 8001c4a:	46bd      	mov	sp, r7
 8001c4c:	bd80      	pop	{r7, pc}

08001c4e <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001c4e:	b580      	push	{r7, lr}
 8001c50:	b082      	sub	sp, #8
 8001c52:	af00      	add	r7, sp, #0
 8001c54:	6078      	str	r0, [r7, #4]
	timerRun();
 8001c56:	f000 f823 	bl	8001ca0 <timerRun>
}
 8001c5a:	bf00      	nop
 8001c5c:	3708      	adds	r7, #8
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bd80      	pop	{r7, pc}

08001c62 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001c62:	b480      	push	{r7}
 8001c64:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001c66:	b672      	cpsid	i
}
 8001c68:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001c6a:	bf00      	nop
 8001c6c:	e7fd      	b.n	8001c6a <Error_Handler+0x8>
	...

08001c70 <setTimer>:
#define TICK 1 // ms

struct TimerStruct timer[10];

void setTimer(int idx, int counter)
{
 8001c70:	b480      	push	{r7}
 8001c72:	b083      	sub	sp, #12
 8001c74:	af00      	add	r7, sp, #0
 8001c76:	6078      	str	r0, [r7, #4]
 8001c78:	6039      	str	r1, [r7, #0]
	timer[idx].counter = counter / TICK;
 8001c7a:	4908      	ldr	r1, [pc, #32]	@ (8001c9c <setTimer+0x2c>)
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	683a      	ldr	r2, [r7, #0]
 8001c80:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
	timer[idx].flag = 0;
 8001c84:	4a05      	ldr	r2, [pc, #20]	@ (8001c9c <setTimer+0x2c>)
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	00db      	lsls	r3, r3, #3
 8001c8a:	4413      	add	r3, r2
 8001c8c:	2200      	movs	r2, #0
 8001c8e:	605a      	str	r2, [r3, #4]
}
 8001c90:	bf00      	nop
 8001c92:	370c      	adds	r7, #12
 8001c94:	46bd      	mov	sp, r7
 8001c96:	bc80      	pop	{r7}
 8001c98:	4770      	bx	lr
 8001c9a:	bf00      	nop
 8001c9c:	200000dc 	.word	0x200000dc

08001ca0 <timerRun>:

void timerRun()
{
 8001ca0:	b480      	push	{r7}
 8001ca2:	b083      	sub	sp, #12
 8001ca4:	af00      	add	r7, sp, #0
	for (int i = 0; i < 10; ++i)
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	607b      	str	r3, [r7, #4]
 8001caa:	e01d      	b.n	8001ce8 <timerRun+0x48>
	{
		if (timer[i].counter > 0)
 8001cac:	4a13      	ldr	r2, [pc, #76]	@ (8001cfc <timerRun+0x5c>)
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	dd14      	ble.n	8001ce2 <timerRun+0x42>
		{
			--timer[i].counter;
 8001cb8:	4a10      	ldr	r2, [pc, #64]	@ (8001cfc <timerRun+0x5c>)
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001cc0:	1e5a      	subs	r2, r3, #1
 8001cc2:	490e      	ldr	r1, [pc, #56]	@ (8001cfc <timerRun+0x5c>)
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
			if (timer[i].counter <= 0)
 8001cca:	4a0c      	ldr	r2, [pc, #48]	@ (8001cfc <timerRun+0x5c>)
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	dc05      	bgt.n	8001ce2 <timerRun+0x42>
			{
				timer[i].flag = 1;
 8001cd6:	4a09      	ldr	r2, [pc, #36]	@ (8001cfc <timerRun+0x5c>)
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	00db      	lsls	r3, r3, #3
 8001cdc:	4413      	add	r3, r2
 8001cde:	2201      	movs	r2, #1
 8001ce0:	605a      	str	r2, [r3, #4]
	for (int i = 0; i < 10; ++i)
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	3301      	adds	r3, #1
 8001ce6:	607b      	str	r3, [r7, #4]
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	2b09      	cmp	r3, #9
 8001cec:	ddde      	ble.n	8001cac <timerRun+0xc>
			}
		}
	}
}
 8001cee:	bf00      	nop
 8001cf0:	bf00      	nop
 8001cf2:	370c      	adds	r7, #12
 8001cf4:	46bd      	mov	sp, r7
 8001cf6:	bc80      	pop	{r7}
 8001cf8:	4770      	bx	lr
 8001cfa:	bf00      	nop
 8001cfc:	200000dc 	.word	0x200000dc

08001d00 <isFlag>:

int isFlag(int idx)
{
 8001d00:	b480      	push	{r7}
 8001d02:	b083      	sub	sp, #12
 8001d04:	af00      	add	r7, sp, #0
 8001d06:	6078      	str	r0, [r7, #4]
	if (timer[idx].flag)
 8001d08:	4a07      	ldr	r2, [pc, #28]	@ (8001d28 <isFlag+0x28>)
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	00db      	lsls	r3, r3, #3
 8001d0e:	4413      	add	r3, r2
 8001d10:	685b      	ldr	r3, [r3, #4]
 8001d12:	2b00      	cmp	r3, #0
 8001d14:	d001      	beq.n	8001d1a <isFlag+0x1a>
	{
		return 1;
 8001d16:	2301      	movs	r3, #1
 8001d18:	e000      	b.n	8001d1c <isFlag+0x1c>
	}
	return 0;
 8001d1a:	2300      	movs	r3, #0
}
 8001d1c:	4618      	mov	r0, r3
 8001d1e:	370c      	adds	r7, #12
 8001d20:	46bd      	mov	sp, r7
 8001d22:	bc80      	pop	{r7}
 8001d24:	4770      	bx	lr
 8001d26:	bf00      	nop
 8001d28:	200000dc 	.word	0x200000dc

08001d2c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d2c:	b480      	push	{r7}
 8001d2e:	b085      	sub	sp, #20
 8001d30:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001d32:	4b15      	ldr	r3, [pc, #84]	@ (8001d88 <HAL_MspInit+0x5c>)
 8001d34:	699b      	ldr	r3, [r3, #24]
 8001d36:	4a14      	ldr	r2, [pc, #80]	@ (8001d88 <HAL_MspInit+0x5c>)
 8001d38:	f043 0301 	orr.w	r3, r3, #1
 8001d3c:	6193      	str	r3, [r2, #24]
 8001d3e:	4b12      	ldr	r3, [pc, #72]	@ (8001d88 <HAL_MspInit+0x5c>)
 8001d40:	699b      	ldr	r3, [r3, #24]
 8001d42:	f003 0301 	and.w	r3, r3, #1
 8001d46:	60bb      	str	r3, [r7, #8]
 8001d48:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d4a:	4b0f      	ldr	r3, [pc, #60]	@ (8001d88 <HAL_MspInit+0x5c>)
 8001d4c:	69db      	ldr	r3, [r3, #28]
 8001d4e:	4a0e      	ldr	r2, [pc, #56]	@ (8001d88 <HAL_MspInit+0x5c>)
 8001d50:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001d54:	61d3      	str	r3, [r2, #28]
 8001d56:	4b0c      	ldr	r3, [pc, #48]	@ (8001d88 <HAL_MspInit+0x5c>)
 8001d58:	69db      	ldr	r3, [r3, #28]
 8001d5a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001d5e:	607b      	str	r3, [r7, #4]
 8001d60:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** DISABLE: JTAG-DP Disabled and SW-DP Disabled
  */
  __HAL_AFIO_REMAP_SWJ_DISABLE();
 8001d62:	4b0a      	ldr	r3, [pc, #40]	@ (8001d8c <HAL_MspInit+0x60>)
 8001d64:	685b      	ldr	r3, [r3, #4]
 8001d66:	60fb      	str	r3, [r7, #12]
 8001d68:	68fb      	ldr	r3, [r7, #12]
 8001d6a:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8001d6e:	60fb      	str	r3, [r7, #12]
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8001d76:	60fb      	str	r3, [r7, #12]
 8001d78:	4a04      	ldr	r2, [pc, #16]	@ (8001d8c <HAL_MspInit+0x60>)
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001d7e:	bf00      	nop
 8001d80:	3714      	adds	r7, #20
 8001d82:	46bd      	mov	sp, r7
 8001d84:	bc80      	pop	{r7}
 8001d86:	4770      	bx	lr
 8001d88:	40021000 	.word	0x40021000
 8001d8c:	40010000 	.word	0x40010000

08001d90 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001d90:	b480      	push	{r7}
 8001d92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001d94:	bf00      	nop
 8001d96:	e7fd      	b.n	8001d94 <NMI_Handler+0x4>

08001d98 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d98:	b480      	push	{r7}
 8001d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001d9c:	bf00      	nop
 8001d9e:	e7fd      	b.n	8001d9c <HardFault_Handler+0x4>

08001da0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001da0:	b480      	push	{r7}
 8001da2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001da4:	bf00      	nop
 8001da6:	e7fd      	b.n	8001da4 <MemManage_Handler+0x4>

08001da8 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001da8:	b480      	push	{r7}
 8001daa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001dac:	bf00      	nop
 8001dae:	e7fd      	b.n	8001dac <BusFault_Handler+0x4>

08001db0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001db0:	b480      	push	{r7}
 8001db2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001db4:	bf00      	nop
 8001db6:	e7fd      	b.n	8001db4 <UsageFault_Handler+0x4>

08001db8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001db8:	b480      	push	{r7}
 8001dba:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001dbc:	bf00      	nop
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	bc80      	pop	{r7}
 8001dc2:	4770      	bx	lr

08001dc4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001dc4:	b480      	push	{r7}
 8001dc6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001dc8:	bf00      	nop
 8001dca:	46bd      	mov	sp, r7
 8001dcc:	bc80      	pop	{r7}
 8001dce:	4770      	bx	lr

08001dd0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001dd0:	b480      	push	{r7}
 8001dd2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001dd4:	bf00      	nop
 8001dd6:	46bd      	mov	sp, r7
 8001dd8:	bc80      	pop	{r7}
 8001dda:	4770      	bx	lr

08001ddc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001de0:	f000 f8ee 	bl	8001fc0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001de4:	bf00      	nop
 8001de6:	bd80      	pop	{r7, pc}

08001de8 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001de8:	b580      	push	{r7, lr}
 8001dea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001dec:	4802      	ldr	r0, [pc, #8]	@ (8001df8 <TIM2_IRQHandler+0x10>)
 8001dee:	f001 f84f 	bl	8002e90 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001df2:	bf00      	nop
 8001df4:	bd80      	pop	{r7, pc}
 8001df6:	bf00      	nop
 8001df8:	2000012c 	.word	0x2000012c

08001dfc <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001dfc:	b480      	push	{r7}
 8001dfe:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001e00:	bf00      	nop
 8001e02:	46bd      	mov	sp, r7
 8001e04:	bc80      	pop	{r7}
 8001e06:	4770      	bx	lr

08001e08 <MX_TIM2_Init>:

TIM_HandleTypeDef htim2;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	b086      	sub	sp, #24
 8001e0c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e0e:	f107 0308 	add.w	r3, r7, #8
 8001e12:	2200      	movs	r2, #0
 8001e14:	601a      	str	r2, [r3, #0]
 8001e16:	605a      	str	r2, [r3, #4]
 8001e18:	609a      	str	r2, [r3, #8]
 8001e1a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001e1c:	463b      	mov	r3, r7
 8001e1e:	2200      	movs	r2, #0
 8001e20:	601a      	str	r2, [r3, #0]
 8001e22:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001e24:	4b1d      	ldr	r3, [pc, #116]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e26:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001e2a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 799;
 8001e2c:	4b1b      	ldr	r3, [pc, #108]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e2e:	f240 321f 	movw	r2, #799	@ 0x31f
 8001e32:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e34:	4b19      	ldr	r3, [pc, #100]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e36:	2200      	movs	r2, #0
 8001e38:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8001e3a:	4b18      	ldr	r3, [pc, #96]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e3c:	2209      	movs	r2, #9
 8001e3e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e40:	4b16      	ldr	r3, [pc, #88]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e42:	2200      	movs	r2, #0
 8001e44:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e46:	4b15      	ldr	r3, [pc, #84]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e48:	2200      	movs	r2, #0
 8001e4a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001e4c:	4813      	ldr	r0, [pc, #76]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e4e:	f000 ff83 	bl	8002d58 <HAL_TIM_Base_Init>
 8001e52:	4603      	mov	r3, r0
 8001e54:	2b00      	cmp	r3, #0
 8001e56:	d001      	beq.n	8001e5c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001e58:	f7ff ff03 	bl	8001c62 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001e5c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001e60:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e62:	f107 0308 	add.w	r3, r7, #8
 8001e66:	4619      	mov	r1, r3
 8001e68:	480c      	ldr	r0, [pc, #48]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e6a:	f001 f901 	bl	8003070 <HAL_TIM_ConfigClockSource>
 8001e6e:	4603      	mov	r3, r0
 8001e70:	2b00      	cmp	r3, #0
 8001e72:	d001      	beq.n	8001e78 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001e74:	f7ff fef5 	bl	8001c62 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001e78:	2300      	movs	r3, #0
 8001e7a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e7c:	2300      	movs	r3, #0
 8001e7e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e80:	463b      	mov	r3, r7
 8001e82:	4619      	mov	r1, r3
 8001e84:	4805      	ldr	r0, [pc, #20]	@ (8001e9c <MX_TIM2_Init+0x94>)
 8001e86:	f001 fad9 	bl	800343c <HAL_TIMEx_MasterConfigSynchronization>
 8001e8a:	4603      	mov	r3, r0
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	d001      	beq.n	8001e94 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8001e90:	f7ff fee7 	bl	8001c62 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001e94:	bf00      	nop
 8001e96:	3718      	adds	r7, #24
 8001e98:	46bd      	mov	sp, r7
 8001e9a:	bd80      	pop	{r7, pc}
 8001e9c:	2000012c 	.word	0x2000012c

08001ea0 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b084      	sub	sp, #16
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001eb0:	d113      	bne.n	8001eda <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001eb2:	4b0c      	ldr	r3, [pc, #48]	@ (8001ee4 <HAL_TIM_Base_MspInit+0x44>)
 8001eb4:	69db      	ldr	r3, [r3, #28]
 8001eb6:	4a0b      	ldr	r2, [pc, #44]	@ (8001ee4 <HAL_TIM_Base_MspInit+0x44>)
 8001eb8:	f043 0301 	orr.w	r3, r3, #1
 8001ebc:	61d3      	str	r3, [r2, #28]
 8001ebe:	4b09      	ldr	r3, [pc, #36]	@ (8001ee4 <HAL_TIM_Base_MspInit+0x44>)
 8001ec0:	69db      	ldr	r3, [r3, #28]
 8001ec2:	f003 0301 	and.w	r3, r3, #1
 8001ec6:	60fb      	str	r3, [r7, #12]
 8001ec8:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001eca:	2200      	movs	r2, #0
 8001ecc:	2100      	movs	r1, #0
 8001ece:	201c      	movs	r0, #28
 8001ed0:	f000 f969 	bl	80021a6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001ed4:	201c      	movs	r0, #28
 8001ed6:	f000 f982 	bl	80021de <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 8001eda:	bf00      	nop
 8001edc:	3710      	adds	r7, #16
 8001ede:	46bd      	mov	sp, r7
 8001ee0:	bd80      	pop	{r7, pc}
 8001ee2:	bf00      	nop
 8001ee4:	40021000 	.word	0x40021000

08001ee8 <Reset_Handler>:
 8001ee8:	f7ff ff88 	bl	8001dfc <SystemInit>
 8001eec:	480b      	ldr	r0, [pc, #44]	@ (8001f1c <LoopFillZerobss+0xe>)
 8001eee:	490c      	ldr	r1, [pc, #48]	@ (8001f20 <LoopFillZerobss+0x12>)
 8001ef0:	4a0c      	ldr	r2, [pc, #48]	@ (8001f24 <LoopFillZerobss+0x16>)
 8001ef2:	2300      	movs	r3, #0
 8001ef4:	e002      	b.n	8001efc <LoopCopyDataInit>

08001ef6 <CopyDataInit>:
 8001ef6:	58d4      	ldr	r4, [r2, r3]
 8001ef8:	50c4      	str	r4, [r0, r3]
 8001efa:	3304      	adds	r3, #4

08001efc <LoopCopyDataInit>:
 8001efc:	18c4      	adds	r4, r0, r3
 8001efe:	428c      	cmp	r4, r1
 8001f00:	d3f9      	bcc.n	8001ef6 <CopyDataInit>
 8001f02:	4a09      	ldr	r2, [pc, #36]	@ (8001f28 <LoopFillZerobss+0x1a>)
 8001f04:	4c09      	ldr	r4, [pc, #36]	@ (8001f2c <LoopFillZerobss+0x1e>)
 8001f06:	2300      	movs	r3, #0
 8001f08:	e001      	b.n	8001f0e <LoopFillZerobss>

08001f0a <FillZerobss>:
 8001f0a:	6013      	str	r3, [r2, #0]
 8001f0c:	3204      	adds	r2, #4

08001f0e <LoopFillZerobss>:
 8001f0e:	42a2      	cmp	r2, r4
 8001f10:	d3fb      	bcc.n	8001f0a <FillZerobss>
 8001f12:	f001 fb05 	bl	8003520 <__libc_init_array>
 8001f16:	f7ff fe19 	bl	8001b4c <main>
 8001f1a:	4770      	bx	lr
 8001f1c:	20000000 	.word	0x20000000
 8001f20:	200000a0 	.word	0x200000a0
 8001f24:	080035ac 	.word	0x080035ac
 8001f28:	200000a0 	.word	0x200000a0
 8001f2c:	20000178 	.word	0x20000178

08001f30 <ADC1_2_IRQHandler>:
 8001f30:	e7fe      	b.n	8001f30 <ADC1_2_IRQHandler>
	...

08001f34 <HAL_Init>:
 8001f34:	b580      	push	{r7, lr}
 8001f36:	af00      	add	r7, sp, #0
 8001f38:	4b08      	ldr	r3, [pc, #32]	@ (8001f5c <HAL_Init+0x28>)
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	4a07      	ldr	r2, [pc, #28]	@ (8001f5c <HAL_Init+0x28>)
 8001f3e:	f043 0310 	orr.w	r3, r3, #16
 8001f42:	6013      	str	r3, [r2, #0]
 8001f44:	2003      	movs	r0, #3
 8001f46:	f000 f923 	bl	8002190 <HAL_NVIC_SetPriorityGrouping>
 8001f4a:	200f      	movs	r0, #15
 8001f4c:	f000 f808 	bl	8001f60 <HAL_InitTick>
 8001f50:	f7ff feec 	bl	8001d2c <HAL_MspInit>
 8001f54:	2300      	movs	r3, #0
 8001f56:	4618      	mov	r0, r3
 8001f58:	bd80      	pop	{r7, pc}
 8001f5a:	bf00      	nop
 8001f5c:	40022000 	.word	0x40022000

08001f60 <HAL_InitTick>:
 8001f60:	b580      	push	{r7, lr}
 8001f62:	b082      	sub	sp, #8
 8001f64:	af00      	add	r7, sp, #0
 8001f66:	6078      	str	r0, [r7, #4]
 8001f68:	4b12      	ldr	r3, [pc, #72]	@ (8001fb4 <HAL_InitTick+0x54>)
 8001f6a:	681a      	ldr	r2, [r3, #0]
 8001f6c:	4b12      	ldr	r3, [pc, #72]	@ (8001fb8 <HAL_InitTick+0x58>)
 8001f6e:	781b      	ldrb	r3, [r3, #0]
 8001f70:	4619      	mov	r1, r3
 8001f72:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001f76:	fbb3 f3f1 	udiv	r3, r3, r1
 8001f7a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f7e:	4618      	mov	r0, r3
 8001f80:	f000 f93b 	bl	80021fa <HAL_SYSTICK_Config>
 8001f84:	4603      	mov	r3, r0
 8001f86:	2b00      	cmp	r3, #0
 8001f88:	d001      	beq.n	8001f8e <HAL_InitTick+0x2e>
 8001f8a:	2301      	movs	r3, #1
 8001f8c:	e00e      	b.n	8001fac <HAL_InitTick+0x4c>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	2b0f      	cmp	r3, #15
 8001f92:	d80a      	bhi.n	8001faa <HAL_InitTick+0x4a>
 8001f94:	2200      	movs	r2, #0
 8001f96:	6879      	ldr	r1, [r7, #4]
 8001f98:	f04f 30ff 	mov.w	r0, #4294967295
 8001f9c:	f000 f903 	bl	80021a6 <HAL_NVIC_SetPriority>
 8001fa0:	4a06      	ldr	r2, [pc, #24]	@ (8001fbc <HAL_InitTick+0x5c>)
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	6013      	str	r3, [r2, #0]
 8001fa6:	2300      	movs	r3, #0
 8001fa8:	e000      	b.n	8001fac <HAL_InitTick+0x4c>
 8001faa:	2301      	movs	r3, #1
 8001fac:	4618      	mov	r0, r3
 8001fae:	3708      	adds	r7, #8
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	bd80      	pop	{r7, pc}
 8001fb4:	20000094 	.word	0x20000094
 8001fb8:	2000009c 	.word	0x2000009c
 8001fbc:	20000098 	.word	0x20000098

08001fc0 <HAL_IncTick>:
 8001fc0:	b480      	push	{r7}
 8001fc2:	af00      	add	r7, sp, #0
 8001fc4:	4b05      	ldr	r3, [pc, #20]	@ (8001fdc <HAL_IncTick+0x1c>)
 8001fc6:	781b      	ldrb	r3, [r3, #0]
 8001fc8:	461a      	mov	r2, r3
 8001fca:	4b05      	ldr	r3, [pc, #20]	@ (8001fe0 <HAL_IncTick+0x20>)
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	4413      	add	r3, r2
 8001fd0:	4a03      	ldr	r2, [pc, #12]	@ (8001fe0 <HAL_IncTick+0x20>)
 8001fd2:	6013      	str	r3, [r2, #0]
 8001fd4:	bf00      	nop
 8001fd6:	46bd      	mov	sp, r7
 8001fd8:	bc80      	pop	{r7}
 8001fda:	4770      	bx	lr
 8001fdc:	2000009c 	.word	0x2000009c
 8001fe0:	20000174 	.word	0x20000174

08001fe4 <HAL_GetTick>:
 8001fe4:	b480      	push	{r7}
 8001fe6:	af00      	add	r7, sp, #0
 8001fe8:	4b02      	ldr	r3, [pc, #8]	@ (8001ff4 <HAL_GetTick+0x10>)
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	4618      	mov	r0, r3
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bc80      	pop	{r7}
 8001ff2:	4770      	bx	lr
 8001ff4:	20000174 	.word	0x20000174

08001ff8 <__NVIC_SetPriorityGrouping>:
 8001ff8:	b480      	push	{r7}
 8001ffa:	b085      	sub	sp, #20
 8001ffc:	af00      	add	r7, sp, #0
 8001ffe:	6078      	str	r0, [r7, #4]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	f003 0307 	and.w	r3, r3, #7
 8002006:	60fb      	str	r3, [r7, #12]
 8002008:	4b0c      	ldr	r3, [pc, #48]	@ (800203c <__NVIC_SetPriorityGrouping+0x44>)
 800200a:	68db      	ldr	r3, [r3, #12]
 800200c:	60bb      	str	r3, [r7, #8]
 800200e:	68ba      	ldr	r2, [r7, #8]
 8002010:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002014:	4013      	ands	r3, r2
 8002016:	60bb      	str	r3, [r7, #8]
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	021a      	lsls	r2, r3, #8
 800201c:	68bb      	ldr	r3, [r7, #8]
 800201e:	4313      	orrs	r3, r2
 8002020:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002024:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002028:	60bb      	str	r3, [r7, #8]
 800202a:	4a04      	ldr	r2, [pc, #16]	@ (800203c <__NVIC_SetPriorityGrouping+0x44>)
 800202c:	68bb      	ldr	r3, [r7, #8]
 800202e:	60d3      	str	r3, [r2, #12]
 8002030:	bf00      	nop
 8002032:	3714      	adds	r7, #20
 8002034:	46bd      	mov	sp, r7
 8002036:	bc80      	pop	{r7}
 8002038:	4770      	bx	lr
 800203a:	bf00      	nop
 800203c:	e000ed00 	.word	0xe000ed00

08002040 <__NVIC_GetPriorityGrouping>:
 8002040:	b480      	push	{r7}
 8002042:	af00      	add	r7, sp, #0
 8002044:	4b04      	ldr	r3, [pc, #16]	@ (8002058 <__NVIC_GetPriorityGrouping+0x18>)
 8002046:	68db      	ldr	r3, [r3, #12]
 8002048:	0a1b      	lsrs	r3, r3, #8
 800204a:	f003 0307 	and.w	r3, r3, #7
 800204e:	4618      	mov	r0, r3
 8002050:	46bd      	mov	sp, r7
 8002052:	bc80      	pop	{r7}
 8002054:	4770      	bx	lr
 8002056:	bf00      	nop
 8002058:	e000ed00 	.word	0xe000ed00

0800205c <__NVIC_EnableIRQ>:
 800205c:	b480      	push	{r7}
 800205e:	b083      	sub	sp, #12
 8002060:	af00      	add	r7, sp, #0
 8002062:	4603      	mov	r3, r0
 8002064:	71fb      	strb	r3, [r7, #7]
 8002066:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800206a:	2b00      	cmp	r3, #0
 800206c:	db0b      	blt.n	8002086 <__NVIC_EnableIRQ+0x2a>
 800206e:	79fb      	ldrb	r3, [r7, #7]
 8002070:	f003 021f 	and.w	r2, r3, #31
 8002074:	4906      	ldr	r1, [pc, #24]	@ (8002090 <__NVIC_EnableIRQ+0x34>)
 8002076:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800207a:	095b      	lsrs	r3, r3, #5
 800207c:	2001      	movs	r0, #1
 800207e:	fa00 f202 	lsl.w	r2, r0, r2
 8002082:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002086:	bf00      	nop
 8002088:	370c      	adds	r7, #12
 800208a:	46bd      	mov	sp, r7
 800208c:	bc80      	pop	{r7}
 800208e:	4770      	bx	lr
 8002090:	e000e100 	.word	0xe000e100

08002094 <__NVIC_SetPriority>:
 8002094:	b480      	push	{r7}
 8002096:	b083      	sub	sp, #12
 8002098:	af00      	add	r7, sp, #0
 800209a:	4603      	mov	r3, r0
 800209c:	6039      	str	r1, [r7, #0]
 800209e:	71fb      	strb	r3, [r7, #7]
 80020a0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	db0a      	blt.n	80020be <__NVIC_SetPriority+0x2a>
 80020a8:	683b      	ldr	r3, [r7, #0]
 80020aa:	b2da      	uxtb	r2, r3
 80020ac:	490c      	ldr	r1, [pc, #48]	@ (80020e0 <__NVIC_SetPriority+0x4c>)
 80020ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020b2:	0112      	lsls	r2, r2, #4
 80020b4:	b2d2      	uxtb	r2, r2
 80020b6:	440b      	add	r3, r1
 80020b8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80020bc:	e00a      	b.n	80020d4 <__NVIC_SetPriority+0x40>
 80020be:	683b      	ldr	r3, [r7, #0]
 80020c0:	b2da      	uxtb	r2, r3
 80020c2:	4908      	ldr	r1, [pc, #32]	@ (80020e4 <__NVIC_SetPriority+0x50>)
 80020c4:	79fb      	ldrb	r3, [r7, #7]
 80020c6:	f003 030f 	and.w	r3, r3, #15
 80020ca:	3b04      	subs	r3, #4
 80020cc:	0112      	lsls	r2, r2, #4
 80020ce:	b2d2      	uxtb	r2, r2
 80020d0:	440b      	add	r3, r1
 80020d2:	761a      	strb	r2, [r3, #24]
 80020d4:	bf00      	nop
 80020d6:	370c      	adds	r7, #12
 80020d8:	46bd      	mov	sp, r7
 80020da:	bc80      	pop	{r7}
 80020dc:	4770      	bx	lr
 80020de:	bf00      	nop
 80020e0:	e000e100 	.word	0xe000e100
 80020e4:	e000ed00 	.word	0xe000ed00

080020e8 <NVIC_EncodePriority>:
 80020e8:	b480      	push	{r7}
 80020ea:	b089      	sub	sp, #36	@ 0x24
 80020ec:	af00      	add	r7, sp, #0
 80020ee:	60f8      	str	r0, [r7, #12]
 80020f0:	60b9      	str	r1, [r7, #8]
 80020f2:	607a      	str	r2, [r7, #4]
 80020f4:	68fb      	ldr	r3, [r7, #12]
 80020f6:	f003 0307 	and.w	r3, r3, #7
 80020fa:	61fb      	str	r3, [r7, #28]
 80020fc:	69fb      	ldr	r3, [r7, #28]
 80020fe:	f1c3 0307 	rsb	r3, r3, #7
 8002102:	2b04      	cmp	r3, #4
 8002104:	bf28      	it	cs
 8002106:	2304      	movcs	r3, #4
 8002108:	61bb      	str	r3, [r7, #24]
 800210a:	69fb      	ldr	r3, [r7, #28]
 800210c:	3304      	adds	r3, #4
 800210e:	2b06      	cmp	r3, #6
 8002110:	d902      	bls.n	8002118 <NVIC_EncodePriority+0x30>
 8002112:	69fb      	ldr	r3, [r7, #28]
 8002114:	3b03      	subs	r3, #3
 8002116:	e000      	b.n	800211a <NVIC_EncodePriority+0x32>
 8002118:	2300      	movs	r3, #0
 800211a:	617b      	str	r3, [r7, #20]
 800211c:	f04f 32ff 	mov.w	r2, #4294967295
 8002120:	69bb      	ldr	r3, [r7, #24]
 8002122:	fa02 f303 	lsl.w	r3, r2, r3
 8002126:	43da      	mvns	r2, r3
 8002128:	68bb      	ldr	r3, [r7, #8]
 800212a:	401a      	ands	r2, r3
 800212c:	697b      	ldr	r3, [r7, #20]
 800212e:	409a      	lsls	r2, r3
 8002130:	f04f 31ff 	mov.w	r1, #4294967295
 8002134:	697b      	ldr	r3, [r7, #20]
 8002136:	fa01 f303 	lsl.w	r3, r1, r3
 800213a:	43d9      	mvns	r1, r3
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	400b      	ands	r3, r1
 8002140:	4313      	orrs	r3, r2
 8002142:	4618      	mov	r0, r3
 8002144:	3724      	adds	r7, #36	@ 0x24
 8002146:	46bd      	mov	sp, r7
 8002148:	bc80      	pop	{r7}
 800214a:	4770      	bx	lr

0800214c <SysTick_Config>:
 800214c:	b580      	push	{r7, lr}
 800214e:	b082      	sub	sp, #8
 8002150:	af00      	add	r7, sp, #0
 8002152:	6078      	str	r0, [r7, #4]
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	3b01      	subs	r3, #1
 8002158:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800215c:	d301      	bcc.n	8002162 <SysTick_Config+0x16>
 800215e:	2301      	movs	r3, #1
 8002160:	e00f      	b.n	8002182 <SysTick_Config+0x36>
 8002162:	4a0a      	ldr	r2, [pc, #40]	@ (800218c <SysTick_Config+0x40>)
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	3b01      	subs	r3, #1
 8002168:	6053      	str	r3, [r2, #4]
 800216a:	210f      	movs	r1, #15
 800216c:	f04f 30ff 	mov.w	r0, #4294967295
 8002170:	f7ff ff90 	bl	8002094 <__NVIC_SetPriority>
 8002174:	4b05      	ldr	r3, [pc, #20]	@ (800218c <SysTick_Config+0x40>)
 8002176:	2200      	movs	r2, #0
 8002178:	609a      	str	r2, [r3, #8]
 800217a:	4b04      	ldr	r3, [pc, #16]	@ (800218c <SysTick_Config+0x40>)
 800217c:	2207      	movs	r2, #7
 800217e:	601a      	str	r2, [r3, #0]
 8002180:	2300      	movs	r3, #0
 8002182:	4618      	mov	r0, r3
 8002184:	3708      	adds	r7, #8
 8002186:	46bd      	mov	sp, r7
 8002188:	bd80      	pop	{r7, pc}
 800218a:	bf00      	nop
 800218c:	e000e010 	.word	0xe000e010

08002190 <HAL_NVIC_SetPriorityGrouping>:
 8002190:	b580      	push	{r7, lr}
 8002192:	b082      	sub	sp, #8
 8002194:	af00      	add	r7, sp, #0
 8002196:	6078      	str	r0, [r7, #4]
 8002198:	6878      	ldr	r0, [r7, #4]
 800219a:	f7ff ff2d 	bl	8001ff8 <__NVIC_SetPriorityGrouping>
 800219e:	bf00      	nop
 80021a0:	3708      	adds	r7, #8
 80021a2:	46bd      	mov	sp, r7
 80021a4:	bd80      	pop	{r7, pc}

080021a6 <HAL_NVIC_SetPriority>:
 80021a6:	b580      	push	{r7, lr}
 80021a8:	b086      	sub	sp, #24
 80021aa:	af00      	add	r7, sp, #0
 80021ac:	4603      	mov	r3, r0
 80021ae:	60b9      	str	r1, [r7, #8]
 80021b0:	607a      	str	r2, [r7, #4]
 80021b2:	73fb      	strb	r3, [r7, #15]
 80021b4:	2300      	movs	r3, #0
 80021b6:	617b      	str	r3, [r7, #20]
 80021b8:	f7ff ff42 	bl	8002040 <__NVIC_GetPriorityGrouping>
 80021bc:	6178      	str	r0, [r7, #20]
 80021be:	687a      	ldr	r2, [r7, #4]
 80021c0:	68b9      	ldr	r1, [r7, #8]
 80021c2:	6978      	ldr	r0, [r7, #20]
 80021c4:	f7ff ff90 	bl	80020e8 <NVIC_EncodePriority>
 80021c8:	4602      	mov	r2, r0
 80021ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80021ce:	4611      	mov	r1, r2
 80021d0:	4618      	mov	r0, r3
 80021d2:	f7ff ff5f 	bl	8002094 <__NVIC_SetPriority>
 80021d6:	bf00      	nop
 80021d8:	3718      	adds	r7, #24
 80021da:	46bd      	mov	sp, r7
 80021dc:	bd80      	pop	{r7, pc}

080021de <HAL_NVIC_EnableIRQ>:
 80021de:	b580      	push	{r7, lr}
 80021e0:	b082      	sub	sp, #8
 80021e2:	af00      	add	r7, sp, #0
 80021e4:	4603      	mov	r3, r0
 80021e6:	71fb      	strb	r3, [r7, #7]
 80021e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021ec:	4618      	mov	r0, r3
 80021ee:	f7ff ff35 	bl	800205c <__NVIC_EnableIRQ>
 80021f2:	bf00      	nop
 80021f4:	3708      	adds	r7, #8
 80021f6:	46bd      	mov	sp, r7
 80021f8:	bd80      	pop	{r7, pc}

080021fa <HAL_SYSTICK_Config>:
 80021fa:	b580      	push	{r7, lr}
 80021fc:	b082      	sub	sp, #8
 80021fe:	af00      	add	r7, sp, #0
 8002200:	6078      	str	r0, [r7, #4]
 8002202:	6878      	ldr	r0, [r7, #4]
 8002204:	f7ff ffa2 	bl	800214c <SysTick_Config>
 8002208:	4603      	mov	r3, r0
 800220a:	4618      	mov	r0, r3
 800220c:	3708      	adds	r7, #8
 800220e:	46bd      	mov	sp, r7
 8002210:	bd80      	pop	{r7, pc}
	...

08002214 <HAL_GPIO_Init>:
 8002214:	b480      	push	{r7}
 8002216:	b08b      	sub	sp, #44	@ 0x2c
 8002218:	af00      	add	r7, sp, #0
 800221a:	6078      	str	r0, [r7, #4]
 800221c:	6039      	str	r1, [r7, #0]
 800221e:	2300      	movs	r3, #0
 8002220:	627b      	str	r3, [r7, #36]	@ 0x24
 8002222:	2300      	movs	r3, #0
 8002224:	623b      	str	r3, [r7, #32]
 8002226:	e161      	b.n	80024ec <HAL_GPIO_Init+0x2d8>
 8002228:	2201      	movs	r2, #1
 800222a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800222c:	fa02 f303 	lsl.w	r3, r2, r3
 8002230:	61fb      	str	r3, [r7, #28]
 8002232:	683b      	ldr	r3, [r7, #0]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	69fa      	ldr	r2, [r7, #28]
 8002238:	4013      	ands	r3, r2
 800223a:	61bb      	str	r3, [r7, #24]
 800223c:	69ba      	ldr	r2, [r7, #24]
 800223e:	69fb      	ldr	r3, [r7, #28]
 8002240:	429a      	cmp	r2, r3
 8002242:	f040 8150 	bne.w	80024e6 <HAL_GPIO_Init+0x2d2>
 8002246:	683b      	ldr	r3, [r7, #0]
 8002248:	685b      	ldr	r3, [r3, #4]
 800224a:	4a97      	ldr	r2, [pc, #604]	@ (80024a8 <HAL_GPIO_Init+0x294>)
 800224c:	4293      	cmp	r3, r2
 800224e:	d05e      	beq.n	800230e <HAL_GPIO_Init+0xfa>
 8002250:	4a95      	ldr	r2, [pc, #596]	@ (80024a8 <HAL_GPIO_Init+0x294>)
 8002252:	4293      	cmp	r3, r2
 8002254:	d875      	bhi.n	8002342 <HAL_GPIO_Init+0x12e>
 8002256:	4a95      	ldr	r2, [pc, #596]	@ (80024ac <HAL_GPIO_Init+0x298>)
 8002258:	4293      	cmp	r3, r2
 800225a:	d058      	beq.n	800230e <HAL_GPIO_Init+0xfa>
 800225c:	4a93      	ldr	r2, [pc, #588]	@ (80024ac <HAL_GPIO_Init+0x298>)
 800225e:	4293      	cmp	r3, r2
 8002260:	d86f      	bhi.n	8002342 <HAL_GPIO_Init+0x12e>
 8002262:	4a93      	ldr	r2, [pc, #588]	@ (80024b0 <HAL_GPIO_Init+0x29c>)
 8002264:	4293      	cmp	r3, r2
 8002266:	d052      	beq.n	800230e <HAL_GPIO_Init+0xfa>
 8002268:	4a91      	ldr	r2, [pc, #580]	@ (80024b0 <HAL_GPIO_Init+0x29c>)
 800226a:	4293      	cmp	r3, r2
 800226c:	d869      	bhi.n	8002342 <HAL_GPIO_Init+0x12e>
 800226e:	4a91      	ldr	r2, [pc, #580]	@ (80024b4 <HAL_GPIO_Init+0x2a0>)
 8002270:	4293      	cmp	r3, r2
 8002272:	d04c      	beq.n	800230e <HAL_GPIO_Init+0xfa>
 8002274:	4a8f      	ldr	r2, [pc, #572]	@ (80024b4 <HAL_GPIO_Init+0x2a0>)
 8002276:	4293      	cmp	r3, r2
 8002278:	d863      	bhi.n	8002342 <HAL_GPIO_Init+0x12e>
 800227a:	4a8f      	ldr	r2, [pc, #572]	@ (80024b8 <HAL_GPIO_Init+0x2a4>)
 800227c:	4293      	cmp	r3, r2
 800227e:	d046      	beq.n	800230e <HAL_GPIO_Init+0xfa>
 8002280:	4a8d      	ldr	r2, [pc, #564]	@ (80024b8 <HAL_GPIO_Init+0x2a4>)
 8002282:	4293      	cmp	r3, r2
 8002284:	d85d      	bhi.n	8002342 <HAL_GPIO_Init+0x12e>
 8002286:	2b12      	cmp	r3, #18
 8002288:	d82a      	bhi.n	80022e0 <HAL_GPIO_Init+0xcc>
 800228a:	2b12      	cmp	r3, #18
 800228c:	d859      	bhi.n	8002342 <HAL_GPIO_Init+0x12e>
 800228e:	a201      	add	r2, pc, #4	@ (adr r2, 8002294 <HAL_GPIO_Init+0x80>)
 8002290:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002294:	0800230f 	.word	0x0800230f
 8002298:	080022e9 	.word	0x080022e9
 800229c:	080022fb 	.word	0x080022fb
 80022a0:	0800233d 	.word	0x0800233d
 80022a4:	08002343 	.word	0x08002343
 80022a8:	08002343 	.word	0x08002343
 80022ac:	08002343 	.word	0x08002343
 80022b0:	08002343 	.word	0x08002343
 80022b4:	08002343 	.word	0x08002343
 80022b8:	08002343 	.word	0x08002343
 80022bc:	08002343 	.word	0x08002343
 80022c0:	08002343 	.word	0x08002343
 80022c4:	08002343 	.word	0x08002343
 80022c8:	08002343 	.word	0x08002343
 80022cc:	08002343 	.word	0x08002343
 80022d0:	08002343 	.word	0x08002343
 80022d4:	08002343 	.word	0x08002343
 80022d8:	080022f1 	.word	0x080022f1
 80022dc:	08002305 	.word	0x08002305
 80022e0:	4a76      	ldr	r2, [pc, #472]	@ (80024bc <HAL_GPIO_Init+0x2a8>)
 80022e2:	4293      	cmp	r3, r2
 80022e4:	d013      	beq.n	800230e <HAL_GPIO_Init+0xfa>
 80022e6:	e02c      	b.n	8002342 <HAL_GPIO_Init+0x12e>
 80022e8:	683b      	ldr	r3, [r7, #0]
 80022ea:	68db      	ldr	r3, [r3, #12]
 80022ec:	623b      	str	r3, [r7, #32]
 80022ee:	e029      	b.n	8002344 <HAL_GPIO_Init+0x130>
 80022f0:	683b      	ldr	r3, [r7, #0]
 80022f2:	68db      	ldr	r3, [r3, #12]
 80022f4:	3304      	adds	r3, #4
 80022f6:	623b      	str	r3, [r7, #32]
 80022f8:	e024      	b.n	8002344 <HAL_GPIO_Init+0x130>
 80022fa:	683b      	ldr	r3, [r7, #0]
 80022fc:	68db      	ldr	r3, [r3, #12]
 80022fe:	3308      	adds	r3, #8
 8002300:	623b      	str	r3, [r7, #32]
 8002302:	e01f      	b.n	8002344 <HAL_GPIO_Init+0x130>
 8002304:	683b      	ldr	r3, [r7, #0]
 8002306:	68db      	ldr	r3, [r3, #12]
 8002308:	330c      	adds	r3, #12
 800230a:	623b      	str	r3, [r7, #32]
 800230c:	e01a      	b.n	8002344 <HAL_GPIO_Init+0x130>
 800230e:	683b      	ldr	r3, [r7, #0]
 8002310:	689b      	ldr	r3, [r3, #8]
 8002312:	2b00      	cmp	r3, #0
 8002314:	d102      	bne.n	800231c <HAL_GPIO_Init+0x108>
 8002316:	2304      	movs	r3, #4
 8002318:	623b      	str	r3, [r7, #32]
 800231a:	e013      	b.n	8002344 <HAL_GPIO_Init+0x130>
 800231c:	683b      	ldr	r3, [r7, #0]
 800231e:	689b      	ldr	r3, [r3, #8]
 8002320:	2b01      	cmp	r3, #1
 8002322:	d105      	bne.n	8002330 <HAL_GPIO_Init+0x11c>
 8002324:	2308      	movs	r3, #8
 8002326:	623b      	str	r3, [r7, #32]
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	69fa      	ldr	r2, [r7, #28]
 800232c:	611a      	str	r2, [r3, #16]
 800232e:	e009      	b.n	8002344 <HAL_GPIO_Init+0x130>
 8002330:	2308      	movs	r3, #8
 8002332:	623b      	str	r3, [r7, #32]
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	69fa      	ldr	r2, [r7, #28]
 8002338:	615a      	str	r2, [r3, #20]
 800233a:	e003      	b.n	8002344 <HAL_GPIO_Init+0x130>
 800233c:	2300      	movs	r3, #0
 800233e:	623b      	str	r3, [r7, #32]
 8002340:	e000      	b.n	8002344 <HAL_GPIO_Init+0x130>
 8002342:	bf00      	nop
 8002344:	69bb      	ldr	r3, [r7, #24]
 8002346:	2bff      	cmp	r3, #255	@ 0xff
 8002348:	d801      	bhi.n	800234e <HAL_GPIO_Init+0x13a>
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	e001      	b.n	8002352 <HAL_GPIO_Init+0x13e>
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	3304      	adds	r3, #4
 8002352:	617b      	str	r3, [r7, #20]
 8002354:	69bb      	ldr	r3, [r7, #24]
 8002356:	2bff      	cmp	r3, #255	@ 0xff
 8002358:	d802      	bhi.n	8002360 <HAL_GPIO_Init+0x14c>
 800235a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800235c:	009b      	lsls	r3, r3, #2
 800235e:	e002      	b.n	8002366 <HAL_GPIO_Init+0x152>
 8002360:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002362:	3b08      	subs	r3, #8
 8002364:	009b      	lsls	r3, r3, #2
 8002366:	613b      	str	r3, [r7, #16]
 8002368:	697b      	ldr	r3, [r7, #20]
 800236a:	681a      	ldr	r2, [r3, #0]
 800236c:	210f      	movs	r1, #15
 800236e:	693b      	ldr	r3, [r7, #16]
 8002370:	fa01 f303 	lsl.w	r3, r1, r3
 8002374:	43db      	mvns	r3, r3
 8002376:	401a      	ands	r2, r3
 8002378:	6a39      	ldr	r1, [r7, #32]
 800237a:	693b      	ldr	r3, [r7, #16]
 800237c:	fa01 f303 	lsl.w	r3, r1, r3
 8002380:	431a      	orrs	r2, r3
 8002382:	697b      	ldr	r3, [r7, #20]
 8002384:	601a      	str	r2, [r3, #0]
 8002386:	683b      	ldr	r3, [r7, #0]
 8002388:	685b      	ldr	r3, [r3, #4]
 800238a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800238e:	2b00      	cmp	r3, #0
 8002390:	f000 80a9 	beq.w	80024e6 <HAL_GPIO_Init+0x2d2>
 8002394:	4b4a      	ldr	r3, [pc, #296]	@ (80024c0 <HAL_GPIO_Init+0x2ac>)
 8002396:	699b      	ldr	r3, [r3, #24]
 8002398:	4a49      	ldr	r2, [pc, #292]	@ (80024c0 <HAL_GPIO_Init+0x2ac>)
 800239a:	f043 0301 	orr.w	r3, r3, #1
 800239e:	6193      	str	r3, [r2, #24]
 80023a0:	4b47      	ldr	r3, [pc, #284]	@ (80024c0 <HAL_GPIO_Init+0x2ac>)
 80023a2:	699b      	ldr	r3, [r3, #24]
 80023a4:	f003 0301 	and.w	r3, r3, #1
 80023a8:	60bb      	str	r3, [r7, #8]
 80023aa:	68bb      	ldr	r3, [r7, #8]
 80023ac:	4a45      	ldr	r2, [pc, #276]	@ (80024c4 <HAL_GPIO_Init+0x2b0>)
 80023ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80023b0:	089b      	lsrs	r3, r3, #2
 80023b2:	3302      	adds	r3, #2
 80023b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80023b8:	60fb      	str	r3, [r7, #12]
 80023ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80023bc:	f003 0303 	and.w	r3, r3, #3
 80023c0:	009b      	lsls	r3, r3, #2
 80023c2:	220f      	movs	r2, #15
 80023c4:	fa02 f303 	lsl.w	r3, r2, r3
 80023c8:	43db      	mvns	r3, r3
 80023ca:	68fa      	ldr	r2, [r7, #12]
 80023cc:	4013      	ands	r3, r2
 80023ce:	60fb      	str	r3, [r7, #12]
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	4a3d      	ldr	r2, [pc, #244]	@ (80024c8 <HAL_GPIO_Init+0x2b4>)
 80023d4:	4293      	cmp	r3, r2
 80023d6:	d00d      	beq.n	80023f4 <HAL_GPIO_Init+0x1e0>
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	4a3c      	ldr	r2, [pc, #240]	@ (80024cc <HAL_GPIO_Init+0x2b8>)
 80023dc:	4293      	cmp	r3, r2
 80023de:	d007      	beq.n	80023f0 <HAL_GPIO_Init+0x1dc>
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	4a3b      	ldr	r2, [pc, #236]	@ (80024d0 <HAL_GPIO_Init+0x2bc>)
 80023e4:	4293      	cmp	r3, r2
 80023e6:	d101      	bne.n	80023ec <HAL_GPIO_Init+0x1d8>
 80023e8:	2302      	movs	r3, #2
 80023ea:	e004      	b.n	80023f6 <HAL_GPIO_Init+0x1e2>
 80023ec:	2303      	movs	r3, #3
 80023ee:	e002      	b.n	80023f6 <HAL_GPIO_Init+0x1e2>
 80023f0:	2301      	movs	r3, #1
 80023f2:	e000      	b.n	80023f6 <HAL_GPIO_Init+0x1e2>
 80023f4:	2300      	movs	r3, #0
 80023f6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80023f8:	f002 0203 	and.w	r2, r2, #3
 80023fc:	0092      	lsls	r2, r2, #2
 80023fe:	4093      	lsls	r3, r2
 8002400:	68fa      	ldr	r2, [r7, #12]
 8002402:	4313      	orrs	r3, r2
 8002404:	60fb      	str	r3, [r7, #12]
 8002406:	492f      	ldr	r1, [pc, #188]	@ (80024c4 <HAL_GPIO_Init+0x2b0>)
 8002408:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800240a:	089b      	lsrs	r3, r3, #2
 800240c:	3302      	adds	r3, #2
 800240e:	68fa      	ldr	r2, [r7, #12]
 8002410:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002414:	683b      	ldr	r3, [r7, #0]
 8002416:	685b      	ldr	r3, [r3, #4]
 8002418:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800241c:	2b00      	cmp	r3, #0
 800241e:	d006      	beq.n	800242e <HAL_GPIO_Init+0x21a>
 8002420:	4b2c      	ldr	r3, [pc, #176]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002422:	689a      	ldr	r2, [r3, #8]
 8002424:	492b      	ldr	r1, [pc, #172]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002426:	69bb      	ldr	r3, [r7, #24]
 8002428:	4313      	orrs	r3, r2
 800242a:	608b      	str	r3, [r1, #8]
 800242c:	e006      	b.n	800243c <HAL_GPIO_Init+0x228>
 800242e:	4b29      	ldr	r3, [pc, #164]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002430:	689a      	ldr	r2, [r3, #8]
 8002432:	69bb      	ldr	r3, [r7, #24]
 8002434:	43db      	mvns	r3, r3
 8002436:	4927      	ldr	r1, [pc, #156]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002438:	4013      	ands	r3, r2
 800243a:	608b      	str	r3, [r1, #8]
 800243c:	683b      	ldr	r3, [r7, #0]
 800243e:	685b      	ldr	r3, [r3, #4]
 8002440:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002444:	2b00      	cmp	r3, #0
 8002446:	d006      	beq.n	8002456 <HAL_GPIO_Init+0x242>
 8002448:	4b22      	ldr	r3, [pc, #136]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 800244a:	68da      	ldr	r2, [r3, #12]
 800244c:	4921      	ldr	r1, [pc, #132]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 800244e:	69bb      	ldr	r3, [r7, #24]
 8002450:	4313      	orrs	r3, r2
 8002452:	60cb      	str	r3, [r1, #12]
 8002454:	e006      	b.n	8002464 <HAL_GPIO_Init+0x250>
 8002456:	4b1f      	ldr	r3, [pc, #124]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002458:	68da      	ldr	r2, [r3, #12]
 800245a:	69bb      	ldr	r3, [r7, #24]
 800245c:	43db      	mvns	r3, r3
 800245e:	491d      	ldr	r1, [pc, #116]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002460:	4013      	ands	r3, r2
 8002462:	60cb      	str	r3, [r1, #12]
 8002464:	683b      	ldr	r3, [r7, #0]
 8002466:	685b      	ldr	r3, [r3, #4]
 8002468:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800246c:	2b00      	cmp	r3, #0
 800246e:	d006      	beq.n	800247e <HAL_GPIO_Init+0x26a>
 8002470:	4b18      	ldr	r3, [pc, #96]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002472:	685a      	ldr	r2, [r3, #4]
 8002474:	4917      	ldr	r1, [pc, #92]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002476:	69bb      	ldr	r3, [r7, #24]
 8002478:	4313      	orrs	r3, r2
 800247a:	604b      	str	r3, [r1, #4]
 800247c:	e006      	b.n	800248c <HAL_GPIO_Init+0x278>
 800247e:	4b15      	ldr	r3, [pc, #84]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002480:	685a      	ldr	r2, [r3, #4]
 8002482:	69bb      	ldr	r3, [r7, #24]
 8002484:	43db      	mvns	r3, r3
 8002486:	4913      	ldr	r1, [pc, #76]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 8002488:	4013      	ands	r3, r2
 800248a:	604b      	str	r3, [r1, #4]
 800248c:	683b      	ldr	r3, [r7, #0]
 800248e:	685b      	ldr	r3, [r3, #4]
 8002490:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002494:	2b00      	cmp	r3, #0
 8002496:	d01f      	beq.n	80024d8 <HAL_GPIO_Init+0x2c4>
 8002498:	4b0e      	ldr	r3, [pc, #56]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 800249a:	681a      	ldr	r2, [r3, #0]
 800249c:	490d      	ldr	r1, [pc, #52]	@ (80024d4 <HAL_GPIO_Init+0x2c0>)
 800249e:	69bb      	ldr	r3, [r7, #24]
 80024a0:	4313      	orrs	r3, r2
 80024a2:	600b      	str	r3, [r1, #0]
 80024a4:	e01f      	b.n	80024e6 <HAL_GPIO_Init+0x2d2>
 80024a6:	bf00      	nop
 80024a8:	10320000 	.word	0x10320000
 80024ac:	10310000 	.word	0x10310000
 80024b0:	10220000 	.word	0x10220000
 80024b4:	10210000 	.word	0x10210000
 80024b8:	10120000 	.word	0x10120000
 80024bc:	10110000 	.word	0x10110000
 80024c0:	40021000 	.word	0x40021000
 80024c4:	40010000 	.word	0x40010000
 80024c8:	40010800 	.word	0x40010800
 80024cc:	40010c00 	.word	0x40010c00
 80024d0:	40011000 	.word	0x40011000
 80024d4:	40010400 	.word	0x40010400
 80024d8:	4b0b      	ldr	r3, [pc, #44]	@ (8002508 <HAL_GPIO_Init+0x2f4>)
 80024da:	681a      	ldr	r2, [r3, #0]
 80024dc:	69bb      	ldr	r3, [r7, #24]
 80024de:	43db      	mvns	r3, r3
 80024e0:	4909      	ldr	r1, [pc, #36]	@ (8002508 <HAL_GPIO_Init+0x2f4>)
 80024e2:	4013      	ands	r3, r2
 80024e4:	600b      	str	r3, [r1, #0]
 80024e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80024e8:	3301      	adds	r3, #1
 80024ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80024ec:	683b      	ldr	r3, [r7, #0]
 80024ee:	681a      	ldr	r2, [r3, #0]
 80024f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80024f2:	fa22 f303 	lsr.w	r3, r2, r3
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	f47f ae96 	bne.w	8002228 <HAL_GPIO_Init+0x14>
 80024fc:	bf00      	nop
 80024fe:	bf00      	nop
 8002500:	372c      	adds	r7, #44	@ 0x2c
 8002502:	46bd      	mov	sp, r7
 8002504:	bc80      	pop	{r7}
 8002506:	4770      	bx	lr
 8002508:	40010400 	.word	0x40010400

0800250c <HAL_GPIO_ReadPin>:
 800250c:	b480      	push	{r7}
 800250e:	b085      	sub	sp, #20
 8002510:	af00      	add	r7, sp, #0
 8002512:	6078      	str	r0, [r7, #4]
 8002514:	460b      	mov	r3, r1
 8002516:	807b      	strh	r3, [r7, #2]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	689a      	ldr	r2, [r3, #8]
 800251c:	887b      	ldrh	r3, [r7, #2]
 800251e:	4013      	ands	r3, r2
 8002520:	2b00      	cmp	r3, #0
 8002522:	d002      	beq.n	800252a <HAL_GPIO_ReadPin+0x1e>
 8002524:	2301      	movs	r3, #1
 8002526:	73fb      	strb	r3, [r7, #15]
 8002528:	e001      	b.n	800252e <HAL_GPIO_ReadPin+0x22>
 800252a:	2300      	movs	r3, #0
 800252c:	73fb      	strb	r3, [r7, #15]
 800252e:	7bfb      	ldrb	r3, [r7, #15]
 8002530:	4618      	mov	r0, r3
 8002532:	3714      	adds	r7, #20
 8002534:	46bd      	mov	sp, r7
 8002536:	bc80      	pop	{r7}
 8002538:	4770      	bx	lr

0800253a <HAL_GPIO_WritePin>:
 800253a:	b480      	push	{r7}
 800253c:	b083      	sub	sp, #12
 800253e:	af00      	add	r7, sp, #0
 8002540:	6078      	str	r0, [r7, #4]
 8002542:	460b      	mov	r3, r1
 8002544:	807b      	strh	r3, [r7, #2]
 8002546:	4613      	mov	r3, r2
 8002548:	707b      	strb	r3, [r7, #1]
 800254a:	787b      	ldrb	r3, [r7, #1]
 800254c:	2b00      	cmp	r3, #0
 800254e:	d003      	beq.n	8002558 <HAL_GPIO_WritePin+0x1e>
 8002550:	887a      	ldrh	r2, [r7, #2]
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	611a      	str	r2, [r3, #16]
 8002556:	e003      	b.n	8002560 <HAL_GPIO_WritePin+0x26>
 8002558:	887b      	ldrh	r3, [r7, #2]
 800255a:	041a      	lsls	r2, r3, #16
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	611a      	str	r2, [r3, #16]
 8002560:	bf00      	nop
 8002562:	370c      	adds	r7, #12
 8002564:	46bd      	mov	sp, r7
 8002566:	bc80      	pop	{r7}
 8002568:	4770      	bx	lr

0800256a <HAL_GPIO_TogglePin>:
 800256a:	b480      	push	{r7}
 800256c:	b085      	sub	sp, #20
 800256e:	af00      	add	r7, sp, #0
 8002570:	6078      	str	r0, [r7, #4]
 8002572:	460b      	mov	r3, r1
 8002574:	807b      	strh	r3, [r7, #2]
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	68db      	ldr	r3, [r3, #12]
 800257a:	60fb      	str	r3, [r7, #12]
 800257c:	887a      	ldrh	r2, [r7, #2]
 800257e:	68fb      	ldr	r3, [r7, #12]
 8002580:	4013      	ands	r3, r2
 8002582:	041a      	lsls	r2, r3, #16
 8002584:	68fb      	ldr	r3, [r7, #12]
 8002586:	43d9      	mvns	r1, r3
 8002588:	887b      	ldrh	r3, [r7, #2]
 800258a:	400b      	ands	r3, r1
 800258c:	431a      	orrs	r2, r3
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	611a      	str	r2, [r3, #16]
 8002592:	bf00      	nop
 8002594:	3714      	adds	r7, #20
 8002596:	46bd      	mov	sp, r7
 8002598:	bc80      	pop	{r7}
 800259a:	4770      	bx	lr

0800259c <HAL_RCC_OscConfig>:
 800259c:	b580      	push	{r7, lr}
 800259e:	b086      	sub	sp, #24
 80025a0:	af00      	add	r7, sp, #0
 80025a2:	6078      	str	r0, [r7, #4]
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	2b00      	cmp	r3, #0
 80025a8:	d101      	bne.n	80025ae <HAL_RCC_OscConfig+0x12>
 80025aa:	2301      	movs	r3, #1
 80025ac:	e272      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	f003 0301 	and.w	r3, r3, #1
 80025b6:	2b00      	cmp	r3, #0
 80025b8:	f000 8087 	beq.w	80026ca <HAL_RCC_OscConfig+0x12e>
 80025bc:	4b92      	ldr	r3, [pc, #584]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80025be:	685b      	ldr	r3, [r3, #4]
 80025c0:	f003 030c 	and.w	r3, r3, #12
 80025c4:	2b04      	cmp	r3, #4
 80025c6:	d00c      	beq.n	80025e2 <HAL_RCC_OscConfig+0x46>
 80025c8:	4b8f      	ldr	r3, [pc, #572]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80025ca:	685b      	ldr	r3, [r3, #4]
 80025cc:	f003 030c 	and.w	r3, r3, #12
 80025d0:	2b08      	cmp	r3, #8
 80025d2:	d112      	bne.n	80025fa <HAL_RCC_OscConfig+0x5e>
 80025d4:	4b8c      	ldr	r3, [pc, #560]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80025d6:	685b      	ldr	r3, [r3, #4]
 80025d8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80025dc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80025e0:	d10b      	bne.n	80025fa <HAL_RCC_OscConfig+0x5e>
 80025e2:	4b89      	ldr	r3, [pc, #548]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d06c      	beq.n	80026c8 <HAL_RCC_OscConfig+0x12c>
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	685b      	ldr	r3, [r3, #4]
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d168      	bne.n	80026c8 <HAL_RCC_OscConfig+0x12c>
 80025f6:	2301      	movs	r3, #1
 80025f8:	e24c      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	685b      	ldr	r3, [r3, #4]
 80025fe:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002602:	d106      	bne.n	8002612 <HAL_RCC_OscConfig+0x76>
 8002604:	4b80      	ldr	r3, [pc, #512]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	4a7f      	ldr	r2, [pc, #508]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800260a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800260e:	6013      	str	r3, [r2, #0]
 8002610:	e02e      	b.n	8002670 <HAL_RCC_OscConfig+0xd4>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	685b      	ldr	r3, [r3, #4]
 8002616:	2b00      	cmp	r3, #0
 8002618:	d10c      	bne.n	8002634 <HAL_RCC_OscConfig+0x98>
 800261a:	4b7b      	ldr	r3, [pc, #492]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	4a7a      	ldr	r2, [pc, #488]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002620:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002624:	6013      	str	r3, [r2, #0]
 8002626:	4b78      	ldr	r3, [pc, #480]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002628:	681b      	ldr	r3, [r3, #0]
 800262a:	4a77      	ldr	r2, [pc, #476]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800262c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002630:	6013      	str	r3, [r2, #0]
 8002632:	e01d      	b.n	8002670 <HAL_RCC_OscConfig+0xd4>
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	685b      	ldr	r3, [r3, #4]
 8002638:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800263c:	d10c      	bne.n	8002658 <HAL_RCC_OscConfig+0xbc>
 800263e:	4b72      	ldr	r3, [pc, #456]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	4a71      	ldr	r2, [pc, #452]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002644:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002648:	6013      	str	r3, [r2, #0]
 800264a:	4b6f      	ldr	r3, [pc, #444]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800264c:	681b      	ldr	r3, [r3, #0]
 800264e:	4a6e      	ldr	r2, [pc, #440]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002650:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002654:	6013      	str	r3, [r2, #0]
 8002656:	e00b      	b.n	8002670 <HAL_RCC_OscConfig+0xd4>
 8002658:	4b6b      	ldr	r3, [pc, #428]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	4a6a      	ldr	r2, [pc, #424]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800265e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002662:	6013      	str	r3, [r2, #0]
 8002664:	4b68      	ldr	r3, [pc, #416]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	4a67      	ldr	r2, [pc, #412]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800266a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800266e:	6013      	str	r3, [r2, #0]
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	685b      	ldr	r3, [r3, #4]
 8002674:	2b00      	cmp	r3, #0
 8002676:	d013      	beq.n	80026a0 <HAL_RCC_OscConfig+0x104>
 8002678:	f7ff fcb4 	bl	8001fe4 <HAL_GetTick>
 800267c:	6138      	str	r0, [r7, #16]
 800267e:	e008      	b.n	8002692 <HAL_RCC_OscConfig+0xf6>
 8002680:	f7ff fcb0 	bl	8001fe4 <HAL_GetTick>
 8002684:	4602      	mov	r2, r0
 8002686:	693b      	ldr	r3, [r7, #16]
 8002688:	1ad3      	subs	r3, r2, r3
 800268a:	2b64      	cmp	r3, #100	@ 0x64
 800268c:	d901      	bls.n	8002692 <HAL_RCC_OscConfig+0xf6>
 800268e:	2303      	movs	r3, #3
 8002690:	e200      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002692:	4b5d      	ldr	r3, [pc, #372]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800269a:	2b00      	cmp	r3, #0
 800269c:	d0f0      	beq.n	8002680 <HAL_RCC_OscConfig+0xe4>
 800269e:	e014      	b.n	80026ca <HAL_RCC_OscConfig+0x12e>
 80026a0:	f7ff fca0 	bl	8001fe4 <HAL_GetTick>
 80026a4:	6138      	str	r0, [r7, #16]
 80026a6:	e008      	b.n	80026ba <HAL_RCC_OscConfig+0x11e>
 80026a8:	f7ff fc9c 	bl	8001fe4 <HAL_GetTick>
 80026ac:	4602      	mov	r2, r0
 80026ae:	693b      	ldr	r3, [r7, #16]
 80026b0:	1ad3      	subs	r3, r2, r3
 80026b2:	2b64      	cmp	r3, #100	@ 0x64
 80026b4:	d901      	bls.n	80026ba <HAL_RCC_OscConfig+0x11e>
 80026b6:	2303      	movs	r3, #3
 80026b8:	e1ec      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 80026ba:	4b53      	ldr	r3, [pc, #332]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d1f0      	bne.n	80026a8 <HAL_RCC_OscConfig+0x10c>
 80026c6:	e000      	b.n	80026ca <HAL_RCC_OscConfig+0x12e>
 80026c8:	bf00      	nop
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	f003 0302 	and.w	r3, r3, #2
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	d063      	beq.n	800279e <HAL_RCC_OscConfig+0x202>
 80026d6:	4b4c      	ldr	r3, [pc, #304]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80026d8:	685b      	ldr	r3, [r3, #4]
 80026da:	f003 030c 	and.w	r3, r3, #12
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d00b      	beq.n	80026fa <HAL_RCC_OscConfig+0x15e>
 80026e2:	4b49      	ldr	r3, [pc, #292]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80026e4:	685b      	ldr	r3, [r3, #4]
 80026e6:	f003 030c 	and.w	r3, r3, #12
 80026ea:	2b08      	cmp	r3, #8
 80026ec:	d11c      	bne.n	8002728 <HAL_RCC_OscConfig+0x18c>
 80026ee:	4b46      	ldr	r3, [pc, #280]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80026f0:	685b      	ldr	r3, [r3, #4]
 80026f2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	d116      	bne.n	8002728 <HAL_RCC_OscConfig+0x18c>
 80026fa:	4b43      	ldr	r3, [pc, #268]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	f003 0302 	and.w	r3, r3, #2
 8002702:	2b00      	cmp	r3, #0
 8002704:	d005      	beq.n	8002712 <HAL_RCC_OscConfig+0x176>
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	691b      	ldr	r3, [r3, #16]
 800270a:	2b01      	cmp	r3, #1
 800270c:	d001      	beq.n	8002712 <HAL_RCC_OscConfig+0x176>
 800270e:	2301      	movs	r3, #1
 8002710:	e1c0      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002712:	4b3d      	ldr	r3, [pc, #244]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	695b      	ldr	r3, [r3, #20]
 800271e:	00db      	lsls	r3, r3, #3
 8002720:	4939      	ldr	r1, [pc, #228]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002722:	4313      	orrs	r3, r2
 8002724:	600b      	str	r3, [r1, #0]
 8002726:	e03a      	b.n	800279e <HAL_RCC_OscConfig+0x202>
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	691b      	ldr	r3, [r3, #16]
 800272c:	2b00      	cmp	r3, #0
 800272e:	d020      	beq.n	8002772 <HAL_RCC_OscConfig+0x1d6>
 8002730:	4b36      	ldr	r3, [pc, #216]	@ (800280c <HAL_RCC_OscConfig+0x270>)
 8002732:	2201      	movs	r2, #1
 8002734:	601a      	str	r2, [r3, #0]
 8002736:	f7ff fc55 	bl	8001fe4 <HAL_GetTick>
 800273a:	6138      	str	r0, [r7, #16]
 800273c:	e008      	b.n	8002750 <HAL_RCC_OscConfig+0x1b4>
 800273e:	f7ff fc51 	bl	8001fe4 <HAL_GetTick>
 8002742:	4602      	mov	r2, r0
 8002744:	693b      	ldr	r3, [r7, #16]
 8002746:	1ad3      	subs	r3, r2, r3
 8002748:	2b02      	cmp	r3, #2
 800274a:	d901      	bls.n	8002750 <HAL_RCC_OscConfig+0x1b4>
 800274c:	2303      	movs	r3, #3
 800274e:	e1a1      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002750:	4b2d      	ldr	r3, [pc, #180]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	f003 0302 	and.w	r3, r3, #2
 8002758:	2b00      	cmp	r3, #0
 800275a:	d0f0      	beq.n	800273e <HAL_RCC_OscConfig+0x1a2>
 800275c:	4b2a      	ldr	r3, [pc, #168]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	695b      	ldr	r3, [r3, #20]
 8002768:	00db      	lsls	r3, r3, #3
 800276a:	4927      	ldr	r1, [pc, #156]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 800276c:	4313      	orrs	r3, r2
 800276e:	600b      	str	r3, [r1, #0]
 8002770:	e015      	b.n	800279e <HAL_RCC_OscConfig+0x202>
 8002772:	4b26      	ldr	r3, [pc, #152]	@ (800280c <HAL_RCC_OscConfig+0x270>)
 8002774:	2200      	movs	r2, #0
 8002776:	601a      	str	r2, [r3, #0]
 8002778:	f7ff fc34 	bl	8001fe4 <HAL_GetTick>
 800277c:	6138      	str	r0, [r7, #16]
 800277e:	e008      	b.n	8002792 <HAL_RCC_OscConfig+0x1f6>
 8002780:	f7ff fc30 	bl	8001fe4 <HAL_GetTick>
 8002784:	4602      	mov	r2, r0
 8002786:	693b      	ldr	r3, [r7, #16]
 8002788:	1ad3      	subs	r3, r2, r3
 800278a:	2b02      	cmp	r3, #2
 800278c:	d901      	bls.n	8002792 <HAL_RCC_OscConfig+0x1f6>
 800278e:	2303      	movs	r3, #3
 8002790:	e180      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002792:	4b1d      	ldr	r3, [pc, #116]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	f003 0302 	and.w	r3, r3, #2
 800279a:	2b00      	cmp	r3, #0
 800279c:	d1f0      	bne.n	8002780 <HAL_RCC_OscConfig+0x1e4>
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	f003 0308 	and.w	r3, r3, #8
 80027a6:	2b00      	cmp	r3, #0
 80027a8:	d03a      	beq.n	8002820 <HAL_RCC_OscConfig+0x284>
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	699b      	ldr	r3, [r3, #24]
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d019      	beq.n	80027e6 <HAL_RCC_OscConfig+0x24a>
 80027b2:	4b17      	ldr	r3, [pc, #92]	@ (8002810 <HAL_RCC_OscConfig+0x274>)
 80027b4:	2201      	movs	r2, #1
 80027b6:	601a      	str	r2, [r3, #0]
 80027b8:	f7ff fc14 	bl	8001fe4 <HAL_GetTick>
 80027bc:	6138      	str	r0, [r7, #16]
 80027be:	e008      	b.n	80027d2 <HAL_RCC_OscConfig+0x236>
 80027c0:	f7ff fc10 	bl	8001fe4 <HAL_GetTick>
 80027c4:	4602      	mov	r2, r0
 80027c6:	693b      	ldr	r3, [r7, #16]
 80027c8:	1ad3      	subs	r3, r2, r3
 80027ca:	2b02      	cmp	r3, #2
 80027cc:	d901      	bls.n	80027d2 <HAL_RCC_OscConfig+0x236>
 80027ce:	2303      	movs	r3, #3
 80027d0:	e160      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 80027d2:	4b0d      	ldr	r3, [pc, #52]	@ (8002808 <HAL_RCC_OscConfig+0x26c>)
 80027d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80027d6:	f003 0302 	and.w	r3, r3, #2
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d0f0      	beq.n	80027c0 <HAL_RCC_OscConfig+0x224>
 80027de:	2001      	movs	r0, #1
 80027e0:	f000 fa9c 	bl	8002d1c <RCC_Delay>
 80027e4:	e01c      	b.n	8002820 <HAL_RCC_OscConfig+0x284>
 80027e6:	4b0a      	ldr	r3, [pc, #40]	@ (8002810 <HAL_RCC_OscConfig+0x274>)
 80027e8:	2200      	movs	r2, #0
 80027ea:	601a      	str	r2, [r3, #0]
 80027ec:	f7ff fbfa 	bl	8001fe4 <HAL_GetTick>
 80027f0:	6138      	str	r0, [r7, #16]
 80027f2:	e00f      	b.n	8002814 <HAL_RCC_OscConfig+0x278>
 80027f4:	f7ff fbf6 	bl	8001fe4 <HAL_GetTick>
 80027f8:	4602      	mov	r2, r0
 80027fa:	693b      	ldr	r3, [r7, #16]
 80027fc:	1ad3      	subs	r3, r2, r3
 80027fe:	2b02      	cmp	r3, #2
 8002800:	d908      	bls.n	8002814 <HAL_RCC_OscConfig+0x278>
 8002802:	2303      	movs	r3, #3
 8002804:	e146      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002806:	bf00      	nop
 8002808:	40021000 	.word	0x40021000
 800280c:	42420000 	.word	0x42420000
 8002810:	42420480 	.word	0x42420480
 8002814:	4b92      	ldr	r3, [pc, #584]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002816:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002818:	f003 0302 	and.w	r3, r3, #2
 800281c:	2b00      	cmp	r3, #0
 800281e:	d1e9      	bne.n	80027f4 <HAL_RCC_OscConfig+0x258>
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	f003 0304 	and.w	r3, r3, #4
 8002828:	2b00      	cmp	r3, #0
 800282a:	f000 80a6 	beq.w	800297a <HAL_RCC_OscConfig+0x3de>
 800282e:	2300      	movs	r3, #0
 8002830:	75fb      	strb	r3, [r7, #23]
 8002832:	4b8b      	ldr	r3, [pc, #556]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002834:	69db      	ldr	r3, [r3, #28]
 8002836:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800283a:	2b00      	cmp	r3, #0
 800283c:	d10d      	bne.n	800285a <HAL_RCC_OscConfig+0x2be>
 800283e:	4b88      	ldr	r3, [pc, #544]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002840:	69db      	ldr	r3, [r3, #28]
 8002842:	4a87      	ldr	r2, [pc, #540]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002844:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002848:	61d3      	str	r3, [r2, #28]
 800284a:	4b85      	ldr	r3, [pc, #532]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 800284c:	69db      	ldr	r3, [r3, #28]
 800284e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002852:	60bb      	str	r3, [r7, #8]
 8002854:	68bb      	ldr	r3, [r7, #8]
 8002856:	2301      	movs	r3, #1
 8002858:	75fb      	strb	r3, [r7, #23]
 800285a:	4b82      	ldr	r3, [pc, #520]	@ (8002a64 <HAL_RCC_OscConfig+0x4c8>)
 800285c:	681b      	ldr	r3, [r3, #0]
 800285e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002862:	2b00      	cmp	r3, #0
 8002864:	d118      	bne.n	8002898 <HAL_RCC_OscConfig+0x2fc>
 8002866:	4b7f      	ldr	r3, [pc, #508]	@ (8002a64 <HAL_RCC_OscConfig+0x4c8>)
 8002868:	681b      	ldr	r3, [r3, #0]
 800286a:	4a7e      	ldr	r2, [pc, #504]	@ (8002a64 <HAL_RCC_OscConfig+0x4c8>)
 800286c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002870:	6013      	str	r3, [r2, #0]
 8002872:	f7ff fbb7 	bl	8001fe4 <HAL_GetTick>
 8002876:	6138      	str	r0, [r7, #16]
 8002878:	e008      	b.n	800288c <HAL_RCC_OscConfig+0x2f0>
 800287a:	f7ff fbb3 	bl	8001fe4 <HAL_GetTick>
 800287e:	4602      	mov	r2, r0
 8002880:	693b      	ldr	r3, [r7, #16]
 8002882:	1ad3      	subs	r3, r2, r3
 8002884:	2b64      	cmp	r3, #100	@ 0x64
 8002886:	d901      	bls.n	800288c <HAL_RCC_OscConfig+0x2f0>
 8002888:	2303      	movs	r3, #3
 800288a:	e103      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 800288c:	4b75      	ldr	r3, [pc, #468]	@ (8002a64 <HAL_RCC_OscConfig+0x4c8>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002894:	2b00      	cmp	r3, #0
 8002896:	d0f0      	beq.n	800287a <HAL_RCC_OscConfig+0x2de>
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	68db      	ldr	r3, [r3, #12]
 800289c:	2b01      	cmp	r3, #1
 800289e:	d106      	bne.n	80028ae <HAL_RCC_OscConfig+0x312>
 80028a0:	4b6f      	ldr	r3, [pc, #444]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028a2:	6a1b      	ldr	r3, [r3, #32]
 80028a4:	4a6e      	ldr	r2, [pc, #440]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028a6:	f043 0301 	orr.w	r3, r3, #1
 80028aa:	6213      	str	r3, [r2, #32]
 80028ac:	e02d      	b.n	800290a <HAL_RCC_OscConfig+0x36e>
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	68db      	ldr	r3, [r3, #12]
 80028b2:	2b00      	cmp	r3, #0
 80028b4:	d10c      	bne.n	80028d0 <HAL_RCC_OscConfig+0x334>
 80028b6:	4b6a      	ldr	r3, [pc, #424]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028b8:	6a1b      	ldr	r3, [r3, #32]
 80028ba:	4a69      	ldr	r2, [pc, #420]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028bc:	f023 0301 	bic.w	r3, r3, #1
 80028c0:	6213      	str	r3, [r2, #32]
 80028c2:	4b67      	ldr	r3, [pc, #412]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028c4:	6a1b      	ldr	r3, [r3, #32]
 80028c6:	4a66      	ldr	r2, [pc, #408]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028c8:	f023 0304 	bic.w	r3, r3, #4
 80028cc:	6213      	str	r3, [r2, #32]
 80028ce:	e01c      	b.n	800290a <HAL_RCC_OscConfig+0x36e>
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	68db      	ldr	r3, [r3, #12]
 80028d4:	2b05      	cmp	r3, #5
 80028d6:	d10c      	bne.n	80028f2 <HAL_RCC_OscConfig+0x356>
 80028d8:	4b61      	ldr	r3, [pc, #388]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028da:	6a1b      	ldr	r3, [r3, #32]
 80028dc:	4a60      	ldr	r2, [pc, #384]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028de:	f043 0304 	orr.w	r3, r3, #4
 80028e2:	6213      	str	r3, [r2, #32]
 80028e4:	4b5e      	ldr	r3, [pc, #376]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028e6:	6a1b      	ldr	r3, [r3, #32]
 80028e8:	4a5d      	ldr	r2, [pc, #372]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028ea:	f043 0301 	orr.w	r3, r3, #1
 80028ee:	6213      	str	r3, [r2, #32]
 80028f0:	e00b      	b.n	800290a <HAL_RCC_OscConfig+0x36e>
 80028f2:	4b5b      	ldr	r3, [pc, #364]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028f4:	6a1b      	ldr	r3, [r3, #32]
 80028f6:	4a5a      	ldr	r2, [pc, #360]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80028f8:	f023 0301 	bic.w	r3, r3, #1
 80028fc:	6213      	str	r3, [r2, #32]
 80028fe:	4b58      	ldr	r3, [pc, #352]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002900:	6a1b      	ldr	r3, [r3, #32]
 8002902:	4a57      	ldr	r2, [pc, #348]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002904:	f023 0304 	bic.w	r3, r3, #4
 8002908:	6213      	str	r3, [r2, #32]
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	68db      	ldr	r3, [r3, #12]
 800290e:	2b00      	cmp	r3, #0
 8002910:	d015      	beq.n	800293e <HAL_RCC_OscConfig+0x3a2>
 8002912:	f7ff fb67 	bl	8001fe4 <HAL_GetTick>
 8002916:	6138      	str	r0, [r7, #16]
 8002918:	e00a      	b.n	8002930 <HAL_RCC_OscConfig+0x394>
 800291a:	f7ff fb63 	bl	8001fe4 <HAL_GetTick>
 800291e:	4602      	mov	r2, r0
 8002920:	693b      	ldr	r3, [r7, #16]
 8002922:	1ad3      	subs	r3, r2, r3
 8002924:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002928:	4293      	cmp	r3, r2
 800292a:	d901      	bls.n	8002930 <HAL_RCC_OscConfig+0x394>
 800292c:	2303      	movs	r3, #3
 800292e:	e0b1      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002930:	4b4b      	ldr	r3, [pc, #300]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002932:	6a1b      	ldr	r3, [r3, #32]
 8002934:	f003 0302 	and.w	r3, r3, #2
 8002938:	2b00      	cmp	r3, #0
 800293a:	d0ee      	beq.n	800291a <HAL_RCC_OscConfig+0x37e>
 800293c:	e014      	b.n	8002968 <HAL_RCC_OscConfig+0x3cc>
 800293e:	f7ff fb51 	bl	8001fe4 <HAL_GetTick>
 8002942:	6138      	str	r0, [r7, #16]
 8002944:	e00a      	b.n	800295c <HAL_RCC_OscConfig+0x3c0>
 8002946:	f7ff fb4d 	bl	8001fe4 <HAL_GetTick>
 800294a:	4602      	mov	r2, r0
 800294c:	693b      	ldr	r3, [r7, #16]
 800294e:	1ad3      	subs	r3, r2, r3
 8002950:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002954:	4293      	cmp	r3, r2
 8002956:	d901      	bls.n	800295c <HAL_RCC_OscConfig+0x3c0>
 8002958:	2303      	movs	r3, #3
 800295a:	e09b      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 800295c:	4b40      	ldr	r3, [pc, #256]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 800295e:	6a1b      	ldr	r3, [r3, #32]
 8002960:	f003 0302 	and.w	r3, r3, #2
 8002964:	2b00      	cmp	r3, #0
 8002966:	d1ee      	bne.n	8002946 <HAL_RCC_OscConfig+0x3aa>
 8002968:	7dfb      	ldrb	r3, [r7, #23]
 800296a:	2b01      	cmp	r3, #1
 800296c:	d105      	bne.n	800297a <HAL_RCC_OscConfig+0x3de>
 800296e:	4b3c      	ldr	r3, [pc, #240]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002970:	69db      	ldr	r3, [r3, #28]
 8002972:	4a3b      	ldr	r2, [pc, #236]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002974:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002978:	61d3      	str	r3, [r2, #28]
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	69db      	ldr	r3, [r3, #28]
 800297e:	2b00      	cmp	r3, #0
 8002980:	f000 8087 	beq.w	8002a92 <HAL_RCC_OscConfig+0x4f6>
 8002984:	4b36      	ldr	r3, [pc, #216]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002986:	685b      	ldr	r3, [r3, #4]
 8002988:	f003 030c 	and.w	r3, r3, #12
 800298c:	2b08      	cmp	r3, #8
 800298e:	d061      	beq.n	8002a54 <HAL_RCC_OscConfig+0x4b8>
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	69db      	ldr	r3, [r3, #28]
 8002994:	2b02      	cmp	r3, #2
 8002996:	d146      	bne.n	8002a26 <HAL_RCC_OscConfig+0x48a>
 8002998:	4b33      	ldr	r3, [pc, #204]	@ (8002a68 <HAL_RCC_OscConfig+0x4cc>)
 800299a:	2200      	movs	r2, #0
 800299c:	601a      	str	r2, [r3, #0]
 800299e:	f7ff fb21 	bl	8001fe4 <HAL_GetTick>
 80029a2:	6138      	str	r0, [r7, #16]
 80029a4:	e008      	b.n	80029b8 <HAL_RCC_OscConfig+0x41c>
 80029a6:	f7ff fb1d 	bl	8001fe4 <HAL_GetTick>
 80029aa:	4602      	mov	r2, r0
 80029ac:	693b      	ldr	r3, [r7, #16]
 80029ae:	1ad3      	subs	r3, r2, r3
 80029b0:	2b02      	cmp	r3, #2
 80029b2:	d901      	bls.n	80029b8 <HAL_RCC_OscConfig+0x41c>
 80029b4:	2303      	movs	r3, #3
 80029b6:	e06d      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 80029b8:	4b29      	ldr	r3, [pc, #164]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d1f0      	bne.n	80029a6 <HAL_RCC_OscConfig+0x40a>
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	6a1b      	ldr	r3, [r3, #32]
 80029c8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80029cc:	d108      	bne.n	80029e0 <HAL_RCC_OscConfig+0x444>
 80029ce:	4b24      	ldr	r3, [pc, #144]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80029d0:	685b      	ldr	r3, [r3, #4]
 80029d2:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	689b      	ldr	r3, [r3, #8]
 80029da:	4921      	ldr	r1, [pc, #132]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80029dc:	4313      	orrs	r3, r2
 80029de:	604b      	str	r3, [r1, #4]
 80029e0:	4b1f      	ldr	r3, [pc, #124]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80029e2:	685b      	ldr	r3, [r3, #4]
 80029e4:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	6a19      	ldr	r1, [r3, #32]
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029f0:	430b      	orrs	r3, r1
 80029f2:	491b      	ldr	r1, [pc, #108]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 80029f4:	4313      	orrs	r3, r2
 80029f6:	604b      	str	r3, [r1, #4]
 80029f8:	4b1b      	ldr	r3, [pc, #108]	@ (8002a68 <HAL_RCC_OscConfig+0x4cc>)
 80029fa:	2201      	movs	r2, #1
 80029fc:	601a      	str	r2, [r3, #0]
 80029fe:	f7ff faf1 	bl	8001fe4 <HAL_GetTick>
 8002a02:	6138      	str	r0, [r7, #16]
 8002a04:	e008      	b.n	8002a18 <HAL_RCC_OscConfig+0x47c>
 8002a06:	f7ff faed 	bl	8001fe4 <HAL_GetTick>
 8002a0a:	4602      	mov	r2, r0
 8002a0c:	693b      	ldr	r3, [r7, #16]
 8002a0e:	1ad3      	subs	r3, r2, r3
 8002a10:	2b02      	cmp	r3, #2
 8002a12:	d901      	bls.n	8002a18 <HAL_RCC_OscConfig+0x47c>
 8002a14:	2303      	movs	r3, #3
 8002a16:	e03d      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002a18:	4b11      	ldr	r3, [pc, #68]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002a20:	2b00      	cmp	r3, #0
 8002a22:	d0f0      	beq.n	8002a06 <HAL_RCC_OscConfig+0x46a>
 8002a24:	e035      	b.n	8002a92 <HAL_RCC_OscConfig+0x4f6>
 8002a26:	4b10      	ldr	r3, [pc, #64]	@ (8002a68 <HAL_RCC_OscConfig+0x4cc>)
 8002a28:	2200      	movs	r2, #0
 8002a2a:	601a      	str	r2, [r3, #0]
 8002a2c:	f7ff fada 	bl	8001fe4 <HAL_GetTick>
 8002a30:	6138      	str	r0, [r7, #16]
 8002a32:	e008      	b.n	8002a46 <HAL_RCC_OscConfig+0x4aa>
 8002a34:	f7ff fad6 	bl	8001fe4 <HAL_GetTick>
 8002a38:	4602      	mov	r2, r0
 8002a3a:	693b      	ldr	r3, [r7, #16]
 8002a3c:	1ad3      	subs	r3, r2, r3
 8002a3e:	2b02      	cmp	r3, #2
 8002a40:	d901      	bls.n	8002a46 <HAL_RCC_OscConfig+0x4aa>
 8002a42:	2303      	movs	r3, #3
 8002a44:	e026      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002a46:	4b06      	ldr	r3, [pc, #24]	@ (8002a60 <HAL_RCC_OscConfig+0x4c4>)
 8002a48:	681b      	ldr	r3, [r3, #0]
 8002a4a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d1f0      	bne.n	8002a34 <HAL_RCC_OscConfig+0x498>
 8002a52:	e01e      	b.n	8002a92 <HAL_RCC_OscConfig+0x4f6>
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	69db      	ldr	r3, [r3, #28]
 8002a58:	2b01      	cmp	r3, #1
 8002a5a:	d107      	bne.n	8002a6c <HAL_RCC_OscConfig+0x4d0>
 8002a5c:	2301      	movs	r3, #1
 8002a5e:	e019      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002a60:	40021000 	.word	0x40021000
 8002a64:	40007000 	.word	0x40007000
 8002a68:	42420060 	.word	0x42420060
 8002a6c:	4b0b      	ldr	r3, [pc, #44]	@ (8002a9c <HAL_RCC_OscConfig+0x500>)
 8002a6e:	685b      	ldr	r3, [r3, #4]
 8002a70:	60fb      	str	r3, [r7, #12]
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	6a1b      	ldr	r3, [r3, #32]
 8002a7c:	429a      	cmp	r2, r3
 8002a7e:	d106      	bne.n	8002a8e <HAL_RCC_OscConfig+0x4f2>
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a8a:	429a      	cmp	r2, r3
 8002a8c:	d001      	beq.n	8002a92 <HAL_RCC_OscConfig+0x4f6>
 8002a8e:	2301      	movs	r3, #1
 8002a90:	e000      	b.n	8002a94 <HAL_RCC_OscConfig+0x4f8>
 8002a92:	2300      	movs	r3, #0
 8002a94:	4618      	mov	r0, r3
 8002a96:	3718      	adds	r7, #24
 8002a98:	46bd      	mov	sp, r7
 8002a9a:	bd80      	pop	{r7, pc}
 8002a9c:	40021000 	.word	0x40021000

08002aa0 <HAL_RCC_ClockConfig>:
 8002aa0:	b580      	push	{r7, lr}
 8002aa2:	b084      	sub	sp, #16
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]
 8002aa8:	6039      	str	r1, [r7, #0]
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d101      	bne.n	8002ab4 <HAL_RCC_ClockConfig+0x14>
 8002ab0:	2301      	movs	r3, #1
 8002ab2:	e0d0      	b.n	8002c56 <HAL_RCC_ClockConfig+0x1b6>
 8002ab4:	4b6a      	ldr	r3, [pc, #424]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002ab6:	681b      	ldr	r3, [r3, #0]
 8002ab8:	f003 0307 	and.w	r3, r3, #7
 8002abc:	683a      	ldr	r2, [r7, #0]
 8002abe:	429a      	cmp	r2, r3
 8002ac0:	d910      	bls.n	8002ae4 <HAL_RCC_ClockConfig+0x44>
 8002ac2:	4b67      	ldr	r3, [pc, #412]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	f023 0207 	bic.w	r2, r3, #7
 8002aca:	4965      	ldr	r1, [pc, #404]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002acc:	683b      	ldr	r3, [r7, #0]
 8002ace:	4313      	orrs	r3, r2
 8002ad0:	600b      	str	r3, [r1, #0]
 8002ad2:	4b63      	ldr	r3, [pc, #396]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002ad4:	681b      	ldr	r3, [r3, #0]
 8002ad6:	f003 0307 	and.w	r3, r3, #7
 8002ada:	683a      	ldr	r2, [r7, #0]
 8002adc:	429a      	cmp	r2, r3
 8002ade:	d001      	beq.n	8002ae4 <HAL_RCC_ClockConfig+0x44>
 8002ae0:	2301      	movs	r3, #1
 8002ae2:	e0b8      	b.n	8002c56 <HAL_RCC_ClockConfig+0x1b6>
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	f003 0302 	and.w	r3, r3, #2
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d020      	beq.n	8002b32 <HAL_RCC_ClockConfig+0x92>
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	f003 0304 	and.w	r3, r3, #4
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	d005      	beq.n	8002b08 <HAL_RCC_ClockConfig+0x68>
 8002afc:	4b59      	ldr	r3, [pc, #356]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002afe:	685b      	ldr	r3, [r3, #4]
 8002b00:	4a58      	ldr	r2, [pc, #352]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b02:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8002b06:	6053      	str	r3, [r2, #4]
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	f003 0308 	and.w	r3, r3, #8
 8002b10:	2b00      	cmp	r3, #0
 8002b12:	d005      	beq.n	8002b20 <HAL_RCC_ClockConfig+0x80>
 8002b14:	4b53      	ldr	r3, [pc, #332]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b16:	685b      	ldr	r3, [r3, #4]
 8002b18:	4a52      	ldr	r2, [pc, #328]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b1a:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8002b1e:	6053      	str	r3, [r2, #4]
 8002b20:	4b50      	ldr	r3, [pc, #320]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b22:	685b      	ldr	r3, [r3, #4]
 8002b24:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	689b      	ldr	r3, [r3, #8]
 8002b2c:	494d      	ldr	r1, [pc, #308]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b2e:	4313      	orrs	r3, r2
 8002b30:	604b      	str	r3, [r1, #4]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	f003 0301 	and.w	r3, r3, #1
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d040      	beq.n	8002bc0 <HAL_RCC_ClockConfig+0x120>
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	685b      	ldr	r3, [r3, #4]
 8002b42:	2b01      	cmp	r3, #1
 8002b44:	d107      	bne.n	8002b56 <HAL_RCC_ClockConfig+0xb6>
 8002b46:	4b47      	ldr	r3, [pc, #284]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d115      	bne.n	8002b7e <HAL_RCC_ClockConfig+0xde>
 8002b52:	2301      	movs	r3, #1
 8002b54:	e07f      	b.n	8002c56 <HAL_RCC_ClockConfig+0x1b6>
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	685b      	ldr	r3, [r3, #4]
 8002b5a:	2b02      	cmp	r3, #2
 8002b5c:	d107      	bne.n	8002b6e <HAL_RCC_ClockConfig+0xce>
 8002b5e:	4b41      	ldr	r3, [pc, #260]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	d109      	bne.n	8002b7e <HAL_RCC_ClockConfig+0xde>
 8002b6a:	2301      	movs	r3, #1
 8002b6c:	e073      	b.n	8002c56 <HAL_RCC_ClockConfig+0x1b6>
 8002b6e:	4b3d      	ldr	r3, [pc, #244]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b70:	681b      	ldr	r3, [r3, #0]
 8002b72:	f003 0302 	and.w	r3, r3, #2
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d101      	bne.n	8002b7e <HAL_RCC_ClockConfig+0xde>
 8002b7a:	2301      	movs	r3, #1
 8002b7c:	e06b      	b.n	8002c56 <HAL_RCC_ClockConfig+0x1b6>
 8002b7e:	4b39      	ldr	r3, [pc, #228]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b80:	685b      	ldr	r3, [r3, #4]
 8002b82:	f023 0203 	bic.w	r2, r3, #3
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	685b      	ldr	r3, [r3, #4]
 8002b8a:	4936      	ldr	r1, [pc, #216]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002b8c:	4313      	orrs	r3, r2
 8002b8e:	604b      	str	r3, [r1, #4]
 8002b90:	f7ff fa28 	bl	8001fe4 <HAL_GetTick>
 8002b94:	60f8      	str	r0, [r7, #12]
 8002b96:	e00a      	b.n	8002bae <HAL_RCC_ClockConfig+0x10e>
 8002b98:	f7ff fa24 	bl	8001fe4 <HAL_GetTick>
 8002b9c:	4602      	mov	r2, r0
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	1ad3      	subs	r3, r2, r3
 8002ba2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002ba6:	4293      	cmp	r3, r2
 8002ba8:	d901      	bls.n	8002bae <HAL_RCC_ClockConfig+0x10e>
 8002baa:	2303      	movs	r3, #3
 8002bac:	e053      	b.n	8002c56 <HAL_RCC_ClockConfig+0x1b6>
 8002bae:	4b2d      	ldr	r3, [pc, #180]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002bb0:	685b      	ldr	r3, [r3, #4]
 8002bb2:	f003 020c 	and.w	r2, r3, #12
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	685b      	ldr	r3, [r3, #4]
 8002bba:	009b      	lsls	r3, r3, #2
 8002bbc:	429a      	cmp	r2, r3
 8002bbe:	d1eb      	bne.n	8002b98 <HAL_RCC_ClockConfig+0xf8>
 8002bc0:	4b27      	ldr	r3, [pc, #156]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	f003 0307 	and.w	r3, r3, #7
 8002bc8:	683a      	ldr	r2, [r7, #0]
 8002bca:	429a      	cmp	r2, r3
 8002bcc:	d210      	bcs.n	8002bf0 <HAL_RCC_ClockConfig+0x150>
 8002bce:	4b24      	ldr	r3, [pc, #144]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	f023 0207 	bic.w	r2, r3, #7
 8002bd6:	4922      	ldr	r1, [pc, #136]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002bd8:	683b      	ldr	r3, [r7, #0]
 8002bda:	4313      	orrs	r3, r2
 8002bdc:	600b      	str	r3, [r1, #0]
 8002bde:	4b20      	ldr	r3, [pc, #128]	@ (8002c60 <HAL_RCC_ClockConfig+0x1c0>)
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	f003 0307 	and.w	r3, r3, #7
 8002be6:	683a      	ldr	r2, [r7, #0]
 8002be8:	429a      	cmp	r2, r3
 8002bea:	d001      	beq.n	8002bf0 <HAL_RCC_ClockConfig+0x150>
 8002bec:	2301      	movs	r3, #1
 8002bee:	e032      	b.n	8002c56 <HAL_RCC_ClockConfig+0x1b6>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	f003 0304 	and.w	r3, r3, #4
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d008      	beq.n	8002c0e <HAL_RCC_ClockConfig+0x16e>
 8002bfc:	4b19      	ldr	r3, [pc, #100]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002bfe:	685b      	ldr	r3, [r3, #4]
 8002c00:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	68db      	ldr	r3, [r3, #12]
 8002c08:	4916      	ldr	r1, [pc, #88]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002c0a:	4313      	orrs	r3, r2
 8002c0c:	604b      	str	r3, [r1, #4]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	f003 0308 	and.w	r3, r3, #8
 8002c16:	2b00      	cmp	r3, #0
 8002c18:	d009      	beq.n	8002c2e <HAL_RCC_ClockConfig+0x18e>
 8002c1a:	4b12      	ldr	r3, [pc, #72]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002c1c:	685b      	ldr	r3, [r3, #4]
 8002c1e:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	691b      	ldr	r3, [r3, #16]
 8002c26:	00db      	lsls	r3, r3, #3
 8002c28:	490e      	ldr	r1, [pc, #56]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002c2a:	4313      	orrs	r3, r2
 8002c2c:	604b      	str	r3, [r1, #4]
 8002c2e:	f000 f821 	bl	8002c74 <HAL_RCC_GetSysClockFreq>
 8002c32:	4602      	mov	r2, r0
 8002c34:	4b0b      	ldr	r3, [pc, #44]	@ (8002c64 <HAL_RCC_ClockConfig+0x1c4>)
 8002c36:	685b      	ldr	r3, [r3, #4]
 8002c38:	091b      	lsrs	r3, r3, #4
 8002c3a:	f003 030f 	and.w	r3, r3, #15
 8002c3e:	490a      	ldr	r1, [pc, #40]	@ (8002c68 <HAL_RCC_ClockConfig+0x1c8>)
 8002c40:	5ccb      	ldrb	r3, [r1, r3]
 8002c42:	fa22 f303 	lsr.w	r3, r2, r3
 8002c46:	4a09      	ldr	r2, [pc, #36]	@ (8002c6c <HAL_RCC_ClockConfig+0x1cc>)
 8002c48:	6013      	str	r3, [r2, #0]
 8002c4a:	4b09      	ldr	r3, [pc, #36]	@ (8002c70 <HAL_RCC_ClockConfig+0x1d0>)
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	4618      	mov	r0, r3
 8002c50:	f7ff f986 	bl	8001f60 <HAL_InitTick>
 8002c54:	2300      	movs	r3, #0
 8002c56:	4618      	mov	r0, r3
 8002c58:	3710      	adds	r7, #16
 8002c5a:	46bd      	mov	sp, r7
 8002c5c:	bd80      	pop	{r7, pc}
 8002c5e:	bf00      	nop
 8002c60:	40022000 	.word	0x40022000
 8002c64:	40021000 	.word	0x40021000
 8002c68:	08003580 	.word	0x08003580
 8002c6c:	20000094 	.word	0x20000094
 8002c70:	20000098 	.word	0x20000098

08002c74 <HAL_RCC_GetSysClockFreq>:
 8002c74:	b480      	push	{r7}
 8002c76:	b087      	sub	sp, #28
 8002c78:	af00      	add	r7, sp, #0
 8002c7a:	2300      	movs	r3, #0
 8002c7c:	60fb      	str	r3, [r7, #12]
 8002c7e:	2300      	movs	r3, #0
 8002c80:	60bb      	str	r3, [r7, #8]
 8002c82:	2300      	movs	r3, #0
 8002c84:	617b      	str	r3, [r7, #20]
 8002c86:	2300      	movs	r3, #0
 8002c88:	607b      	str	r3, [r7, #4]
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	613b      	str	r3, [r7, #16]
 8002c8e:	4b1e      	ldr	r3, [pc, #120]	@ (8002d08 <HAL_RCC_GetSysClockFreq+0x94>)
 8002c90:	685b      	ldr	r3, [r3, #4]
 8002c92:	60fb      	str	r3, [r7, #12]
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	f003 030c 	and.w	r3, r3, #12
 8002c9a:	2b04      	cmp	r3, #4
 8002c9c:	d002      	beq.n	8002ca4 <HAL_RCC_GetSysClockFreq+0x30>
 8002c9e:	2b08      	cmp	r3, #8
 8002ca0:	d003      	beq.n	8002caa <HAL_RCC_GetSysClockFreq+0x36>
 8002ca2:	e027      	b.n	8002cf4 <HAL_RCC_GetSysClockFreq+0x80>
 8002ca4:	4b19      	ldr	r3, [pc, #100]	@ (8002d0c <HAL_RCC_GetSysClockFreq+0x98>)
 8002ca6:	613b      	str	r3, [r7, #16]
 8002ca8:	e027      	b.n	8002cfa <HAL_RCC_GetSysClockFreq+0x86>
 8002caa:	68fb      	ldr	r3, [r7, #12]
 8002cac:	0c9b      	lsrs	r3, r3, #18
 8002cae:	f003 030f 	and.w	r3, r3, #15
 8002cb2:	4a17      	ldr	r2, [pc, #92]	@ (8002d10 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002cb4:	5cd3      	ldrb	r3, [r2, r3]
 8002cb6:	607b      	str	r3, [r7, #4]
 8002cb8:	68fb      	ldr	r3, [r7, #12]
 8002cba:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d010      	beq.n	8002ce4 <HAL_RCC_GetSysClockFreq+0x70>
 8002cc2:	4b11      	ldr	r3, [pc, #68]	@ (8002d08 <HAL_RCC_GetSysClockFreq+0x94>)
 8002cc4:	685b      	ldr	r3, [r3, #4]
 8002cc6:	0c5b      	lsrs	r3, r3, #17
 8002cc8:	f003 0301 	and.w	r3, r3, #1
 8002ccc:	4a11      	ldr	r2, [pc, #68]	@ (8002d14 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002cce:	5cd3      	ldrb	r3, [r2, r3]
 8002cd0:	60bb      	str	r3, [r7, #8]
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	4a0d      	ldr	r2, [pc, #52]	@ (8002d0c <HAL_RCC_GetSysClockFreq+0x98>)
 8002cd6:	fb03 f202 	mul.w	r2, r3, r2
 8002cda:	68bb      	ldr	r3, [r7, #8]
 8002cdc:	fbb2 f3f3 	udiv	r3, r2, r3
 8002ce0:	617b      	str	r3, [r7, #20]
 8002ce2:	e004      	b.n	8002cee <HAL_RCC_GetSysClockFreq+0x7a>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	4a0c      	ldr	r2, [pc, #48]	@ (8002d18 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002ce8:	fb02 f303 	mul.w	r3, r2, r3
 8002cec:	617b      	str	r3, [r7, #20]
 8002cee:	697b      	ldr	r3, [r7, #20]
 8002cf0:	613b      	str	r3, [r7, #16]
 8002cf2:	e002      	b.n	8002cfa <HAL_RCC_GetSysClockFreq+0x86>
 8002cf4:	4b05      	ldr	r3, [pc, #20]	@ (8002d0c <HAL_RCC_GetSysClockFreq+0x98>)
 8002cf6:	613b      	str	r3, [r7, #16]
 8002cf8:	bf00      	nop
 8002cfa:	693b      	ldr	r3, [r7, #16]
 8002cfc:	4618      	mov	r0, r3
 8002cfe:	371c      	adds	r7, #28
 8002d00:	46bd      	mov	sp, r7
 8002d02:	bc80      	pop	{r7}
 8002d04:	4770      	bx	lr
 8002d06:	bf00      	nop
 8002d08:	40021000 	.word	0x40021000
 8002d0c:	007a1200 	.word	0x007a1200
 8002d10:	08003590 	.word	0x08003590
 8002d14:	080035a0 	.word	0x080035a0
 8002d18:	003d0900 	.word	0x003d0900

08002d1c <RCC_Delay>:
 8002d1c:	b480      	push	{r7}
 8002d1e:	b085      	sub	sp, #20
 8002d20:	af00      	add	r7, sp, #0
 8002d22:	6078      	str	r0, [r7, #4]
 8002d24:	4b0a      	ldr	r3, [pc, #40]	@ (8002d50 <RCC_Delay+0x34>)
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	4a0a      	ldr	r2, [pc, #40]	@ (8002d54 <RCC_Delay+0x38>)
 8002d2a:	fba2 2303 	umull	r2, r3, r2, r3
 8002d2e:	0a5b      	lsrs	r3, r3, #9
 8002d30:	687a      	ldr	r2, [r7, #4]
 8002d32:	fb02 f303 	mul.w	r3, r2, r3
 8002d36:	60fb      	str	r3, [r7, #12]
 8002d38:	bf00      	nop
 8002d3a:	68fb      	ldr	r3, [r7, #12]
 8002d3c:	1e5a      	subs	r2, r3, #1
 8002d3e:	60fa      	str	r2, [r7, #12]
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	d1f9      	bne.n	8002d38 <RCC_Delay+0x1c>
 8002d44:	bf00      	nop
 8002d46:	bf00      	nop
 8002d48:	3714      	adds	r7, #20
 8002d4a:	46bd      	mov	sp, r7
 8002d4c:	bc80      	pop	{r7}
 8002d4e:	4770      	bx	lr
 8002d50:	20000094 	.word	0x20000094
 8002d54:	10624dd3 	.word	0x10624dd3

08002d58 <HAL_TIM_Base_Init>:
 8002d58:	b580      	push	{r7, lr}
 8002d5a:	b082      	sub	sp, #8
 8002d5c:	af00      	add	r7, sp, #0
 8002d5e:	6078      	str	r0, [r7, #4]
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	2b00      	cmp	r3, #0
 8002d64:	d101      	bne.n	8002d6a <HAL_TIM_Base_Init+0x12>
 8002d66:	2301      	movs	r3, #1
 8002d68:	e041      	b.n	8002dee <HAL_TIM_Base_Init+0x96>
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002d70:	b2db      	uxtb	r3, r3
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d106      	bne.n	8002d84 <HAL_TIM_Base_Init+0x2c>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	2200      	movs	r2, #0
 8002d7a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d7e:	6878      	ldr	r0, [r7, #4]
 8002d80:	f7ff f88e 	bl	8001ea0 <HAL_TIM_Base_MspInit>
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	2202      	movs	r2, #2
 8002d88:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681a      	ldr	r2, [r3, #0]
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	3304      	adds	r3, #4
 8002d94:	4619      	mov	r1, r3
 8002d96:	4610      	mov	r0, r2
 8002d98:	f000 fa56 	bl	8003248 <TIM_Base_SetConfig>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	2201      	movs	r2, #1
 8002da0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	2201      	movs	r2, #1
 8002da8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	2201      	movs	r2, #1
 8002db0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	2201      	movs	r2, #1
 8002db8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	2201      	movs	r2, #1
 8002dc0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	2201      	movs	r2, #1
 8002dc8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	2201      	movs	r2, #1
 8002dd0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	2201      	movs	r2, #1
 8002dd8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	2201      	movs	r2, #1
 8002de0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	2201      	movs	r2, #1
 8002de8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002dec:	2300      	movs	r3, #0
 8002dee:	4618      	mov	r0, r3
 8002df0:	3708      	adds	r7, #8
 8002df2:	46bd      	mov	sp, r7
 8002df4:	bd80      	pop	{r7, pc}
	...

08002df8 <HAL_TIM_Base_Start_IT>:
 8002df8:	b480      	push	{r7}
 8002dfa:	b085      	sub	sp, #20
 8002dfc:	af00      	add	r7, sp, #0
 8002dfe:	6078      	str	r0, [r7, #4]
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002e06:	b2db      	uxtb	r3, r3
 8002e08:	2b01      	cmp	r3, #1
 8002e0a:	d001      	beq.n	8002e10 <HAL_TIM_Base_Start_IT+0x18>
 8002e0c:	2301      	movs	r3, #1
 8002e0e:	e035      	b.n	8002e7c <HAL_TIM_Base_Start_IT+0x84>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	2202      	movs	r2, #2
 8002e14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	68da      	ldr	r2, [r3, #12]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	f042 0201 	orr.w	r2, r2, #1
 8002e26:	60da      	str	r2, [r3, #12]
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	4a16      	ldr	r2, [pc, #88]	@ (8002e88 <HAL_TIM_Base_Start_IT+0x90>)
 8002e2e:	4293      	cmp	r3, r2
 8002e30:	d009      	beq.n	8002e46 <HAL_TIM_Base_Start_IT+0x4e>
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002e3a:	d004      	beq.n	8002e46 <HAL_TIM_Base_Start_IT+0x4e>
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	4a12      	ldr	r2, [pc, #72]	@ (8002e8c <HAL_TIM_Base_Start_IT+0x94>)
 8002e42:	4293      	cmp	r3, r2
 8002e44:	d111      	bne.n	8002e6a <HAL_TIM_Base_Start_IT+0x72>
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	689b      	ldr	r3, [r3, #8]
 8002e4c:	f003 0307 	and.w	r3, r3, #7
 8002e50:	60fb      	str	r3, [r7, #12]
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	2b06      	cmp	r3, #6
 8002e56:	d010      	beq.n	8002e7a <HAL_TIM_Base_Start_IT+0x82>
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	681a      	ldr	r2, [r3, #0]
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	f042 0201 	orr.w	r2, r2, #1
 8002e66:	601a      	str	r2, [r3, #0]
 8002e68:	e007      	b.n	8002e7a <HAL_TIM_Base_Start_IT+0x82>
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	681a      	ldr	r2, [r3, #0]
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	f042 0201 	orr.w	r2, r2, #1
 8002e78:	601a      	str	r2, [r3, #0]
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	4618      	mov	r0, r3
 8002e7e:	3714      	adds	r7, #20
 8002e80:	46bd      	mov	sp, r7
 8002e82:	bc80      	pop	{r7}
 8002e84:	4770      	bx	lr
 8002e86:	bf00      	nop
 8002e88:	40012c00 	.word	0x40012c00
 8002e8c:	40000400 	.word	0x40000400

08002e90 <HAL_TIM_IRQHandler>:
 8002e90:	b580      	push	{r7, lr}
 8002e92:	b084      	sub	sp, #16
 8002e94:	af00      	add	r7, sp, #0
 8002e96:	6078      	str	r0, [r7, #4]
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	68db      	ldr	r3, [r3, #12]
 8002e9e:	60fb      	str	r3, [r7, #12]
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	691b      	ldr	r3, [r3, #16]
 8002ea6:	60bb      	str	r3, [r7, #8]
 8002ea8:	68bb      	ldr	r3, [r7, #8]
 8002eaa:	f003 0302 	and.w	r3, r3, #2
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d020      	beq.n	8002ef4 <HAL_TIM_IRQHandler+0x64>
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	f003 0302 	and.w	r3, r3, #2
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d01b      	beq.n	8002ef4 <HAL_TIM_IRQHandler+0x64>
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	f06f 0202 	mvn.w	r2, #2
 8002ec4:	611a      	str	r2, [r3, #16]
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	2201      	movs	r2, #1
 8002eca:	771a      	strb	r2, [r3, #28]
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	699b      	ldr	r3, [r3, #24]
 8002ed2:	f003 0303 	and.w	r3, r3, #3
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d003      	beq.n	8002ee2 <HAL_TIM_IRQHandler+0x52>
 8002eda:	6878      	ldr	r0, [r7, #4]
 8002edc:	f000 f998 	bl	8003210 <HAL_TIM_IC_CaptureCallback>
 8002ee0:	e005      	b.n	8002eee <HAL_TIM_IRQHandler+0x5e>
 8002ee2:	6878      	ldr	r0, [r7, #4]
 8002ee4:	f000 f98b 	bl	80031fe <HAL_TIM_OC_DelayElapsedCallback>
 8002ee8:	6878      	ldr	r0, [r7, #4]
 8002eea:	f000 f99a 	bl	8003222 <HAL_TIM_PWM_PulseFinishedCallback>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	2200      	movs	r2, #0
 8002ef2:	771a      	strb	r2, [r3, #28]
 8002ef4:	68bb      	ldr	r3, [r7, #8]
 8002ef6:	f003 0304 	and.w	r3, r3, #4
 8002efa:	2b00      	cmp	r3, #0
 8002efc:	d020      	beq.n	8002f40 <HAL_TIM_IRQHandler+0xb0>
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	f003 0304 	and.w	r3, r3, #4
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d01b      	beq.n	8002f40 <HAL_TIM_IRQHandler+0xb0>
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	f06f 0204 	mvn.w	r2, #4
 8002f10:	611a      	str	r2, [r3, #16]
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	2202      	movs	r2, #2
 8002f16:	771a      	strb	r2, [r3, #28]
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	699b      	ldr	r3, [r3, #24]
 8002f1e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d003      	beq.n	8002f2e <HAL_TIM_IRQHandler+0x9e>
 8002f26:	6878      	ldr	r0, [r7, #4]
 8002f28:	f000 f972 	bl	8003210 <HAL_TIM_IC_CaptureCallback>
 8002f2c:	e005      	b.n	8002f3a <HAL_TIM_IRQHandler+0xaa>
 8002f2e:	6878      	ldr	r0, [r7, #4]
 8002f30:	f000 f965 	bl	80031fe <HAL_TIM_OC_DelayElapsedCallback>
 8002f34:	6878      	ldr	r0, [r7, #4]
 8002f36:	f000 f974 	bl	8003222 <HAL_TIM_PWM_PulseFinishedCallback>
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	2200      	movs	r2, #0
 8002f3e:	771a      	strb	r2, [r3, #28]
 8002f40:	68bb      	ldr	r3, [r7, #8]
 8002f42:	f003 0308 	and.w	r3, r3, #8
 8002f46:	2b00      	cmp	r3, #0
 8002f48:	d020      	beq.n	8002f8c <HAL_TIM_IRQHandler+0xfc>
 8002f4a:	68fb      	ldr	r3, [r7, #12]
 8002f4c:	f003 0308 	and.w	r3, r3, #8
 8002f50:	2b00      	cmp	r3, #0
 8002f52:	d01b      	beq.n	8002f8c <HAL_TIM_IRQHandler+0xfc>
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	f06f 0208 	mvn.w	r2, #8
 8002f5c:	611a      	str	r2, [r3, #16]
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	2204      	movs	r2, #4
 8002f62:	771a      	strb	r2, [r3, #28]
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	69db      	ldr	r3, [r3, #28]
 8002f6a:	f003 0303 	and.w	r3, r3, #3
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d003      	beq.n	8002f7a <HAL_TIM_IRQHandler+0xea>
 8002f72:	6878      	ldr	r0, [r7, #4]
 8002f74:	f000 f94c 	bl	8003210 <HAL_TIM_IC_CaptureCallback>
 8002f78:	e005      	b.n	8002f86 <HAL_TIM_IRQHandler+0xf6>
 8002f7a:	6878      	ldr	r0, [r7, #4]
 8002f7c:	f000 f93f 	bl	80031fe <HAL_TIM_OC_DelayElapsedCallback>
 8002f80:	6878      	ldr	r0, [r7, #4]
 8002f82:	f000 f94e 	bl	8003222 <HAL_TIM_PWM_PulseFinishedCallback>
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	2200      	movs	r2, #0
 8002f8a:	771a      	strb	r2, [r3, #28]
 8002f8c:	68bb      	ldr	r3, [r7, #8]
 8002f8e:	f003 0310 	and.w	r3, r3, #16
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	d020      	beq.n	8002fd8 <HAL_TIM_IRQHandler+0x148>
 8002f96:	68fb      	ldr	r3, [r7, #12]
 8002f98:	f003 0310 	and.w	r3, r3, #16
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	d01b      	beq.n	8002fd8 <HAL_TIM_IRQHandler+0x148>
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	f06f 0210 	mvn.w	r2, #16
 8002fa8:	611a      	str	r2, [r3, #16]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	2208      	movs	r2, #8
 8002fae:	771a      	strb	r2, [r3, #28]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	69db      	ldr	r3, [r3, #28]
 8002fb6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d003      	beq.n	8002fc6 <HAL_TIM_IRQHandler+0x136>
 8002fbe:	6878      	ldr	r0, [r7, #4]
 8002fc0:	f000 f926 	bl	8003210 <HAL_TIM_IC_CaptureCallback>
 8002fc4:	e005      	b.n	8002fd2 <HAL_TIM_IRQHandler+0x142>
 8002fc6:	6878      	ldr	r0, [r7, #4]
 8002fc8:	f000 f919 	bl	80031fe <HAL_TIM_OC_DelayElapsedCallback>
 8002fcc:	6878      	ldr	r0, [r7, #4]
 8002fce:	f000 f928 	bl	8003222 <HAL_TIM_PWM_PulseFinishedCallback>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	2200      	movs	r2, #0
 8002fd6:	771a      	strb	r2, [r3, #28]
 8002fd8:	68bb      	ldr	r3, [r7, #8]
 8002fda:	f003 0301 	and.w	r3, r3, #1
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d00c      	beq.n	8002ffc <HAL_TIM_IRQHandler+0x16c>
 8002fe2:	68fb      	ldr	r3, [r7, #12]
 8002fe4:	f003 0301 	and.w	r3, r3, #1
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	d007      	beq.n	8002ffc <HAL_TIM_IRQHandler+0x16c>
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	f06f 0201 	mvn.w	r2, #1
 8002ff4:	611a      	str	r2, [r3, #16]
 8002ff6:	6878      	ldr	r0, [r7, #4]
 8002ff8:	f7fe fe29 	bl	8001c4e <HAL_TIM_PeriodElapsedCallback>
 8002ffc:	68bb      	ldr	r3, [r7, #8]
 8002ffe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003002:	2b00      	cmp	r3, #0
 8003004:	d00c      	beq.n	8003020 <HAL_TIM_IRQHandler+0x190>
 8003006:	68fb      	ldr	r3, [r7, #12]
 8003008:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800300c:	2b00      	cmp	r3, #0
 800300e:	d007      	beq.n	8003020 <HAL_TIM_IRQHandler+0x190>
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003018:	611a      	str	r2, [r3, #16]
 800301a:	6878      	ldr	r0, [r7, #4]
 800301c:	f000 fa6f 	bl	80034fe <HAL_TIMEx_BreakCallback>
 8003020:	68bb      	ldr	r3, [r7, #8]
 8003022:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003026:	2b00      	cmp	r3, #0
 8003028:	d00c      	beq.n	8003044 <HAL_TIM_IRQHandler+0x1b4>
 800302a:	68fb      	ldr	r3, [r7, #12]
 800302c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003030:	2b00      	cmp	r3, #0
 8003032:	d007      	beq.n	8003044 <HAL_TIM_IRQHandler+0x1b4>
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800303c:	611a      	str	r2, [r3, #16]
 800303e:	6878      	ldr	r0, [r7, #4]
 8003040:	f000 f8f8 	bl	8003234 <HAL_TIM_TriggerCallback>
 8003044:	68bb      	ldr	r3, [r7, #8]
 8003046:	f003 0320 	and.w	r3, r3, #32
 800304a:	2b00      	cmp	r3, #0
 800304c:	d00c      	beq.n	8003068 <HAL_TIM_IRQHandler+0x1d8>
 800304e:	68fb      	ldr	r3, [r7, #12]
 8003050:	f003 0320 	and.w	r3, r3, #32
 8003054:	2b00      	cmp	r3, #0
 8003056:	d007      	beq.n	8003068 <HAL_TIM_IRQHandler+0x1d8>
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	681b      	ldr	r3, [r3, #0]
 800305c:	f06f 0220 	mvn.w	r2, #32
 8003060:	611a      	str	r2, [r3, #16]
 8003062:	6878      	ldr	r0, [r7, #4]
 8003064:	f000 fa42 	bl	80034ec <HAL_TIMEx_CommutCallback>
 8003068:	bf00      	nop
 800306a:	3710      	adds	r7, #16
 800306c:	46bd      	mov	sp, r7
 800306e:	bd80      	pop	{r7, pc}

08003070 <HAL_TIM_ConfigClockSource>:
 8003070:	b580      	push	{r7, lr}
 8003072:	b084      	sub	sp, #16
 8003074:	af00      	add	r7, sp, #0
 8003076:	6078      	str	r0, [r7, #4]
 8003078:	6039      	str	r1, [r7, #0]
 800307a:	2300      	movs	r3, #0
 800307c:	73fb      	strb	r3, [r7, #15]
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003084:	2b01      	cmp	r3, #1
 8003086:	d101      	bne.n	800308c <HAL_TIM_ConfigClockSource+0x1c>
 8003088:	2302      	movs	r3, #2
 800308a:	e0b4      	b.n	80031f6 <HAL_TIM_ConfigClockSource+0x186>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	2201      	movs	r2, #1
 8003090:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	2202      	movs	r2, #2
 8003098:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	689b      	ldr	r3, [r3, #8]
 80030a2:	60bb      	str	r3, [r7, #8]
 80030a4:	68bb      	ldr	r3, [r7, #8]
 80030a6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80030aa:	60bb      	str	r3, [r7, #8]
 80030ac:	68bb      	ldr	r3, [r7, #8]
 80030ae:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80030b2:	60bb      	str	r3, [r7, #8]
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	68ba      	ldr	r2, [r7, #8]
 80030ba:	609a      	str	r2, [r3, #8]
 80030bc:	683b      	ldr	r3, [r7, #0]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80030c4:	d03e      	beq.n	8003144 <HAL_TIM_ConfigClockSource+0xd4>
 80030c6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80030ca:	f200 8087 	bhi.w	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 80030ce:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80030d2:	f000 8086 	beq.w	80031e2 <HAL_TIM_ConfigClockSource+0x172>
 80030d6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80030da:	d87f      	bhi.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 80030dc:	2b70      	cmp	r3, #112	@ 0x70
 80030de:	d01a      	beq.n	8003116 <HAL_TIM_ConfigClockSource+0xa6>
 80030e0:	2b70      	cmp	r3, #112	@ 0x70
 80030e2:	d87b      	bhi.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 80030e4:	2b60      	cmp	r3, #96	@ 0x60
 80030e6:	d050      	beq.n	800318a <HAL_TIM_ConfigClockSource+0x11a>
 80030e8:	2b60      	cmp	r3, #96	@ 0x60
 80030ea:	d877      	bhi.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 80030ec:	2b50      	cmp	r3, #80	@ 0x50
 80030ee:	d03c      	beq.n	800316a <HAL_TIM_ConfigClockSource+0xfa>
 80030f0:	2b50      	cmp	r3, #80	@ 0x50
 80030f2:	d873      	bhi.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 80030f4:	2b40      	cmp	r3, #64	@ 0x40
 80030f6:	d058      	beq.n	80031aa <HAL_TIM_ConfigClockSource+0x13a>
 80030f8:	2b40      	cmp	r3, #64	@ 0x40
 80030fa:	d86f      	bhi.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 80030fc:	2b30      	cmp	r3, #48	@ 0x30
 80030fe:	d064      	beq.n	80031ca <HAL_TIM_ConfigClockSource+0x15a>
 8003100:	2b30      	cmp	r3, #48	@ 0x30
 8003102:	d86b      	bhi.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 8003104:	2b20      	cmp	r3, #32
 8003106:	d060      	beq.n	80031ca <HAL_TIM_ConfigClockSource+0x15a>
 8003108:	2b20      	cmp	r3, #32
 800310a:	d867      	bhi.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 800310c:	2b00      	cmp	r3, #0
 800310e:	d05c      	beq.n	80031ca <HAL_TIM_ConfigClockSource+0x15a>
 8003110:	2b10      	cmp	r3, #16
 8003112:	d05a      	beq.n	80031ca <HAL_TIM_ConfigClockSource+0x15a>
 8003114:	e062      	b.n	80031dc <HAL_TIM_ConfigClockSource+0x16c>
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	6818      	ldr	r0, [r3, #0]
 800311a:	683b      	ldr	r3, [r7, #0]
 800311c:	6899      	ldr	r1, [r3, #8]
 800311e:	683b      	ldr	r3, [r7, #0]
 8003120:	685a      	ldr	r2, [r3, #4]
 8003122:	683b      	ldr	r3, [r7, #0]
 8003124:	68db      	ldr	r3, [r3, #12]
 8003126:	f000 f96a 	bl	80033fe <TIM_ETR_SetConfig>
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	689b      	ldr	r3, [r3, #8]
 8003130:	60bb      	str	r3, [r7, #8]
 8003132:	68bb      	ldr	r3, [r7, #8]
 8003134:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8003138:	60bb      	str	r3, [r7, #8]
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	68ba      	ldr	r2, [r7, #8]
 8003140:	609a      	str	r2, [r3, #8]
 8003142:	e04f      	b.n	80031e4 <HAL_TIM_ConfigClockSource+0x174>
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	6818      	ldr	r0, [r3, #0]
 8003148:	683b      	ldr	r3, [r7, #0]
 800314a:	6899      	ldr	r1, [r3, #8]
 800314c:	683b      	ldr	r3, [r7, #0]
 800314e:	685a      	ldr	r2, [r3, #4]
 8003150:	683b      	ldr	r3, [r7, #0]
 8003152:	68db      	ldr	r3, [r3, #12]
 8003154:	f000 f953 	bl	80033fe <TIM_ETR_SetConfig>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	689a      	ldr	r2, [r3, #8]
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003166:	609a      	str	r2, [r3, #8]
 8003168:	e03c      	b.n	80031e4 <HAL_TIM_ConfigClockSource+0x174>
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	6818      	ldr	r0, [r3, #0]
 800316e:	683b      	ldr	r3, [r7, #0]
 8003170:	6859      	ldr	r1, [r3, #4]
 8003172:	683b      	ldr	r3, [r7, #0]
 8003174:	68db      	ldr	r3, [r3, #12]
 8003176:	461a      	mov	r2, r3
 8003178:	f000 f8ca 	bl	8003310 <TIM_TI1_ConfigInputStage>
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	681b      	ldr	r3, [r3, #0]
 8003180:	2150      	movs	r1, #80	@ 0x50
 8003182:	4618      	mov	r0, r3
 8003184:	f000 f921 	bl	80033ca <TIM_ITRx_SetConfig>
 8003188:	e02c      	b.n	80031e4 <HAL_TIM_ConfigClockSource+0x174>
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	6818      	ldr	r0, [r3, #0]
 800318e:	683b      	ldr	r3, [r7, #0]
 8003190:	6859      	ldr	r1, [r3, #4]
 8003192:	683b      	ldr	r3, [r7, #0]
 8003194:	68db      	ldr	r3, [r3, #12]
 8003196:	461a      	mov	r2, r3
 8003198:	f000 f8e8 	bl	800336c <TIM_TI2_ConfigInputStage>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	2160      	movs	r1, #96	@ 0x60
 80031a2:	4618      	mov	r0, r3
 80031a4:	f000 f911 	bl	80033ca <TIM_ITRx_SetConfig>
 80031a8:	e01c      	b.n	80031e4 <HAL_TIM_ConfigClockSource+0x174>
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	6818      	ldr	r0, [r3, #0]
 80031ae:	683b      	ldr	r3, [r7, #0]
 80031b0:	6859      	ldr	r1, [r3, #4]
 80031b2:	683b      	ldr	r3, [r7, #0]
 80031b4:	68db      	ldr	r3, [r3, #12]
 80031b6:	461a      	mov	r2, r3
 80031b8:	f000 f8aa 	bl	8003310 <TIM_TI1_ConfigInputStage>
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	2140      	movs	r1, #64	@ 0x40
 80031c2:	4618      	mov	r0, r3
 80031c4:	f000 f901 	bl	80033ca <TIM_ITRx_SetConfig>
 80031c8:	e00c      	b.n	80031e4 <HAL_TIM_ConfigClockSource+0x174>
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	681a      	ldr	r2, [r3, #0]
 80031ce:	683b      	ldr	r3, [r7, #0]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	4619      	mov	r1, r3
 80031d4:	4610      	mov	r0, r2
 80031d6:	f000 f8f8 	bl	80033ca <TIM_ITRx_SetConfig>
 80031da:	e003      	b.n	80031e4 <HAL_TIM_ConfigClockSource+0x174>
 80031dc:	2301      	movs	r3, #1
 80031de:	73fb      	strb	r3, [r7, #15]
 80031e0:	e000      	b.n	80031e4 <HAL_TIM_ConfigClockSource+0x174>
 80031e2:	bf00      	nop
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	2201      	movs	r2, #1
 80031e8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	2200      	movs	r2, #0
 80031f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031f4:	7bfb      	ldrb	r3, [r7, #15]
 80031f6:	4618      	mov	r0, r3
 80031f8:	3710      	adds	r7, #16
 80031fa:	46bd      	mov	sp, r7
 80031fc:	bd80      	pop	{r7, pc}

080031fe <HAL_TIM_OC_DelayElapsedCallback>:
 80031fe:	b480      	push	{r7}
 8003200:	b083      	sub	sp, #12
 8003202:	af00      	add	r7, sp, #0
 8003204:	6078      	str	r0, [r7, #4]
 8003206:	bf00      	nop
 8003208:	370c      	adds	r7, #12
 800320a:	46bd      	mov	sp, r7
 800320c:	bc80      	pop	{r7}
 800320e:	4770      	bx	lr

08003210 <HAL_TIM_IC_CaptureCallback>:
 8003210:	b480      	push	{r7}
 8003212:	b083      	sub	sp, #12
 8003214:	af00      	add	r7, sp, #0
 8003216:	6078      	str	r0, [r7, #4]
 8003218:	bf00      	nop
 800321a:	370c      	adds	r7, #12
 800321c:	46bd      	mov	sp, r7
 800321e:	bc80      	pop	{r7}
 8003220:	4770      	bx	lr

08003222 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003222:	b480      	push	{r7}
 8003224:	b083      	sub	sp, #12
 8003226:	af00      	add	r7, sp, #0
 8003228:	6078      	str	r0, [r7, #4]
 800322a:	bf00      	nop
 800322c:	370c      	adds	r7, #12
 800322e:	46bd      	mov	sp, r7
 8003230:	bc80      	pop	{r7}
 8003232:	4770      	bx	lr

08003234 <HAL_TIM_TriggerCallback>:
 8003234:	b480      	push	{r7}
 8003236:	b083      	sub	sp, #12
 8003238:	af00      	add	r7, sp, #0
 800323a:	6078      	str	r0, [r7, #4]
 800323c:	bf00      	nop
 800323e:	370c      	adds	r7, #12
 8003240:	46bd      	mov	sp, r7
 8003242:	bc80      	pop	{r7}
 8003244:	4770      	bx	lr
	...

08003248 <TIM_Base_SetConfig>:
 8003248:	b480      	push	{r7}
 800324a:	b085      	sub	sp, #20
 800324c:	af00      	add	r7, sp, #0
 800324e:	6078      	str	r0, [r7, #4]
 8003250:	6039      	str	r1, [r7, #0]
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	60fb      	str	r3, [r7, #12]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	4a2b      	ldr	r2, [pc, #172]	@ (8003308 <TIM_Base_SetConfig+0xc0>)
 800325c:	4293      	cmp	r3, r2
 800325e:	d007      	beq.n	8003270 <TIM_Base_SetConfig+0x28>
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003266:	d003      	beq.n	8003270 <TIM_Base_SetConfig+0x28>
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	4a28      	ldr	r2, [pc, #160]	@ (800330c <TIM_Base_SetConfig+0xc4>)
 800326c:	4293      	cmp	r3, r2
 800326e:	d108      	bne.n	8003282 <TIM_Base_SetConfig+0x3a>
 8003270:	68fb      	ldr	r3, [r7, #12]
 8003272:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003276:	60fb      	str	r3, [r7, #12]
 8003278:	683b      	ldr	r3, [r7, #0]
 800327a:	685b      	ldr	r3, [r3, #4]
 800327c:	68fa      	ldr	r2, [r7, #12]
 800327e:	4313      	orrs	r3, r2
 8003280:	60fb      	str	r3, [r7, #12]
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	4a20      	ldr	r2, [pc, #128]	@ (8003308 <TIM_Base_SetConfig+0xc0>)
 8003286:	4293      	cmp	r3, r2
 8003288:	d007      	beq.n	800329a <TIM_Base_SetConfig+0x52>
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003290:	d003      	beq.n	800329a <TIM_Base_SetConfig+0x52>
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	4a1d      	ldr	r2, [pc, #116]	@ (800330c <TIM_Base_SetConfig+0xc4>)
 8003296:	4293      	cmp	r3, r2
 8003298:	d108      	bne.n	80032ac <TIM_Base_SetConfig+0x64>
 800329a:	68fb      	ldr	r3, [r7, #12]
 800329c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80032a0:	60fb      	str	r3, [r7, #12]
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	68db      	ldr	r3, [r3, #12]
 80032a6:	68fa      	ldr	r2, [r7, #12]
 80032a8:	4313      	orrs	r3, r2
 80032aa:	60fb      	str	r3, [r7, #12]
 80032ac:	68fb      	ldr	r3, [r7, #12]
 80032ae:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80032b2:	683b      	ldr	r3, [r7, #0]
 80032b4:	695b      	ldr	r3, [r3, #20]
 80032b6:	4313      	orrs	r3, r2
 80032b8:	60fb      	str	r3, [r7, #12]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	68fa      	ldr	r2, [r7, #12]
 80032be:	601a      	str	r2, [r3, #0]
 80032c0:	683b      	ldr	r3, [r7, #0]
 80032c2:	689a      	ldr	r2, [r3, #8]
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80032c8:	683b      	ldr	r3, [r7, #0]
 80032ca:	681a      	ldr	r2, [r3, #0]
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	629a      	str	r2, [r3, #40]	@ 0x28
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	4a0d      	ldr	r2, [pc, #52]	@ (8003308 <TIM_Base_SetConfig+0xc0>)
 80032d4:	4293      	cmp	r3, r2
 80032d6:	d103      	bne.n	80032e0 <TIM_Base_SetConfig+0x98>
 80032d8:	683b      	ldr	r3, [r7, #0]
 80032da:	691a      	ldr	r2, [r3, #16]
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	631a      	str	r2, [r3, #48]	@ 0x30
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	2201      	movs	r2, #1
 80032e4:	615a      	str	r2, [r3, #20]
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	691b      	ldr	r3, [r3, #16]
 80032ea:	f003 0301 	and.w	r3, r3, #1
 80032ee:	2b00      	cmp	r3, #0
 80032f0:	d005      	beq.n	80032fe <TIM_Base_SetConfig+0xb6>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	691b      	ldr	r3, [r3, #16]
 80032f6:	f023 0201 	bic.w	r2, r3, #1
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	611a      	str	r2, [r3, #16]
 80032fe:	bf00      	nop
 8003300:	3714      	adds	r7, #20
 8003302:	46bd      	mov	sp, r7
 8003304:	bc80      	pop	{r7}
 8003306:	4770      	bx	lr
 8003308:	40012c00 	.word	0x40012c00
 800330c:	40000400 	.word	0x40000400

08003310 <TIM_TI1_ConfigInputStage>:
 8003310:	b480      	push	{r7}
 8003312:	b087      	sub	sp, #28
 8003314:	af00      	add	r7, sp, #0
 8003316:	60f8      	str	r0, [r7, #12]
 8003318:	60b9      	str	r1, [r7, #8]
 800331a:	607a      	str	r2, [r7, #4]
 800331c:	68fb      	ldr	r3, [r7, #12]
 800331e:	6a1b      	ldr	r3, [r3, #32]
 8003320:	617b      	str	r3, [r7, #20]
 8003322:	68fb      	ldr	r3, [r7, #12]
 8003324:	6a1b      	ldr	r3, [r3, #32]
 8003326:	f023 0201 	bic.w	r2, r3, #1
 800332a:	68fb      	ldr	r3, [r7, #12]
 800332c:	621a      	str	r2, [r3, #32]
 800332e:	68fb      	ldr	r3, [r7, #12]
 8003330:	699b      	ldr	r3, [r3, #24]
 8003332:	613b      	str	r3, [r7, #16]
 8003334:	693b      	ldr	r3, [r7, #16]
 8003336:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800333a:	613b      	str	r3, [r7, #16]
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	011b      	lsls	r3, r3, #4
 8003340:	693a      	ldr	r2, [r7, #16]
 8003342:	4313      	orrs	r3, r2
 8003344:	613b      	str	r3, [r7, #16]
 8003346:	697b      	ldr	r3, [r7, #20]
 8003348:	f023 030a 	bic.w	r3, r3, #10
 800334c:	617b      	str	r3, [r7, #20]
 800334e:	697a      	ldr	r2, [r7, #20]
 8003350:	68bb      	ldr	r3, [r7, #8]
 8003352:	4313      	orrs	r3, r2
 8003354:	617b      	str	r3, [r7, #20]
 8003356:	68fb      	ldr	r3, [r7, #12]
 8003358:	693a      	ldr	r2, [r7, #16]
 800335a:	619a      	str	r2, [r3, #24]
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	697a      	ldr	r2, [r7, #20]
 8003360:	621a      	str	r2, [r3, #32]
 8003362:	bf00      	nop
 8003364:	371c      	adds	r7, #28
 8003366:	46bd      	mov	sp, r7
 8003368:	bc80      	pop	{r7}
 800336a:	4770      	bx	lr

0800336c <TIM_TI2_ConfigInputStage>:
 800336c:	b480      	push	{r7}
 800336e:	b087      	sub	sp, #28
 8003370:	af00      	add	r7, sp, #0
 8003372:	60f8      	str	r0, [r7, #12]
 8003374:	60b9      	str	r1, [r7, #8]
 8003376:	607a      	str	r2, [r7, #4]
 8003378:	68fb      	ldr	r3, [r7, #12]
 800337a:	6a1b      	ldr	r3, [r3, #32]
 800337c:	617b      	str	r3, [r7, #20]
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	6a1b      	ldr	r3, [r3, #32]
 8003382:	f023 0210 	bic.w	r2, r3, #16
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	621a      	str	r2, [r3, #32]
 800338a:	68fb      	ldr	r3, [r7, #12]
 800338c:	699b      	ldr	r3, [r3, #24]
 800338e:	613b      	str	r3, [r7, #16]
 8003390:	693b      	ldr	r3, [r7, #16]
 8003392:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003396:	613b      	str	r3, [r7, #16]
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	031b      	lsls	r3, r3, #12
 800339c:	693a      	ldr	r2, [r7, #16]
 800339e:	4313      	orrs	r3, r2
 80033a0:	613b      	str	r3, [r7, #16]
 80033a2:	697b      	ldr	r3, [r7, #20]
 80033a4:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80033a8:	617b      	str	r3, [r7, #20]
 80033aa:	68bb      	ldr	r3, [r7, #8]
 80033ac:	011b      	lsls	r3, r3, #4
 80033ae:	697a      	ldr	r2, [r7, #20]
 80033b0:	4313      	orrs	r3, r2
 80033b2:	617b      	str	r3, [r7, #20]
 80033b4:	68fb      	ldr	r3, [r7, #12]
 80033b6:	693a      	ldr	r2, [r7, #16]
 80033b8:	619a      	str	r2, [r3, #24]
 80033ba:	68fb      	ldr	r3, [r7, #12]
 80033bc:	697a      	ldr	r2, [r7, #20]
 80033be:	621a      	str	r2, [r3, #32]
 80033c0:	bf00      	nop
 80033c2:	371c      	adds	r7, #28
 80033c4:	46bd      	mov	sp, r7
 80033c6:	bc80      	pop	{r7}
 80033c8:	4770      	bx	lr

080033ca <TIM_ITRx_SetConfig>:
 80033ca:	b480      	push	{r7}
 80033cc:	b085      	sub	sp, #20
 80033ce:	af00      	add	r7, sp, #0
 80033d0:	6078      	str	r0, [r7, #4]
 80033d2:	6039      	str	r1, [r7, #0]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	689b      	ldr	r3, [r3, #8]
 80033d8:	60fb      	str	r3, [r7, #12]
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80033e0:	60fb      	str	r3, [r7, #12]
 80033e2:	683a      	ldr	r2, [r7, #0]
 80033e4:	68fb      	ldr	r3, [r7, #12]
 80033e6:	4313      	orrs	r3, r2
 80033e8:	f043 0307 	orr.w	r3, r3, #7
 80033ec:	60fb      	str	r3, [r7, #12]
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	68fa      	ldr	r2, [r7, #12]
 80033f2:	609a      	str	r2, [r3, #8]
 80033f4:	bf00      	nop
 80033f6:	3714      	adds	r7, #20
 80033f8:	46bd      	mov	sp, r7
 80033fa:	bc80      	pop	{r7}
 80033fc:	4770      	bx	lr

080033fe <TIM_ETR_SetConfig>:
 80033fe:	b480      	push	{r7}
 8003400:	b087      	sub	sp, #28
 8003402:	af00      	add	r7, sp, #0
 8003404:	60f8      	str	r0, [r7, #12]
 8003406:	60b9      	str	r1, [r7, #8]
 8003408:	607a      	str	r2, [r7, #4]
 800340a:	603b      	str	r3, [r7, #0]
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	689b      	ldr	r3, [r3, #8]
 8003410:	617b      	str	r3, [r7, #20]
 8003412:	697b      	ldr	r3, [r7, #20]
 8003414:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003418:	617b      	str	r3, [r7, #20]
 800341a:	683b      	ldr	r3, [r7, #0]
 800341c:	021a      	lsls	r2, r3, #8
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	431a      	orrs	r2, r3
 8003422:	68bb      	ldr	r3, [r7, #8]
 8003424:	4313      	orrs	r3, r2
 8003426:	697a      	ldr	r2, [r7, #20]
 8003428:	4313      	orrs	r3, r2
 800342a:	617b      	str	r3, [r7, #20]
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	697a      	ldr	r2, [r7, #20]
 8003430:	609a      	str	r2, [r3, #8]
 8003432:	bf00      	nop
 8003434:	371c      	adds	r7, #28
 8003436:	46bd      	mov	sp, r7
 8003438:	bc80      	pop	{r7}
 800343a:	4770      	bx	lr

0800343c <HAL_TIMEx_MasterConfigSynchronization>:
 800343c:	b480      	push	{r7}
 800343e:	b085      	sub	sp, #20
 8003440:	af00      	add	r7, sp, #0
 8003442:	6078      	str	r0, [r7, #4]
 8003444:	6039      	str	r1, [r7, #0]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800344c:	2b01      	cmp	r3, #1
 800344e:	d101      	bne.n	8003454 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003450:	2302      	movs	r3, #2
 8003452:	e041      	b.n	80034d8 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	2201      	movs	r2, #1
 8003458:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	2202      	movs	r2, #2
 8003460:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	685b      	ldr	r3, [r3, #4]
 800346a:	60fb      	str	r3, [r7, #12]
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	689b      	ldr	r3, [r3, #8]
 8003472:	60bb      	str	r3, [r7, #8]
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800347a:	60fb      	str	r3, [r7, #12]
 800347c:	683b      	ldr	r3, [r7, #0]
 800347e:	681b      	ldr	r3, [r3, #0]
 8003480:	68fa      	ldr	r2, [r7, #12]
 8003482:	4313      	orrs	r3, r2
 8003484:	60fb      	str	r3, [r7, #12]
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	68fa      	ldr	r2, [r7, #12]
 800348c:	605a      	str	r2, [r3, #4]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	4a14      	ldr	r2, [pc, #80]	@ (80034e4 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8003494:	4293      	cmp	r3, r2
 8003496:	d009      	beq.n	80034ac <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80034a0:	d004      	beq.n	80034ac <HAL_TIMEx_MasterConfigSynchronization+0x70>
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	4a10      	ldr	r2, [pc, #64]	@ (80034e8 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 80034a8:	4293      	cmp	r3, r2
 80034aa:	d10c      	bne.n	80034c6 <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 80034ac:	68bb      	ldr	r3, [r7, #8]
 80034ae:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80034b2:	60bb      	str	r3, [r7, #8]
 80034b4:	683b      	ldr	r3, [r7, #0]
 80034b6:	685b      	ldr	r3, [r3, #4]
 80034b8:	68ba      	ldr	r2, [r7, #8]
 80034ba:	4313      	orrs	r3, r2
 80034bc:	60bb      	str	r3, [r7, #8]
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	68ba      	ldr	r2, [r7, #8]
 80034c4:	609a      	str	r2, [r3, #8]
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	2201      	movs	r2, #1
 80034ca:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	2200      	movs	r2, #0
 80034d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80034d6:	2300      	movs	r3, #0
 80034d8:	4618      	mov	r0, r3
 80034da:	3714      	adds	r7, #20
 80034dc:	46bd      	mov	sp, r7
 80034de:	bc80      	pop	{r7}
 80034e0:	4770      	bx	lr
 80034e2:	bf00      	nop
 80034e4:	40012c00 	.word	0x40012c00
 80034e8:	40000400 	.word	0x40000400

080034ec <HAL_TIMEx_CommutCallback>:
 80034ec:	b480      	push	{r7}
 80034ee:	b083      	sub	sp, #12
 80034f0:	af00      	add	r7, sp, #0
 80034f2:	6078      	str	r0, [r7, #4]
 80034f4:	bf00      	nop
 80034f6:	370c      	adds	r7, #12
 80034f8:	46bd      	mov	sp, r7
 80034fa:	bc80      	pop	{r7}
 80034fc:	4770      	bx	lr

080034fe <HAL_TIMEx_BreakCallback>:
 80034fe:	b480      	push	{r7}
 8003500:	b083      	sub	sp, #12
 8003502:	af00      	add	r7, sp, #0
 8003504:	6078      	str	r0, [r7, #4]
 8003506:	bf00      	nop
 8003508:	370c      	adds	r7, #12
 800350a:	46bd      	mov	sp, r7
 800350c:	bc80      	pop	{r7}
 800350e:	4770      	bx	lr

08003510 <memset>:
 8003510:	4603      	mov	r3, r0
 8003512:	4402      	add	r2, r0
 8003514:	4293      	cmp	r3, r2
 8003516:	d100      	bne.n	800351a <memset+0xa>
 8003518:	4770      	bx	lr
 800351a:	f803 1b01 	strb.w	r1, [r3], #1
 800351e:	e7f9      	b.n	8003514 <memset+0x4>

08003520 <__libc_init_array>:
 8003520:	b570      	push	{r4, r5, r6, lr}
 8003522:	2600      	movs	r6, #0
 8003524:	4d0c      	ldr	r5, [pc, #48]	@ (8003558 <__libc_init_array+0x38>)
 8003526:	4c0d      	ldr	r4, [pc, #52]	@ (800355c <__libc_init_array+0x3c>)
 8003528:	1b64      	subs	r4, r4, r5
 800352a:	10a4      	asrs	r4, r4, #2
 800352c:	42a6      	cmp	r6, r4
 800352e:	d109      	bne.n	8003544 <__libc_init_array+0x24>
 8003530:	f000 f81a 	bl	8003568 <_init>
 8003534:	2600      	movs	r6, #0
 8003536:	4d0a      	ldr	r5, [pc, #40]	@ (8003560 <__libc_init_array+0x40>)
 8003538:	4c0a      	ldr	r4, [pc, #40]	@ (8003564 <__libc_init_array+0x44>)
 800353a:	1b64      	subs	r4, r4, r5
 800353c:	10a4      	asrs	r4, r4, #2
 800353e:	42a6      	cmp	r6, r4
 8003540:	d105      	bne.n	800354e <__libc_init_array+0x2e>
 8003542:	bd70      	pop	{r4, r5, r6, pc}
 8003544:	f855 3b04 	ldr.w	r3, [r5], #4
 8003548:	4798      	blx	r3
 800354a:	3601      	adds	r6, #1
 800354c:	e7ee      	b.n	800352c <__libc_init_array+0xc>
 800354e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003552:	4798      	blx	r3
 8003554:	3601      	adds	r6, #1
 8003556:	e7f2      	b.n	800353e <__libc_init_array+0x1e>
 8003558:	080035a4 	.word	0x080035a4
 800355c:	080035a4 	.word	0x080035a4
 8003560:	080035a4 	.word	0x080035a4
 8003564:	080035a8 	.word	0x080035a8

08003568 <_init>:
 8003568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800356a:	bf00      	nop
 800356c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800356e:	bc08      	pop	{r3}
 8003570:	469e      	mov	lr, r3
 8003572:	4770      	bx	lr

08003574 <_fini>:
 8003574:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003576:	bf00      	nop
 8003578:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800357a:	bc08      	pop	{r3}
 800357c:	469e      	mov	lr, r3
 800357e:	4770      	bx	lr
